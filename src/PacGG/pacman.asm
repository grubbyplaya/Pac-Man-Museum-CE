.ASSUME ADL=0

; Ports
#define Port_StartButtonAndRegion $00
#define Port_SerialRaw $02
#define Port_SerialSend $03
#define Port_SerialReceive $04
#define Port_SerialStatus $05
#define Port_Stereo $06
#define Port_PSG $7F
#define Port_VDPData $BE
#define Port_VDPAddress $BF

#define DrawScreenPTR $E000

; Input Ports
#define Port_VCounter $7E
#define Port_VDPStatus $BF
#define Port_IOPort1 $DC
#define Port_IOPort2 $DD

#define VDP_HScroll	$D418
#define VDP_VScroll	$D419

.db $FF
.ORG 0

.dl MuseumHeader
.dl MuseumIcon
.dl HeaderEnd

MuseumHeader:
	.db $85, "Pac-Man (GG Ver.)",0
MuseumIcon:
#import "src/includes/gfx/logos/gg.bin"
HeaderEnd:
.ORG $0000

LABEL_0:
	di
	im 1
	jp LABEL_F0

; Data from 6 to 7 (2 bytes)
.db $00, $00

LABEL_8:
	push de
	ld e, a
	ld d, $00
	add hl, de
	add hl, de
	pop de
	ret

LABEL_10:
	rst $08	; LABEL_8
	ld a, (hl)
	inc hl
	ld h, (hl)
	ld l, a
	ret

; Data from 16 to 17 (2 bytes)
.db $00, $00

LABEL_18:
	rst $10	; LABEL_10
	or h
	ret z
	jp (hl)

; Data from 1C to 37 (28 bytes)
LABEL_1C:
.db $00, $00, $00, $00, $00, $00, $06, $80, $80, $81, $FF, $82, $FF, $83, $FF, $84
.db $FF, $85, $FB, $86, $00, $87, $00, $88, $00, $89, $FF, $8A

LABEL_38:
	push af
	push bc
	push de
	push hl
	push ix
	push iy
	ld.lil hl, romStart+$DF00
	ld.lil de, SegaVRAM+$3F00
	ld bc, $0040
	ldir.lil
	jr HandleInterrupt

.FILL 16, $00

LABEL_66:
	push af
	push hl
	ld a, (Port_SerialStatus)
	and $04
	jr nz, +_
	ld ($C117), a
	ld hl, $C105
	ld a, ($C115)
	add a, l
	ld l, a
	ld a, (Port_SerialReceive)
	cp $FF
	jr z, +_
	ld (hl), a
	ld a, ($C115)
	inc a
	and $0F
	ld ($C115), a
_:	pop hl
	pop af
	retn

HandleInterrupt:
	di
	ld.lil de, SegaVRAM+$3F80
	ld c, $80
	ldir.lil

	ld	hl, (VDP_HScroll)
	ld	ix, DrawTilemapTrig
	ld	a, ($C118)
	add	a, b			; apply adjustment value
	cp	l
	jr	z, +_
	set	1, (ix)
_:	ld	(VDP_HScroll), a
	
	; Set the background Y-scroll value (write to register VDP(9))
	ld	a, ($C119)
	add	a, c			; apply adjustment value
	cp	h
	jr	z, +_
	set	1, (ix)
_:	ld	(VDP_VScroll), a

_:	call LABEL_B5EA
	ld hl, $C101
	ld.lil a, (KbdG1)
	and $40
	rla
	ld c, a
	ld.lil a, (KbdG7)
	rla
	bit 4, a			; is the up key pressed?
	jr z, +_			; jump if it isn't
	xor $11			; move the flag to bit 0			
_:	or c
	ld c, a
	xor (hl)
	and c
	ld ($C102), a
	ld (hl), c
	ld a, (Port_IOPort2)
	cpl
	and $0F
	inc hl
	inc hl
	rl b
	rl a
	rl b
	rl a
	ld b, a
	xor (hl)
	and b
	ld ($C104), a
	ld (hl), b
	ld hl, $C11A
	inc (hl)
	xor a
	ld ($C100), a

	call.lil CheckForExit

	ld.lil	hl, $E30028
	ld.lil	(hl), $08
	ld.lil	sp, $D1A745		; reset SPL
	pop iy
	pop ix
	pop hl
	pop de
	pop bc
	pop af
	ei
	ret

FrameCounter:
.db $00

LABEL_F0:
	call ClearTileCache
	ld a, $C9
	ld ($FFFF), a
	ld sp, $DFF0

	; load DrawScreen
	ld	hl, DrawScreen
	ld	de, DrawScreenPTR
	ld	bc, $0600
	ldir

	ld hl, $C000
	ld de, $C000 + 1
	ld bc, $1FEF
	ld (hl), l
	ldir

	ld a, $FF
	; ld (Port_SerialRaw), a
	ld a, $38
	; ld (Port_SerialStatus), a

	ld.lil hl, SegaVRAM
	ld.lil de, SegaVRAM+1
	ld bc, $4000
	ld.lil (hl), $00
	ldir.lil

	ld.lil hl, romStart + $C000
	ld.lil de, CRAM
	ld.lil (hl), $00
	ld c, $40
	ldir.lil

	call LABEL_B52D
	ld.lil hl, romStart + DATA_3FC
	ld.lil de, CRAM
	ld c, $40
	ldir.lil

	ld.lil hl, romStart + DATA_77A4
	ld.lil de, SegaVRAM
	ld bc, $03A0
	ldir.lil

	ld.lil hl, romStart + DATA_34A4
	ld bc, $0180
	ldir.lil


	ld.lil de, SegaVRAM+$3740
	ld c, $C0
	ldir.lil

	ld hl, DATA_26D
	ld de, $C20C
	ld bc, $0010
	ldir

	ld a, $01
	ld ($C100), a
	ld a, (Port_SerialReceive)
LABEL_1AB:
	di
	call UpdateTiles

	ld hl, FrameCounter
	inc (hl)
	ld a, (hl)
	rra
	call nc, DrawScreenPTR

	ei
_:	ld a, ($C100)
	and a
	jr nz, -_
	inc a
	ld ($C100), a
	call LABEL_81D4
	ld hl, $DF00
	ld de, $DF00 + 1
	ld bc, $003F
	ld (hl), $E0
	ldir
	ld a, ($C146)
	and a
	jp z, LABEL_260
	ld a, ($C11F)
	and a
	jr z, LABEL_232
	ld a, ($C144)
	ld b, a
	ld a, ($C145)
	or b
	jr z, ++_
	call LABEL_2A8
	ld a, ($C144)
	and a
	jr z, +_
	ld a, ($C102)
	and $80
	jr z, LABEL_1AB
	xor a
	ld ($C144), a
	ld a, $04
	ld ($C135), a
	call LABEL_B5E2
	jr LABEL_260

_:	ld a, ($C13D)
	cp $08
	jr z, LABEL_1AB
	xor a
	ld ($C145), a
	call LABEL_B5E2
	jr LABEL_260

_:	ld a, ($C102)
	and $80
	jr z, +_
	ld ($C144), a
	ld a, $11
	call LABEL_B5CF
	ld a, $08
	ld ($C135), a
	jp LABEL_1AB

_:	ld a, ($C13D)
	cp $08
	jr nz, LABEL_260
	ld ($C145), a
	ld a, $11
	call LABEL_B5CF
	jp LABEL_1AB

LABEL_232:
	ld a, ($C144)
	and a
	jr z, +_
	call LABEL_2A8
	ld a, ($C102)
	and $80
	jp z, LABEL_1AB
	call LABEL_B5E2
	xor a
	ld ($C144), a
	jr LABEL_260

_:	ld a, ($C102)
	and $80
	jr z, LABEL_260
	ld a, $11
	call LABEL_B5CF
	ld a, $01
	ld ($C144), a
	jp LABEL_1AB

LABEL_260:
	xor a
	ld ($C120), a
	call +_
	call LABEL_295
	jp LABEL_1AB

; Data from 26D to 27C (16 bytes)
DATA_26D:
.dw LABEL_9F40
.fill 14, $00

_:	push af
	push hl
	ld hl, ($C11C)
	ld a, h
	rrc a
	rrc a
	xor l
	cpl
	rr a
	rl l
	rl h
	ld ($C11C), hl
	pop hl
	pop af
	ret

LABEL_295:
	ld a, ($C11B)
	ld hl, $C20C
	rst $18	; LABEL_18
	ld a, ($C11B)
	inc a
	and $07
	ld ($C11B), a
	jr nz, LABEL_295
	ret

LABEL_2A8:
	ld hl, DATA_2BC
	ld de, $DF00
	ld bc, $0005
	ldir
	ld de, $DF40
	ld bc, $000A
	ldir
	ld a, $01
	ld (DrawSATTrig), a
	ret

; Data from 2BC to 2CA (15 bytes)
DATA_2BC:
.db $58, $58, $58, $58, $58, $6C, $0B, $74, $1D, $7C, $0A, $84, $21, $8C, $20

; Data from 2CB to 3FB (305 bytes)
DATA_2CB:
.db $99, $00, $89, $05, $00, $89, $05, $85, $00, $05, $83, $00, $05, $83, $00, $05
.db $00, $05, $83, $00, $05, $83, $00, $05, $85, $00, $06, $83, $00, $05, $83, $00
.db $05, $00, $05, $83, $00, $05, $83, $00, $06, $85, $00, $05, $83, $00, $05, $83
.db $00, $05, $00, $05, $83, $00, $05, $83, $00, $05, $85, $00, $93, $05, $85, $00
.db $05, $83, $00, $05, $00, $05, $85, $00, $05, $00, $05, $83, $00, $05, $85, $00
.db $05, $83, $00, $05, $00, $05, $85, $00, $05, $00, $05, $83, $00, $05, $85, $00
.db $85, $05, $00, $83, $05, $00, $83, $05, $00, $85, $05, $89, $00, $05, $83, $00
.db $02, $00, $02, $83, $00, $05, $8D, $00, $05, $00, $87, $04, $00, $05, $8D, $00
.db $05, $00, $04, $00, $00, $01, $00, $00, $04, $00, $05, $8D, $00, $05, $00, $04
.db $00, $00, $01, $00, $00, $04, $00, $05, $88, $00, $85, $04, $05, $04, $04, $00
.db $00, $01, $00, $00, $04, $04, $05, $87, $04, $86, $00, $05, $00, $04, $85, $00
.db $04, $00, $05, $8D, $00, $05, $00, $87, $04, $00, $05, $8D, $00, $05, $00, $04
.db $85, $00, $04, $00, $05, $8D, $00, $05, $00, $04, $85, $00, $04, $00, $05, $89
.db $00, $89, $05, $00, $89, $05, $85, $00, $05, $83, $00, $05, $83, $00, $03, $00
.db $03, $83, $00, $05, $83, $00, $05, $85, $00, $06, $05, $05, $00, $85, $05, $04
.db $85, $05, $00, $05, $05, $06, $87, $00, $05, $00, $05, $00, $05, $85, $00, $05
.db $00, $05, $00, $05, $89, $00, $05, $00, $05, $00, $05, $85, $00, $05, $00, $05
.db $00, $05, $87, $00, $85, $05, $00, $83, $05, $00, $83, $05, $00, $85, $05, $85
.db $00, $05, $87, $00, $05, $00, $05, $87, $00, $05, $85, $00, $93, $05, $9C, $00
.db $FF

; Data from 3FC to 43B (64 bytes)
DATA_3FC:
.dw $0000, $FFFF, $7C00, $FD97, $80DF, $0000, $FFE0, $001F
.dw $FF60, $FF60, $4C1F, $7E60, $5C00, $0011, $FFE0, $FFFF
.dw $0000, $4E60, $7C00, $3080, $FFFF, $83E0, $7E60, $83FF
.dw $001F, $FD97, $001F, $5EF7, $B180, $0000, $FFE0, $FFFF

; Data from 43C to 765 (810 bytes)
DATA_43C:
.db $00, $01, $09, $80, $01, $01, $06, $01, $09, $80, $01, $01, $00, $03, $02, $01
.db $09, $80, $03, $01, $02, $01, $09, $80, $03, $01, $02, $01, $02, $01, $03, $01
.db $00, $01, $01, $01, $00, $03, $03, $01, $00, $01, $01, $01, $00, $03, $03, $01
.db $02, $01, $03, $01, $00, $01, $01, $01, $00, $03, $03, $01, $00, $01, $01, $01
.db $00, $03, $03, $01, $02, $01, $02, $01, $04, $01, $02, $01, $05, $01, $02, $01
.db $03, $01, $02, $01, $05, $01, $02, $01, $03, $01, $02, $01, $03, $01, $02, $01
.db $05, $01, $02, $01, $03, $01, $02, $01, $05, $01, $02, $01, $04, $03, $02, $01
.db $02, $01, $03, $01, $00, $05, $01, $01, $00, $07, $03, $01, $00, $05, $01, $01
.db $00, $07, $03, $01, $07, $05, $03, $01, $00, $05, $01, $01, $00, $07, $03, $01
.db $00, $05, $01, $01, $00, $07, $03, $01, $02, $01, $02, $01, $13, $80, $03, $01
.db $02, $01, $02, $01, $03, $01, $00, $01, $01, $01, $00, $03, $03, $01, $07, $01
.db $03, $01, $00, $01, $03, $80, $01, $01, $00, $03, $03, $01, $07, $01, $03, $01
.db $00, $01, $01, $01, $00, $03, $03, $01, $02, $01, $02, $01, $03, $01, $00, $05
.db $01, $01, $00, $07, $03, $01, $02, $01, $03, $01, $00, $05, $01, $01, $06, $01
.db $01, $01, $00, $07, $03, $01, $02, $01, $03, $01, $00, $05, $01, $01, $00, $07
.db $03, $01, $02, $01, $02, $01, $05, $80, $03, $01, $02, $01, $03, $80, $03, $01
.db $02, $01, $03, $80, $03, $01, $02, $01, $05, $80, $03, $01, $02, $01, $00, $05
.db $03, $80, $01, $01, $00, $03, $03, $01, $08, $01, $01, $01, $09, $01, $05, $01
.db $07, $05, $05, $01, $09, $03, $01, $01, $08, $03, $03, $01, $00, $01, $03, $80
.db $01, $01, $00, $07, $04, $80, $05, $01, $02, $01, $03, $01, $02, $01, $07, $80
.db $05, $01, $02, $01, $03, $01, $02, $01, $08, $80, $05, $01, $02, $01, $03, $01
.db $02, $01, $05, $01, $00, $01, $0A, $01, $0B, $05, $0A, $03, $00, $03, $05, $01
.db $02, $01, $03, $01, $02, $01, $04, $80, $05, $01, $09, $03, $03, $80, $01, $01
.db $00, $07, $03, $01, $07, $05, $05, $01, $02, $01, $03, $80, $05, $01, $02, $01
.db $05, $01, $07, $05, $03, $01, $00, $05, $03, $80, $01, $01, $09, $01, $05, $80
.db $05, $01, $03, $01, $05, $01, $05, $01, $02, $01, $03, $80, $05, $01, $02, $01
.db $05, $01, $05, $01, $03, $01, $05, $80, $05, $01, $09, $03, $03, $80, $01, $01
.db $00, $03, $03, $01, $07, $01, $05, $01, $00, $05, $03, $80, $01, $01, $00, $07
.db $05, $01, $07, $01, $03, $01, $00, $01, $03, $80, $01, $01, $09, $01, $04, $80
.db $05, $01, $02, $01, $03, $01, $02, $01, $07, $80, $05, $01, $02, $01, $03, $01
.db $02, $01, $04, $80, $05, $01, $04, $80, $05, $01, $02, $01, $03, $01, $02, $01
.db $05, $01, $00, $01, $03, $80, $01, $01, $00, $03, $05, $01, $02, $01, $03, $01
.db $02, $01, $04, $80, $05, $01, $00, $01, $03, $80, $01, $01, $00, $07, $03, $01
.db $07, $05, $05, $01, $00, $05, $01, $01, $06, $01, $01, $01, $00, $07, $05, $01
.db $07, $05, $03, $01, $00, $05, $03, $80, $01, $01, $00, $03, $02, $01, $09, $80
.db $03, $01, $02, $01, $09, $80, $03, $01, $02, $01, $02, $01, $03, $01, $09, $03
.db $01, $01, $00, $03, $03, $01, $09, $03, $01, $01, $09, $01, $03, $01, $07, $05
.db $03, $01, $09, $03, $01, $01, $09, $01, $03, $01, $00, $01, $01, $01, $09, $01
.db $03, $01, $02, $01, $02, $01, $04, $01, $03, $01, $03, $01, $02, $01, $05, $80
.db $03, $01, $05, $01, $05, $80, $03, $01, $02, $01, $03, $01, $03, $01, $04, $03
.db $02, $01, $08, $01, $01, $01, $00, $03, $03, $01, $02, $01, $03, $01, $07, $01
.db $03, $01, $00, $01, $03, $80, $01, $01, $00, $03, $03, $01, $07, $01, $03, $01
.db $02, $01, $03, $01, $00, $01, $01, $01, $08, $03, $08, $01, $01, $01, $00, $07
.db $03, $01, $07, $05, $03, $01, $02, $01, $03, $01, $00, $05, $01, $01, $06, $01
.db $01, $01, $00, $07, $03, $01, $02, $01, $03, $01, $07, $05, $03, $01, $00, $05
.db $01, $01, $08, $03, $02, $01, $05, $80, $03, $01, $02, $01, $03, $80, $03, $01
.db $02, $01, $03, $80, $03, $01, $02, $01, $05, $80, $03, $01, $02, $01, $02, $01
.db $03, $01, $09, $03, $01, $01, $01, $01, $01, $01, $06, $05, $01, $01, $09, $01
.db $03, $01, $07, $05, $03, $01, $09, $03, $01, $01, $06, $05, $01, $01, $01, $01
.db $01, $01, $09, $01, $03, $01, $02, $01, $02, $01, $13, $80, $03, $01, $02, $01
.db $00, $05, $13, $80, $01, $01, $00, $07, $FF, $FF

; Data from 766 to 8E5 (384 bytes)
DATA_766:
.db $00, $00, $00, $00, $00, $00, $00, $00, $0F, $0F, $0F, $00, $10, $10, $10, $00
.db $20, $20, $20, $00, $23, $23, $23, $00, $24, $24, $24, $00, $24, $24, $24
.fill 9, $00
.db $FF, $FF, $FF
.fill 9, $00
.db $FF, $FF, $FF
.fill 9, $00
.db $24, $24, $24, $00, $24, $24, $24, $00, $24, $24, $24, $00, $24, $24, $24, $00
.db $24, $24, $24, $00, $24, $24, $24, $00, $24, $24, $24, $00, $24, $24, $24
.fill 16, $00
.db $18, $00, $00, $00, $18
.fill 16, $00
.db $38, $00, $00, $38, $7C, $00, $00, $7C, $FE, $00, $00, $FE, $FE, $00, $00, $FE
.db $FE, $00, $00, $FE, $7C, $00, $00, $7C, $38, $00, $00, $38
.fill 40, $00
.db $FF, $FF, $FF
.fill 9, $00
.db $C3, $C3, $C3, $00, $24, $24, $24, $00, $24, $24, $24
.fill 13, $00
.db $18, $18, $18, $00, $24, $24, $24, $00, $24, $24, $24, $00, $24, $24, $24, $00
.db $24, $24, $24, $00, $24, $24, $24, $00, $24, $24, $24, $00, $23, $23, $23, $00
.db $20, $20, $20, $00, $20, $20, $20, $00, $23, $23, $23, $00, $24, $24, $24, $00
.db $24, $24, $24
.fill 9, $00
.db $F0, $F0, $F0, $00, $08, $08, $08, $00, $08, $08, $08, $00, $F0, $F0, $F0
.fill 17, $00
.db $F0, $F0, $F0, $00, $08, $08, $08, $00, $0F, $0F, $0F, $00, $F0, $F0, $F0
.fill 21, $00
.db $FF, $FF, $FF
.fill 17, $00

; Data from 8E6 to A9F (442 bytes)
DATA_8E6:
.db $00, $00, $01, $04, $02, $00, $01, $06, $0C, $06, $0C, $04, $0D, $00, $02, $00
.db $01, $06, $0C, $06, $0C, $04, $01, $04, $1F, $00, $03, $02, $04, $00, $05, $06
.db $06, $00, $0E, $00, $0F, $00, $10, $02, $11, $00, $17, $04, $18, $00, $19, $02
.db $1A, $00, $21, $02, $07, $00, $08, $00, $09, $00, $0A, $02, $12, $00, $13, $00
.db $14, $02, $15, $00, $1B, $00, $1C, $00, $1D, $00, $1E, $00, $22, $00, $03, $06
.db $06, $06, $0B, $04, $06, $04, $16, $04, $16, $06, $06, $06, $0B, $04, $06, $04
.db $16, $04, $16, $06, $06, $06, $21, $06, $23, $02, $24, $00, $25, $00, $26, $02
.db $2C, $02, $2D, $00, $2E, $00, $25, $00, $26, $02, $2C, $02, $2D, $00, $35, $00
.db $3A, $02, $27, $00, $28, $04, $29, $02, $26, $06, $2F, $06, $30, $00, $10, $02
.db $31, $00, $28, $06, $2C, $06, $36, $02, $28, $04, $3B, $00, $20, $00, $20, $00
.db $2A, $02, $06, $00, $32, $00, $20, $00, $20, $00, $20, $00, $20, $00, $37, $06
.db $38, $02, $20, $00, $20, $00, $2B, $00, $1B, $00, $09, $00, $0A, $02, $33, $00
.db $1D, $04, $20, $00, $34, $00, $20, $00, $39, $00, $1D, $00, $1B, $00, $3C, $00
.db $20, $00, $20, $00, $20, $00, $06, $04, $20, $00, $38, $02, $20, $00, $2A, $02
.db $20, $00, $43, $00, $20, $00, $20, $00, $45, $00, $3E, $00, $3F, $04, $40, $06
.db $26, $02, $32, $00, $41, $02, $3F, $04, $3E, $02, $20, $00, $2C, $02, $44, $06
.db $3F, $04, $46, $00, $41, $06, $3F, $00, $40, $02, $26, $06, $32, $00, $2D, $04
.db $42, $00, $25, $04, $20, $00, $2C, $06, $44, $02, $3F, $00, $3E, $06, $03, $02
.db $06, $02, $0B, $00, $06, $00, $16, $00, $16, $02, $10, $02, $0B, $00, $06, $00
.db $16, $00, $16, $02, $06, $02, $21, $02, $07, $04, $47, $00, $48, $00, $0A, $02
.db $4F, $04, $50, $06, $51, $00, $52, $06, $5B, $04, $5C, $00, $5D, $00, $5E, $06
.db $22, $04, $49, $06, $4A, $06, $21, $06, $06, $04, $53, $00, $54, $02, $17, $00
.db $55, $02, $06, $04, $53, $00, $03, $06, $5F, $06, $63, $06, $4B, $00, $4C, $00
.db $4D, $00, $26, $02, $2C, $02, $36, $06, $56, $00, $29, $06, $26, $02, $2C, $02
.db $60, $00, $61, $06, $64, $00, $23, $06, $4E, $06, $02, $00, $01, $06, $57, $00
.db $58, $06, $59, $00, $5A, $06, $01, $06, $57, $00, $0C, $04, $62, $06, $3A, $06
.db $54, $06, $17, $04, $17, $04, $17, $04, $17, $04, $17, $04, $17, $04, $17, $04
.db $17, $04, $17, $04, $17, $04, $17, $04, $55, $06

; Data from AA0 to 123F (1952 bytes)
DATA_AA0:
#import "src/PacGG/pacmanDATA_AA0.inc"

; Data from 1240 to 151F (736 bytes)
DATA_1240:
.db $FF, $00, $FF, $00, $FF, $00, $FF, $00, $FF, $00, $FF, $00, $FF, $00, $FF, $00
.db $FF, $00, $FF, $00, $FF, $00, $FF, $00, $FF, $00, $FF, $00, $FF, $00, $FF, $00
.db $3F, $3F, $3F
.fill 57, $00
.db $FF, $FF, $FF, $00, $40, $40, $40, $00, $40, $40, $40, $00, $40, $40, $40, $00
.db $40, $40, $40, $00, $40, $40, $40, $00, $40, $40, $40, $00, $40, $40, $40, $00
.db $3F, $3F, $3F, $00, $F8, $F8, $F8
.fill 37, $00
.db $FF, $FF, $FF
.fill 17, $00
.db $FF, $FF, $FF
.fill 16, $00
.db $04
.fill 16, $00
.db $04, $04, $04, $00, $04, $04, $04, $00, $04, $04, $04, $00, $04, $04, $04, $00
.db $04, $04, $04, $00, $04, $04, $04, $00, $04, $04, $04, $00, $F8, $F8, $F8, $00
.db $01, $00, $01, $00, $01, $00, $01, $00, $01, $00, $01, $00, $01, $00, $01, $00
.db $01, $00, $01, $00, $01, $00, $01, $00, $01, $00, $01, $00, $01, $00, $01, $00
.db $FF, $FE, $FF
.fill 33, $00
.db $0F, $0F, $0F
.fill 13, $00
.db $80, $00, $00, $80, $80, $00, $00, $88, $80, $00, $00, $80, $00, $00, $00, $00
.db $FC, $FC, $FC, $00, $02, $02, $02, $00, $02, $02, $02, $00, $02, $02, $02, $00
.db $02, $02, $02, $00, $02, $02, $02, $40, $02, $02, $02, $00, $04, $04, $04, $00
.db $04, $04, $04, $00, $04, $04, $04, $00, $04, $04, $04, $00, $FC, $FC, $FC, $00
.db $04, $04, $04, $00, $04, $04, $04, $00, $04, $04, $04, $00, $10, $10, $10, $00
.db $10, $10, $10, $00, $10, $10, $10, $00, $10, $10, $10, $00, $0F, $0F, $0F
.fill 13, $00
.db $3F, $3F, $3F, $00, $20, $20, $20, $00, $20, $20, $20, $00, $20, $20, $20, $00
.db $20, $20, $20, $00, $20, $20, $20, $01, $20, $20, $20, $00, $20, $20, $20, $00
.db $F0, $F0, $F0
.fill 20, $00
.db $08, $00, $00, $00, $00, $00, $00, $00, $00, $02, $02, $02, $40
.fill 19, $00
.db $42
.fill 11, $00
.db $10
.fill 16, $00
.db $F0, $F0, $F0
.fill 16, $00
.db $84
.fill 16, $00
.db $FF, $FF, $FF
.fill 12, $00
.db $84
.fill 16, $00
.db $07, $07, $07, $80, $00, $00, $00, $00, $08, $08, $08, $00, $08, $08, $08
.fill 32, $00
.db $42
.fill 16, $00
.db $C0, $C0, $C0, $02
.fill 16, $00
.db $80, $80, $80, $04, $80, $80, $80, $00, $80, $80, $80, $00, $80, $80, $80, $00
.db $80, $80, $80, $00

; Data from 1520 to 173F (544 bytes)
DATA_1520:
.fill 12, $00
.db $F8, $F8, $F8, $00, $04, $04, $04, $00, $04, $04, $04, $00, $04, $04, $04, $00
.db $04, $04, $04
.fill 13, $00
.db $3F, $3F, $3F, $00, $40, $40, $40, $00, $40, $40, $40, $00, $40, $40, $40, $00
.db $40, $40, $40, $00, $FF, $FF, $FF, $00, $08, $08, $08, $00, $08, $08, $08, $00
.db $08, $08, $08, $00, $08, $08, $08, $00, $08, $08, $08, $00, $08, $08, $08, $00
.db $08, $08, $08, $00, $80, $80, $80, $00, $80, $80, $80, $00, $FF, $FF, $FF
.fill 20, $00
.db $84, $00, $00, $00, $84
.fill 16, $00
.db $07, $07, $07, $80, $00, $00, $00, $00, $00, $00, $00, $00, $08, $08, $08, $00
.db $08, $08, $08, $00, $08, $08, $08
.fill 20, $00
.db $08, $00, $00, $00, $42
.fill 16, $00
.db $C0, $C0, $C0, $02
.fill 15, $00
.db $10
.fill 16, $00
.db $FF, $FF, $FF
.fill 9, $00
.db $80, $80, $80, $04
.fill 19, $00
.db $84, $00, $00, $00, $00, $00, $00, $00, $00, $1F, $1F, $1F, $00, $20, $20, $20
.db $00, $20, $20, $20, $00, $20, $20, $20, $00, $20, $20, $20, $00, $20, $20, $20
.db $01, $20, $20, $20, $00, $00, $00, $00, $00, $00, $00, $00, $10
.fill 16, $00
.db $1F, $1F, $1F, $00, $00, $00, $00, $00, $10, $10, $10, $00, $10, $10, $10, $00
.db $10, $10, $10, $00, $10, $10, $10, $00, $E0, $E0, $E0
.fill 13, $00
.db $20, $20, $20, $01
.fill 19, $00
.db $21
.fill 19, $00
.db $10
.fill 16, $00
.db $E0, $E0, $E0, $00, $00, $00, $00, $10
.fill 16, $00
.db $1F, $1F, $1F
.fill 9, $00
.db $40, $40, $40, $00, $40, $40, $40, $00, $40, $40, $40, $00, $40, $40, $40, $00
.db $7F, $7F, $7F, $00, $40, $40, $40, $00, $40, $40, $40, $00, $40, $40, $40, $00
.db $FE, $FE, $FE, $00, $02, $02, $02, $00, $02, $02, $02, $00, $02, $02, $02, $00
.db $02, $02, $02, $00, $02, $02, $02, $40, $02, $02, $02, $00, $02, $02, $02, $00

; Data from 1740 to 18AF (368 bytes)
DATA_1740:
.db $06, $80, $00, $01, $0C, $00, $0D, $00, $0B, $00, $00, $01, $21, $00, $1E, $00
.db $0D, $00, $28, $00, $20, $00, $05, $80, $00, $01, $29, $80, $00, $01, $01, $01
.db $02, $01, $03, $01, $0D, $80, $04, $01, $05, $01, $01, $03, $00, $01, $00, $01
.db $07, $01, $08, $01, $09, $01, $0F, $01, $10, $01, $11, $01, $12, $01, $1D, $01
.db $1E, $01, $1F, $01, $20, $01, $29, $01, $2A, $01, $2B, $01, $2C, $01, $37, $01
.db $38, $01, $07, $03, $00, $01, $00, $01, $07, $01, $0A, $01, $0B, $01, $13, $01
.db $14, $01, $15, $01, $16, $01, $21, $01, $22, $01, $23, $01, $24, $01, $2D, $01
.db $2E, $01, $2F, $01, $30, $01, $39, $01, $3A, $01, $07, $03, $00, $01, $00, $01
.db $07, $01, $0C, $01, $0D, $01, $17, $01, $18, $01, $19, $01, $1A, $01, $25, $01
.db $26, $01, $27, $01, $28, $01, $31, $01, $32, $01, $33, $01, $34, $01, $3B, $01
.db $3C, $01, $07, $03, $00, $01, $00, $01, $01, $05, $0E, $01, $03, $05, $1B, $01
.db $03, $05, $03, $05, $1C, $01, $1B, $03, $04, $05, $04, $05, $03, $05, $35, $01
.db $35, $03, $03, $05, $36, $01, $03, $05, $3D, $01, $01, $07, $00, $01, $10, $80
.db $00, $01, $06, $01, $4D, $01, $08, $80, $00, $01, $01, $00, $00, $01, $0B, $00
.db $25, $00, $1D, $00, $BD, $01, $20, $00, $28, $00, $00, $01, $3E, $01, $3F, $01
.db $1D, $80, $00, $01, $02, $00, $00, $01, $0B, $00, $25, $00, $1D, $00, $BD, $01
.db $20, $00, $28, $00, $21, $00, $1F, $80, $00, $01, $42, $01, $43, $01, $46, $01
.db $47, $01, $48, $01, $49, $01, $4C, $01, $1C, $80, $00, $01, $40, $01, $00, $01
.db $41, $01, $44, $01, $45, $01, $00, $01, $41, $01, $4A, $01, $4B, $01, $00, $01
.db $27, $00, $1D, $00, $26, $00, $1E, $00, $0D, $00, $00, $01, $4E, $01, $4F, $01
.db $50, $01, $00, $01, $1D, $00, $25, $00, $25, $00, $00, $01, $28, $00, $24, $00
.db $22, $00, $23, $00, $0C, $00, $21, $00, $00, $01, $28, $00, $20, $00, $21, $00
.db $20, $00, $28, $00, $BB, $01, $20, $00, $1F, $00, $14, $80, $00, $01, $FF, $FF

; Data from 18B0 to 2051 (1954 bytes)
DATA_18B0:
#import "src/PacGG/pacmanDATA_18B0.inc"

; 10th entry of Jump Table from 7FE0 (indexed by, $C19A)
LABEL_2052:
	jp m, $FE04	; Possibly invalid
; Data from 2055 to 22EF (667 bytes)
.db $FD, $02, $FC, $FE, $FD, $02, $FC, $FE, $FD, $02, $FC, $FE, $F9, $06, $F8, $FC
.db $03, $FC, $00, $00, $FF, $00, $00, $00, $FF, $00, $00, $80, $7F, $80, $00, $30
.db $CF, $30, $00, $10, $EF, $10, $00, $10, $EF, $10, $00, $10, $EF, $11, $00, $10
.db $EF, $13, $00, $10, $EF, $17, $00, $80, $7F, $8F, $00, $01, $FE, $1F, $00, $1C
.db $E3, $3F, $00, $22, $DD, $7F, $00, $02, $FD, $FF, $00, $1E, $E1, $FF, $00, $20
.db $DF, $FF, $00, $3E, $C1, $FF, $00, $01, $FE, $FF, $00, $FF, $00, $C3, $00, $FF
.db $00, $BD, $00, $FF, $00, $66, $00, $FF, $00, $5E, $00, $FF, $00, $5E, $00, $FF
.db $00, $66, $00, $FF, $00, $BD, $00, $FF, $00, $C3, $00, $FF, $00, $98, $00, $FF
.db $00, $13, $00, $FF, $00, $93, $00, $FF, $00, $98, $00, $FF, $00, $9F, $00, $FF
.db $00, $9E, $00, $FF, $00, $08, $00, $FF, $00, $FF, $00, $E0, $1F, $E0, $00, $E0
.db $1F, $E0, $00, $E7, $18, $E7, $00, $E7, $18, $E7, $00, $E7, $18, $E7, $00, $E7
.db $18, $E7, $00, $E7, $18, $E7, $00, $E7, $18, $E7, $00, $3C, $C3, $3C, $00, $1C
.db $E3, $1C, $00, $9F, $60, $9F, $00, $9C, $63, $9C, $00, $98, $67, $98, $00, $99
.db $66, $99, $00, $98, $67, $98, $00, $9C, $63, $9C, $00, $FF, $00, $71, $00, $FF
.db $00, $26, $00, $FF, $00, $22, $00, $FF, $00, $31, $00, $FF, $00, $2C, $00, $FF
.db $00, $6E, $00, $FF, $00, $F0, $00, $FF, $00, $FF, $00, $FF, $00, $F3, $00, $FF
.db $00, $E9, $00, $FF, $00, $CC, $00, $FF, $00, $CC, $00, $FF, $00, $4C, $00, $FF
.db $00, $65, $00, $FF, $00, $F3, $00, $FF, $00, $FF, $00, $0E, $F1, $0E, $00, $06
.db $F9, $06, $00, $E6, $19, $E6, $00, $06, $F9, $06, $00, $06, $F9, $06, $00, $E6
.db $19, $E6, $00, $06, $F9, $06, $00, $06, $F9, $06, $00, $03, $FC, $03, $00, $01
.db $FE, $01, $00, $49, $B6, $49, $00, $49, $B6, $49, $00, $49, $B6, $49, $00, $49
.db $B6, $49, $00, $49, $B6, $49, $00, $49, $B6, $49, $00, $C0, $3F, $C0, $00, $80
.db $7F, $80, $00, $9F, $60, $9F, $00, $9F, $60, $9F, $00, $9F, $60, $9F, $00, $9F
.db $60, $9F, $00, $80, $7F, $80, $00, $C0, $3F, $C0, $00, $70, $8F, $70, $00, $60
.db $9F, $60, $00, $E7, $18, $E7, $00, $E7, $18, $E7, $00, $E7, $18, $E7, $00, $E7
.db $18, $E7, $00, $60, $9F, $60, $00, $70, $8F, $70, $00, $FF, $00, $70, $00, $FF
.db $00, $26, $00, $FF, $00, $26, $00, $FF, $00, $30, $00, $FF, $00, $3E, $00, $FF
.db $00, $7C, $00, $FF, $00, $F1, $00, $FF, $00, $FF, $00, $FF, $00, $E7, $00, $FF
.db $00, $47, $00, $FF, $00, $67, $00, $FF, $00, $67, $00, $FF, $00, $67, $00, $FF
.db $00, $E7, $00, $FF, $00, $C3, $00, $FF, $00, $FF, $00, $38, $C0, $38, $00, $18
.db $E0, $18, $00, $98, $60, $98, $00, $98, $60, $98, $00, $9F, $60, $9F, $00, $9F
.db $60, $9F, $00, $1F, $E0, $1F, $00, $3F, $C0, $3F
.fill 12, $00
.db $44, $00, $00, $00, $6C, $00, $00, $00, $54, $00, $00, $00, $44, $00, $00, $00
.db $44, $00, $00, $00, $00, $FF, $00, $38, $00, $FF, $00, $3E, $00, $FF, $00, $3E
.db $00, $FF, $00, $3E, $00, $FF, $00, $3E, $00, $FF, $00, $3E, $00, $FF, $00, $06
.db $00, $FF, $00, $FF, $00, $FF, $00, $10, $00, $FF, $00, $73, $00, $FF, $00, $73
.db $00, $FF, $00, $73, $00, $FF, $00, $73, $00, $FF, $00, $73, $00, $FF, $00, $70
.db $00, $FF, $00, $FF, $00, $FF, $00, $7F, $00, $FF, $00, $3F, $00, $FF, $00, $9F
.db $00, $FF, $00, $9F, $00, $FF, $00, $9F, $00, $FF, $00, $33, $00, $FF, $00, $73
.db $00, $FF, $00, $FF, $00, $FF, $00, $81, $00, $FF, $00, $9C, $00, $FF, $00, $9C
.db $00, $FF, $00, $81, $00, $FF, $00, $9C, $00, $FF, $00, $9C, $00, $FF, $00, $81
.db $00, $FF, $00, $FF, $00

; Data from 22F0 to 243F (336 bytes)
DATA_22F0:
.db $15, $80, $00, $01, $01, $01, $10, $80, $02, $01, $01, $03, $00, $01, $00, $01
.db $03, $01, $10, $80, $00, $01, $03, $03, $00, $01, $00, $01, $03, $01, $10, $80
.db $00, $01, $03, $03, $00, $01, $00, $01, $03, $01, $00, $00, $28, $00, $0D, $00
.db $0A, $00, $27, $00, $1F, $00, $00, $01, $00, $01, $01, $00, $00, $01, $09, $01
.db $00, $01, $04, $00, $03, $80, $00, $01, $03, $03, $00, $01, $00, $01, $03, $01
.db $10, $80, $00, $01, $03, $03, $00, $01, $00, $01, $03, $01, $00, $01, $0B, $00
.db $1D, $00, $1E, $00, $26, $00, $1D, $00, $27, $00, $00, $01, $05, $01, $06, $01
.db $05, $01, $06, $01, $05, $01, $06, $01, $00, $01, $00, $01, $03, $03, $00, $01
.db $00, $01, $03, $01, $08, $80, $00, $01, $07, $01, $08, $01, $07, $01, $08, $01
.db $07, $01, $08, $01, $00, $01, $00, $01, $03, $03, $00, $01, $00, $01, $01, $05
.db $10, $80, $02, $05, $01, $07, $16, $80, $00, $01, $01, $01, $10, $80, $02, $01
.db $01, $03, $00, $01, $00, $01, $03, $01, $10, $80, $00, $01, $03, $03, $00, $01
.db $00, $01, $03, $01, $10, $80, $00, $01, $03, $03, $00, $01, $00, $01, $03, $01
.db $00, $01, $28, $00, $0D, $00, $0A, $00, $27, $00, $1F, $00, $00, $01, $00, $01
.db $01, $00, $00, $01, $09, $01, $00, $01, $04, $00, $03, $80, $00, $01, $03, $03
.db $00, $01, $00, $01, $03, $01, $10, $80, $00, $01, $03, $03, $00, $01, $00, $01
.db $03, $01, $00, $01, $0B, $00, $1D, $00, $1E, $00, $26, $00, $1D, $00, $27, $00
.db $00, $01, $05, $01, $06, $01, $05, $01, $06, $01, $05, $01, $06, $01, $00, $01
.db $00, $01, $03, $03, $00, $01, $00, $01, $03, $01, $08, $80, $00, $01, $07, $01
.db $08, $01, $07, $01, $08, $01, $07, $01, $08, $01, $00, $01, $00, $01, $03, $03
.db $00, $01, $00, $01, $01, $05, $10, $80, $02, $05, $01, $07, $00, $01, $FF, $FF

; Data from 2440 to 257F (320 bytes)
DATA_2440:
.db $FF, $00, $FF, $00, $FF, $00, $FF, $00, $FF, $00, $FF, $00, $FF, $00, $FF, $00
.db $FF, $00, $FF, $00, $FF, $00, $FF, $00, $FF, $00, $FF, $00, $FF, $00, $FF, $00
.db $C0, $00, $FF, $00, $BF, $00, $FF, $00, $7F, $00, $FF, $00, $70, $00, $FF, $00
.db $6F, $00, $FF, $00, $6F, $00, $FF, $00, $6F, $00, $FF, $00, $6F, $00, $FF, $00
.db $00, $00, $FF, $00, $FF, $00, $FF, $00, $FF, $00, $FF, $00, $00, $00, $FF, $00
.db $FF, $00, $FF, $00, $FF, $00, $FF, $00, $FF, $00, $FF, $00, $FF, $00, $FF, $00
.db $6F, $00, $FF, $00, $6F, $00, $FF, $00, $6F, $00, $FF, $00, $6F, $00, $FF, $00
.db $6F, $00, $FF, $00, $6F, $00, $FF, $00, $6F, $00, $FF, $00, $6F, $00, $FF
.fill 33, $00
.db $FF, $00, $FF, $00, $FF, $00, $FF, $00, $FF, $00, $FF, $00, $FF, $00, $FF, $00
.db $FF, $00, $FF, $00, $E3, $1C, $FF, $00, $80, $7F, $FF, $00, $00, $FF, $FF, $00
.db $FF, $00, $FF, $00, $FF, $00, $FF, $00, $FF, $00, $FF, $00, $FF, $00, $FF, $00
.db $FF, $00, $FF, $00, $FF, $00, $FF, $00, $FF, $00, $FF, $00, $7F, $80, $FF, $00
.db $00, $FF, $FF, $00, $C0, $3F, $FF, $00, $F0, $0F, $FF, $00, $C0, $3F, $FF, $00
.db $00, $FF, $FF, $00, $00, $FF, $FF, $00, $80, $7F, $FF, $00, $E3, $1C, $FF, $00
.db $7F, $80, $FF, $00, $3F, $C0, $FF, $00, $3F, $C0, $FF, $00, $3F, $C0, $FF, $00
.db $7F, $80, $FF, $00, $7F, $80, $FF, $00, $FF, $00, $FF, $00, $FF, $00, $FF, $00
.db $FF, $00, $FF, $00, $FF, $00, $FF, $00, $FF, $00, $FF, $00, $FF, $00, $C3, $00
.db $FF, $00, $FF, $00, $FF, $00, $FF, $00, $FF, $00, $FF, $00, $FF, $00, $FF, $00

; Data from 2580 to 2667 (232 bytes)
DATA_2580:
.db $14, $80, $00, $01, $00, $01, $01, $01, $02, $01, $01, $00, $0A, $00, $0B, $00
.db $04, $01, $02, $01, $01, $03, $0C, $80, $00, $01, $03, $01, $06, $80, $00, $01
.db $03, $03, $0C, $80, $00, $01, $01, $05, $06, $80, $02, $01, $01, $07, $20, $80
.db $00, $01, $01, $01, $02, $01, $02, $00, $0A, $00, $0B, $00, $04, $01, $02, $01
.db $01, $03, $0C, $80, $00, $01, $03, $01, $06, $80, $00, $01, $03, $03, $0C, $80
.db $00, $01, $01, $05, $06, $80, $02, $01, $01, $07, $2A, $80, $00, $01, $0D, $01
.db $06, $80, $10, $01, $0D, $03, $00, $01, $0A, $80, $00, $01, $0E, $01, $0F, $01
.db $06, $80, $00, $01, $11, $01, $05, $80, $00, $01, $0A, $05, $0B, $01, $0C, $01
.db $04, $80, $00, $01, $0D, $05, $06, $80, $10, $01, $0D, $07, $04, $80, $00, $01
.db $12, $05, $17, $01, $18, $01, $19, $01, $1A, $01, $0F, $80, $00, $01, $13, $01
.db $1B, $01, $1C, $01, $1D, $01, $1E, $01, $0F, $80, $00, $01, $14, $01, $1F, $01
.db $20, $01, $21, $01, $22, $01, $27, $01, $0D, $80, $00, $01, $15, $01, $16, $01
.db $23, $01, $24, $01, $25, $01, $26, $01, $28, $01, $0D, $80, $00, $01, $15, $05
.db $29, $01, $2A, $01, $00, $01, $2B, $01, $2C, $01, $2E, $01, $0F, $80, $00, $01
.db $2D, $01, $0F, $80, $00, $01, $FF, $FF

; Data from 2668 to 2C47 (1504 bytes)
DATA_2668:
#import "src/PacGG/pacmanDATA_2668.inc"

; Data from 2C48 to 2CC5 (126 bytes)
DATA_2C48:
.db $29, $00, $29, $00, $29, $00, $29, $00, $29, $00, $29, $00, $29, $00, $29, $00
.db $29, $00, $29, $00, $29, $00, $29, $00, $29, $00, $29, $00, $2A, $00, $2B, $00
.db $2C, $00, $2D, $00, $33, $00, $34, $00, $35, $00, $2E, $00, $2F, $00, $30, $00
.db $31, $00, $37, $00, $38, $00, $39, $00, $4A, $00, $4B, $00, $4C, $00, $4D, $00
.db $40, $00, $55, $00, $56, $00, $29, $00, $4E, $00, $4F, $00, $50, $00, $57, $00
.db $58, $00, $29, $00, $29, $00, $29, $00, $51, $00, $52, $00, $59, $00, $29, $00
.db $29, $00, $29, $00, $29, $00, $53, $00, $54, $00, $5A, $00, $29, $00, $29, $00
.db $29, $00, $5E, $00, $5F, $00, $60, $00, $61, $00, $63, $00, $29, $00

; Data from 2CC6 to 2D43 (126 bytes)
DATA_2CC6:
.db $29, $00, $3A, $00, $29, $00, $29, $00, $29, $00, $41, $00, $42, $00, $32, $00
.db $3B, $00, $2C, $00, $2D, $00, $33, $00, $44, $00, $45, $00, $36, $00, $3C, $00
.db $30, $00, $31, $00, $37, $00, $46, $00, $47, $00, $29, $00, $3D, $00, $3E, $00
.db $3F, $00, $40, $00, $48, $00, $49, $00, $29, $00, $4E, $00, $5B, $00, $5C, $00
.db $5D, $00, $62, $00, $29, $00, $29, $00, $29, $00, $51, $00, $52, $00, $59, $00
.db $29, $00, $29, $00, $29, $00, $29, $00, $53, $00, $54, $00, $5A, $00, $29, $00
.db $29, $00, $29, $00, $5E, $00, $5F, $00, $60, $00, $61, $00, $63, $00, $29, $00
.db $29, $00, $29, $00, $29, $00, $29, $00, $29, $00, $29, $00, $29, $00

; Data from 2D44 to 34A3 (1888 bytes)
DATA_2D44:
#import "src/PacGG/pacmanDATA_2D44.inc"

; Data from 34A4 to 36E3 (576 bytes)
DATA_34A4:
.db $1C, $1C, $1C, $1C, $36, $36, $36, $36, $63, $63, $63, $63, $63, $63, $63, $63
.db $7F, $7F, $7F, $7F, $63, $63, $63, $63, $63, $63, $63, $63, $00, $00, $00, $00
.db $1E, $1E, $1E, $1E, $33, $33, $33, $33
.fill 12, $60
.db $33, $33, $33, $33, $1E, $1E, $1E, $1E, $00, $00, $00, $00, $7C, $7C, $7C, $7C
.db $66, $66, $66, $66
.fill 12, $63
.db $66, $66, $66, $66, $7C, $7C, $7C, $7C, $00, $00, $00, $00, $3F, $3F, $3F, $3F
.db $30, $30, $30, $30, $30, $30, $30, $30, $3E, $3E, $3E, $3E, $30, $30, $30, $30
.db $30, $30, $30, $30, $3F, $3F, $3F, $3F, $00, $00, $00, $00, $3C, $3C, $3C, $3C
.db $66, $66, $66, $66, $60, $60, $60, $60, $3E, $3E, $3E, $3E, $03, $03, $03, $03
.db $63, $63, $63, $63, $3E, $3E, $3E, $3E, $00, $00, $00, $00, $1F, $1F, $1F, $1F
.db $30, $30, $30, $30, $60, $60, $60, $60, $67, $67, $67, $67, $63, $63, $63, $63
.db $33, $33, $33, $33, $1F, $1F, $1F, $1F, $00, $00, $00, $00
.fill 12, $63
.db $7F, $7F, $7F, $7F
.fill 12, $63
.db $00, $00, $00, $00, $3F, $3F, $3F, $3F
.fill 20, $0C
.db $3F, $3F, $3F, $3F, $00, $00, $00, $00
.fill 24, $30
.db $3F, $3F, $3F, $3F, $00, $00, $00, $00, $63, $63, $63, $63, $77, $77, $77, $77
.db $7F, $7F, $7F, $7F, $7F, $7F, $7F, $7F, $6B, $6B, $6B, $6B, $63, $63, $63, $63
.db $63, $63, $63, $63, $00, $00, $00, $00, $63, $63, $63, $63, $73, $73, $73, $73
.db $7B, $7B, $7B, $7B, $7F, $7F, $7F, $7F, $6F, $6F, $6F, $6F, $67, $67, $67, $67
.db $63, $63, $63, $63, $00, $00, $00, $00, $7E, $7E, $7E, $7E, $63, $63, $63, $63
.db $63, $63, $63, $63, $67, $67, $67, $67, $7C, $7C, $7C, $7C, $6E, $6E, $6E, $6E
.db $67, $67, $67, $67, $00, $00, $00, $00, $3F, $3F, $3F, $3F, $30, $30, $30, $30
.db $30, $30, $30, $30, $3E, $3E, $3E, $3E
.fill 12, $30
.db $00, $00, $00, $00
.fill 12, $63
.db $77, $77, $77, $77, $3E, $3E, $3E, $3E, $1C, $1C, $1C, $1C, $08, $08, $08, $08
.db $00, $00, $00, $00, $63, $63, $63, $63, $63, $63, $63, $63, $6B, $6B, $6B, $6B
.db $7F, $7F, $7F, $7F, $7F, $7F, $7F, $7F, $77, $77, $77, $77, $63, $63, $63, $63
.db $00, $00, $00, $00
.fill 12, $33
.db $1E, $1E, $1E, $1E
.fill 12, $0C
.db $00, $00, $00, $00
.fill 20, $18
.db $00, $00, $00, $00, $18, $18, $18, $18, $00, $00, $00, $00, $00, $60, $00, $00
.db $00, $78, $00, $00, $00, $7E, $00, $00, $00, $7F, $00, $00, $00, $7E, $00, $00
.db $00, $78, $00, $00, $00, $60, $00, $00, $00, $00, $00, $00

; Data from 36E4 to 3745 (98 bytes)
DATA_36E4:
.db $64, $00, $65, $00, $66, $00, $67, $00, $71, $00, $72, $00, $73, $00, $64, $00
.db $68, $00, $69, $00, $6A, $00, $74, $00, $75, $00, $76, $00, $64, $00, $6B, $00
.db $6C, $00, $6D, $00, $77, $00, $78, $00, $79, $00, $64, $00, $6E, $00, $6F, $00
.db $70, $00, $7A, $00, $7B, $00, $64, $00, $90, $00, $91, $00, $92, $00, $93, $00
.db $97, $00, $98, $00, $99, $00, $94, $00, $95, $00, $96, $00, $64, $00, $9A, $00
.db $9B, $00, $9C, $00, $64, $00, $64, $00, $64, $00, $64, $00, $64, $00, $64, $00
.db $64, $00

; Data from 3746 to 37A7 (98 bytes)
DATA_3746:
.db $64, $00, $7C, $00, $7D, $00, $67, $00, $7E, $00, $89, $00, $64, $00, $64, $00
.db $7F, $00, $80, $00, $81, $00, $82, $00, $8B, $00, $8C, $00, $64, $00, $83, $00
.db $84, $00, $85, $00, $86, $00, $8D, $00, $8E, $00, $64, $00, $6E, $00, $6F, $00
.db $87, $00, $88, $00, $8F, $00, $64, $00, $90, $00, $91, $00, $9D, $00, $9E, $00
.db $9F, $00, $98, $00, $99, $00, $94, $00, $95, $00, $96, $00, $64, $00, $9A, $00
.db $9B, $00, $9C, $00, $64, $00, $64, $00, $64, $00, $64, $00, $64, $00, $64, $00
.db $64, $00

; Data from 37A8 to 3F27 (1920 bytes)
DATA_37A8:
#import "src/PacGG/pacmanDATA_37A8.inc"

; Data from 3F28 to 4053 (300 bytes)
DATA_3F28:
.db $29, $2A, $29, $2A, $2B, $2C, $2B, $2C, $2D, $2E, $2D, $2E, $2F, $30, $2F, $30
.db $31, $32, $31, $32, $33, $34, $33, $34, $35, $36, $35, $36, $37, $38, $37, $38
.db $39, $3A, $3B, $3C, $3D, $3E, $3F, $40, $41, $42, $43, $44, $45, $46, $47, $48
.db $49, $4A, $4B, $4C, $4D, $4E, $4F, $50, $51, $52, $53, $54, $55, $56, $57, $58
.db $59, $5A, $59, $5A, $5B, $5C, $5B, $5C, $5D, $5E, $5D, $5E, $5F, $60, $5F, $60
.db $61, $62, $61, $62, $63, $64, $63, $64, $65, $66, $65, $66, $67, $68, $67, $68
.db $69, $6A, $6B, $6C, $6D, $6E, $6F, $70, $71, $72, $73, $74, $75, $76, $77, $78
.db $79, $7A, $7B, $7C, $7D, $7E, $7F, $80, $81, $82, $83, $84, $85, $86, $87, $88
.db $89, $8A, $8B, $8C, $8D, $8E, $8F, $90, $8F, $90, $91, $90, $92, $90, $8F, $93
.db $8F, $94, $95, $96, $97, $98, $99, $9A, $9B, $9C, $9D, $9D, $9D, $9D, $9D, $9D
.db $9E, $9F, $A0, $A1, $A0, $A1, $A2, $A3, $A4, $A5, $A6, $A1, $A7, $A1, $A0, $A8
.db $A0, $A9, $AA, $AB, $AC, $AD, $AE, $AF, $B0, $B1, $B2, $B3, $B4, $B5, $B6, $B7
.db $9D, $9D, $B8, $B9, $BA, $BB, $BA, $BB, $BC, $BD, $BE, $BF, $C0, $C1, $C2, $C3
.db $C4, $C5, $C6, $C5, $C7, $C5, $C8, $C5, $C9, $CA, $CB, $CC, $CD, $CE, $CF, $D0
.db $D1, $9D, $D2, $D3, $D4, $D5, $D6, $D7, $D8, $D9, $DA, $DB, $DC, $DD, $DC, $DD
.db $DE, $C5, $DF, $CA, $E0, $C5, $E1, $C5, $E2, $CC, $E3, $CC, $E4, $E5, $E6, $E7
.db $E8, $E9, $EA, $EB, $EC, $ED, $EE, $EF, $F0, $F1, $F2, $F3
.fill 20, $9D
.db $F4, $F5, $F6, $F7, $F8, $F9, $FA, $FB, $FC, $FD, $FE, $FF

; Data from 4054 to 5B33 (6880 bytes)
DATA_4054:
#import "src/PacGG/pacmanDATA_4054.inc"

; Data from 5B34 to 5C33 (256 bytes)
DATA_5B34:
.db $29, $2A, $29, $2A, $2B, $2C, $2B, $2C, $2D, $2E, $2D, $2E, $2F, $30, $2F, $30
.db $31, $32, $31, $32, $33, $34, $33, $34, $35, $36, $35, $36, $37, $38, $37, $38
.db $39, $3A, $3B, $3C, $3D, $3E, $3F, $40, $41, $42, $43, $44, $45, $46, $47, $48
.db $49, $4A, $4B, $4C, $4D, $4E, $4F, $50, $51, $52, $53, $54, $55, $56, $57, $58
.db $59, $5A, $59, $5A, $5B, $5C, $5B, $5C, $5D, $5E, $5D, $5E, $5F, $60, $5F, $60
.db $61, $62, $61, $62, $63, $64, $63, $64, $65, $66, $65, $66, $67, $68, $67, $68
.db $69, $6A, $6B, $6C, $6D, $6E, $6F, $70, $71, $72, $73, $74, $75, $76, $77, $78
.db $79, $7A, $7B, $7C, $7D, $7E, $7F, $80, $81, $82, $83, $84, $85, $86, $87, $88
.db $89, $8A, $8B, $8C, $8D, $8E, $89, $8A, $89, $8A, $8F, $90, $91, $90, $89, $92
.db $89, $93, $8D, $8E, $8B, $8C
.fill 10, $94
.db $95, $96, $97, $98, $97, $98, $99, $9A, $9B, $9C, $9D, $9E, $9F, $9E, $95, $A0
.db $95, $A1, $97, $98, $97, $98, $A2, $A3, $A4, $A5, $A6, $A7, $A8, $A9, $AA, $AB
.db $94, $94, $AC, $AD, $AE, $AF, $AE, $AF, $B0, $B1, $94, $94, $B2, $B3, $B4, $B5
.db $B6, $B7, $B8, $B7, $B9, $B7, $BA, $B7, $BB, $BC, $BD, $BE, $BF, $C0, $C1, $C2
.db $94, $C3, $C4, $C5, $C6, $C7, $C8, $C9, $CA, $CB, $CC, $CD, $CE, $CF, $D0, $D1
.db $D2, $B7, $D3, $BC, $D4, $B7, $D5, $B7, $D6, $BE, $D7, $BE, $D8, $D9, $DA, $DB

; Data from 5C34 to 7293 (5728 bytes)
DATA_5C34:
#import "src/PacGG/pacmanDATA_5C34.inc"

; Data from 7294 to 7303 (112 bytes)
DATA_7294:
.db $29, $2A, $2B, $2C, $2D, $2E, $2F, $30, $2F, $30, $31, $32, $33, $34, $4E, $4F
.db $4E, $4F, $54, $55, $54, $55, $33, $35, $36, $37, $35, $38, $39, $35, $38, $39
.db $3A, $3B, $3C, $3D, $3E, $3F, $40, $41, $42, $43, $44, $45, $46, $47, $50, $51
.db $52, $53, $56, $57, $58, $59, $33, $38, $48, $37, $38, $49, $4A, $38, $38, $38
.db $5A, $5B, $5E, $5F, $62, $63
.fill 17, $33
.db $4B, $4C, $37, $4B, $38, $4D, $4B, $38, $4D, $5C, $5D, $60, $61, $64, $65
.fill 10, $33

; Data from 7304 to 77A3 (1184 bytes)
DATA_7304:
.db $00, $C0, $00, $00, $00, $F0, $00, $00, $00, $FC, $00, $00, $00, $FF, $00, $00
.db $00, $FF, $00, $00, $00, $FF
.fill 23, $00
.db $01, $00, $00, $00, $03, $00, $00, $00, $1F
.fill 19, $00
.db $03, $00, $00, $00, $03, $00, $0C, $00, $01, $12, $0C, $00, $21, $1E, $00, $00
.db $21, $1E, $00, $00, $33, $0C
.fill 10, $00
.db $C0, $00, $00, $00, $C0, $00, $30, $00, $80, $48, $30, $00, $84, $78, $00, $00
.db $84, $78, $00, $00, $CC, $30
.fill 10, $00
.db $03, $00, $00, $00, $0F, $00, $00, $00, $1F, $00, $00, $00, $39, $06, $00, $00
.db $30, $0F, $00, $00, $30, $0C, $03
.fill 9, $00
.db $C0, $00, $00, $00, $F0, $00, $00, $00, $F8, $00, $00, $00, $E4, $18, $00, $00
.db $C0, $3C, $00, $00, $C0, $30, $0C
.fill 9, $00
.db $03, $00, $00, $00, $0F, $00, $00, $00, $1F, $00, $00, $00, $27, $18, $00, $00
.db $03, $3C, $00, $00, $03, $0C, $30
.fill 9, $00
.db $C0, $00, $00, $00, $F0, $00, $00, $00, $F8, $00, $00, $00, $9C, $60, $00, $00
.db $0C, $F0, $00, $00, $0E, $30, $C0
.fill 30, $00
.db $01
.fill 19, $00
.db $6C, $00, $00, $00, $C8, $36, $00, $00, $C8, $36, $00, $00, $FC
.fill 51, $00
.db $6C, $00, $00, $00, $C8, $36, $00, $00, $C8, $36, $00, $00, $EC, $00, $FE, $00
.db $FF, $FF, $FA, $01, $FD, $FD, $F4, $03, $FB, $FB, $F0, $0F, $EF, $EF, $C0, $1F
.db $FF, $FF, $A0, $1F, $DF, $DF, $C0, $3F, $BF, $BF, $00, $7F, $FF, $FF, $05, $F8
.db $FB, $FB, $02, $FC, $FD, $FD, $02, $FC, $FD, $FD, $01, $FC, $FF, $FF, $07, $F8
.db $FB, $FB, $03, $F8, $FF, $FF, $0F, $F0, $F7, $F7, $07, $F0, $FF, $FF, $FF, $00
.db $FF, $FF, $FF, $00, $FF, $FF, $FF, $00, $FF, $FF, $FF, $00, $FF, $FF, $FF, $00
.db $FF, $FF, $FF, $00, $FF, $FF, $FF, $00, $FF, $FF, $FF, $00, $FF, $FF, $00, $FF
.db $FF, $FF, $00, $FF, $FF, $FF, $00, $FF, $FF, $FF, $00, $FF, $FF, $FF, $00, $FF
.db $FF, $FF, $00, $FF, $FF, $FF, $00, $FF, $FF, $FF, $00, $FF, $FF, $FF, $7F, $00
.db $FF, $FF, $5F, $80, $BF, $BF, $2F, $C0, $DF, $DF, $0F, $F0, $F7, $F7, $03, $F8
.db $FF, $FF, $05, $F8, $FB, $FB, $03, $FC, $FD, $FD, $00, $FE, $FF, $FF
.fill 13, $00
.db $01, $01, $00, $00, $01, $01, $00, $00, $01, $01
.fill 22, $00
.db $07, $00, $00, $00, $0F, $00, $00, $00, $1F
.fill 11, $00
.db $7F, $00, $00, $00, $7F, $00, $00, $00, $7F, $00, $00, $00, $7F, $00, $00, $00
.db $6E, $00, $00, $00, $46
.fill 11, $00
.db $FE, $00, $00, $00, $FE, $00, $00, $00, $F8, $04, $00, $00, $F0, $0C, $00, $00
.db $60, $18, $00, $00, $00, $1C
.fill 10, $00
.db $70, $0C, $03, $00, $78, $07, $00, $00, $7F, $00, $00, $00, $7F, $00, $00, $00
.db $6E, $00, $00, $00, $46
.fill 11, $00
.db $C2, $30, $0C, $00, $E2, $1C, $00, $00, $F8, $04, $00, $00, $F0, $0C, $00, $00
.db $60, $18, $00, $00, $00, $1C
.fill 10, $00
.db $43, $0C, $30, $00, $67, $18, $00, $00, $7F, $00, $00, $00, $7F, $00, $00, $00
.db $6E, $00, $00, $00, $46
.fill 11, $00
.db $0A, $34, $C0, $00, $94, $6A, $00, $00, $EE, $10, $00, $00, $F6, $08, $00, $00
.db $66, $10, $00, $00, $62
.fill 11, $00
.db $43, $0C, $30, $00, $67, $18, $00, $00, $7F, $00, $00, $00, $7F, $00, $00, $00
.db $7B, $00, $00, $00, $31
.fill 11, $00
.db $0A, $34, $C0, $00, $94, $6A, $00, $00, $EE, $10, $00, $00, $F6, $08, $00, $00
.db $CE, $10, $00, $00, $8C
.fill 12, $00
.db $07, $00, $00, $00, $0F, $00, $00, $0C, $03, $00, $00, $3E, $01, $00, $00, $FF
.db $00, $00, $00, $FE
.fill 12, $00
.db $F8, $00, $00, $00, $F0, $00, $00, $00, $E0, $00, $00, $00, $F8, $00, $00, $00
.db $F8, $00, $00, $00, $38
.fill 11, $00
.db $01, $00, $00, $00, $03, $00, $00, $0C, $03, $00, $00, $3E, $01, $00, $00, $FF
.db $00, $00, $00, $FE
.fill 12, $00
.db $F8, $00, $00, $00, $F8, $00, $00, $00, $F8, $00, $00, $00, $FE, $00, $00, $00
.db $FE, $00, $00, $00, $0E
.fill 9, $00
.db $1F, $E0, $EF, $EF, $0F, $E0, $FF, $FF, $3F, $C0, $DF, $DF, $1F, $C0, $FF, $FF
.db $1F, $C0, $FF, $FF, $3F, $C0, $DF, $DF, $0F, $E0, $FF, $FF, $1F, $E0, $EF, $EF
.db $00, $FF, $FF, $FF, $01, $FE, $FE, $FE, $0B, $F0, $F7, $F7, $5F, $80, $BF, $BF
.db $5F, $80, $BF, $BF, $0B, $F0, $F7, $F7, $01, $FE, $FE, $FE, $00, $FF, $FF, $FF
.db $2F, $C0, $DF, $DF, $7F, $00, $FF, $FF, $FF, $00, $FF, $FF, $FF, $00, $FF, $FF
.db $FF, $00, $FF, $FF, $FF, $00, $FF, $FF, $7F, $00, $FF, $FF, $2F, $C0, $DF, $DF
.db $00, $7F, $FF, $FF, $C0, $3F, $BF, $BF, $A0, $1F, $DF, $DF, $C0, $1F, $FF, $FF
.db $F0, $0F, $EF, $EF, $F4, $03, $FB, $FB, $FA, $01, $FD, $FD, $FE, $00, $FF, $FF
.db $07, $F0, $FF, $FF, $0F, $F0, $F7, $F7, $03, $F8, $FF, $FF, $07, $F8, $FB, $FB
.db $01, $FC, $FF, $FF, $02, $FC, $FD, $FD, $02, $FC, $FD, $FD, $85, $78, $7B, $7B
.db $00, $FE, $FF, $FF, $03, $FC, $FD, $FD, $05, $F8, $FB, $FB, $03, $F8, $FF, $FF
.db $0F, $F0, $F7, $F7, $2F, $C0, $DF, $DF, $5F, $80, $BF, $BF, $7F, $00, $FF, $FF

; Data from 77A4 to 7B43 (928 bytes)
DATA_77A4:
.db $1C, $1C, $1C, $1C, $26, $26, $26, $26
.fill 12, $63
.db $32, $32, $32, $32, $1C, $1C, $1C, $1C, $00, $00, $00, $00, $0C, $0C, $0C, $0C
.db $1C, $1C, $1C, $1C
.fill 16, $0C
.db $3F, $3F, $3F, $3F, $00, $00, $00, $00, $3E, $3E, $3E, $3E, $63, $63, $63, $63
.db $07, $07, $07, $07, $1E, $1E, $1E, $1E, $3C, $3C, $3C, $3C, $70, $70, $70, $70
.db $7F, $7F, $7F, $7F, $00, $00, $00, $00, $3F, $3F, $3F, $3F, $06, $06, $06, $06
.db $0C, $0C, $0C, $0C, $1E, $1E, $1E, $1E, $03, $03, $03, $03, $63, $63, $63, $63
.db $3E, $3E, $3E, $3E, $00, $00, $00, $00, $0E, $0E, $0E, $0E, $1E, $1E, $1E, $1E
.db $36, $36, $36, $36, $66, $66, $66, $66, $7F, $7F, $7F, $7F, $06, $06, $06, $06
.db $06, $06, $06, $06, $00, $00, $00, $00, $7E, $7E, $7E, $7E, $60, $60, $60, $60
.db $7E, $7E, $7E, $7E, $03, $03, $03, $03, $03, $03, $03, $03, $63, $63, $63, $63
.db $3E, $3E, $3E, $3E, $00, $00, $00, $00, $1E, $1E, $1E, $1E, $30, $30, $30, $30
.db $60, $60, $60, $60, $7E, $7E, $7E, $7E, $63, $63, $63, $63, $63, $63, $63, $63
.db $3E, $3E, $3E, $3E, $00, $00, $00, $00, $7F, $7F, $7F, $7F, $63, $63, $63, $63
.db $06, $06, $06, $06, $0C, $0C, $0C, $0C
.fill 12, $18
.db $00, $00, $00, $00, $3C, $3C, $3C, $3C, $62, $62, $62, $62, $72, $72, $72, $72
.db $3C, $3C, $3C, $3C, $4F, $4F, $4F, $4F, $43, $43, $43, $43, $3E, $3E, $3E, $3E
.db $00, $00, $00, $00, $3E, $3E, $3E, $3E, $63, $63, $63, $63, $63, $63, $63, $63
.db $3F, $3F, $3F, $3F, $03, $03, $03, $03, $06, $06, $06, $06, $3C, $3C, $3C, $3C
.db $00, $00, $00, $00
.fill 24, $63
.db $3E, $3E, $3E, $3E, $00, $00, $00, $00
LABEL_7904:
.db $7E, $7E, $7E, $7E
.fill 12, $63
.db $7E, $7E, $7E, $7E, $60, $60, $60, $60, $60, $60, $60, $60, $00, $00, $00, $00
.db $3F, $3F, $3F, $3F
.fill 24, $0C
.db $00, $00, $00, $00, $3E, $3E, $3E, $3E
.fill 20, $63
.db $3E, $3E, $3E, $3E, $00, $00, $00, $00, $00, $7E, $7E, $7E, $00, $63, $63, $63
.db $00, $63, $63, $63, $00, $67, $67, $67, $00, $7C, $7C, $7C, $00, $6E, $6E, $6E
.db $00, $67, $67, $67, $00, $00, $00, $00, $00
LABEL_7984:
.db $3F, $3F, $3F, $00, $30, $30, $30
.db $00, $30, $30, $30, $00, $3E, $3E, $3E, $00, $30, $30, $30, $00, $30, $30, $30
.db $00, $3F, $3F, $3F, $00, $00, $00, $00, $00, $1C, $1C, $1C, $00, $36, $36, $36
.db $00, $63, $63, $63, $00, $63, $63, $63, $00, $7F, $7F, $7F, $00, $63, $63, $63
.db $00, $63, $63, $63, $00, $00, $00, $00, $00, $7C, $7C, $7C, $00, $66, $66, $66
.db $00, $63, $63, $63, $00, $63, $63, $63, $00, $63, $63, $63, $00, $66, $66, $66
.db $00, $7C, $7C, $7C, $00, $00, $00, $00, $00, $33, $33, $33, $00, $33, $33, $33
.db $00, $33, $33, $33, $00, $1E, $1E, $1E, $00, $0C, $0C, $0C, $00, $0C, $0C, $0C
.db $00, $0C, $0C, $0C, $00, $00, $00, $00, $00, $18, $18, $18, $00, $18, $18, $18
.db $00, $18, $18, $18, $00, $18, $18, $18, $00, $18, $18, $18, $00, $00, $00, $00
.db $00, $18, $18, $18, $00, $00, $00, $00, $00, $1F, $00, $00, $00, $30, $00, $00
.db $00, $60, $00, $00, $00, $67, $00, $00, $00, $63, $00, $00, $00, $33, $00, $00
.db $00, $1F, $00, $00, $00, $00, $00, $00, $00, $1C, $00, $00, $00, $36, $00, $00
.db $00, $63, $00, $00, $00, $63, $00, $00, $00, $7F, $00, $00, $00, $63, $00, $00
.db $00, $63, $00, $00, $00, $00, $00, $00, $00, $63, $00, $00, $00, $77, $00, $00
.db $00, $7F, $00, $00, $00, $7F, $00, $00, $00, $6B, $00, $00, $00, $63, $00, $00
.db $00, $63, $00, $00, $00, $00, $00, $00, $00, $3F, $00, $00, $00, $30, $00, $00
.db $00, $30, $00, $00, $00, $3E, $00, $00, $00, $30, $00, $00, $00, $30, $00, $00
.db $00, $3F, $00, $00, $00, $00, $00, $00, $00, $3E, $00, $00, $00, $63, $00, $00
.db $00, $63, $00, $00, $00, $63, $00, $00, $00, $63, $00, $00, $00, $63, $00, $00
.db $00, $3E, $00, $00, $00, $00, $00, $00, $00, $63, $00, $00, $00, $63, $00, $00
.db $00, $63, $00, $00, $00, $77, $00, $00, $00, $3E, $00, $00, $00, $1C, $00, $00
.db $00, $08, $00, $00, $00, $00, $00, $00, $00, $7E, $00, $00, $00, $63, $00, $00
.db $00, $63, $00, $00, $00, $67, $00, $00, $00, $7C, $00, $00, $00, $6E, $00, $00
.db $00, $67, $00, $00, $00, $00, $00, $00, $00, $78, $78, $78, $00, $3C, $3C, $3C
.db $00, $1E, $1E, $1E, $00, $0E, $0E, $0E, $00, $1E, $1E, $1E, $00, $3C, $3C, $3C
.db $00, $78, $78, $78
.fill 36, $00

LABEL_7B44:
	di
	ld hl, DATA_22F0
	call LABEL_85B4
	ld hl, $C4F7
	ld de, $3800
	call LABEL_8562
	ld.lil hl, romStart + DATA_2440
	ld.lil de, SegaVRAM+$2000
	ld bc, $0280
	ldir.lil
	xor a
	ld ($C13C), a
	ld ($C143), a
	ld a, $03
	ld ($C133), a
	ld ($C13B), a
	ld ($C142), a
	ld (DrawTilemapTrig), a
	ei
	ld hl, +_
	ld ($C20C), hl
	ret

_:
	ld a, ($C13D)
	and a
	jp z, LABEL_7D85
	ld a, ($C102)
	and $80
	jr z, +_
	ld hl, DATA_7BB7
	ld de, $C4B7
	ld bc, $000B
	ldir
	ld a, $04
	ld ($C135), a
	ld hl, LABEL_7D6B
	ld ($C20C), hl
	ret

; Data from 7BB7 to 7BC1 (11 bytes)
DATA_7BB7:
.db $02, $04, $79, $1C, $00, $02, $84, $79, $1C, $00, $00

_:	ld hl, $C4B7
	ld a, ($C102)
	ld b, a
	and $03
	jr z, LABEL_7C15
	ld a, ($C149)
	xor $01
	ld ($C149), a
	jr nz, +_
	ld a, $02
	ld de, $01BF
	ld ($C21D), de
	ld de, LABEL_7904
	call LABEL_7DBB
	ld a, $02
	ld de, LABEL_1C
	ld ($C21D), de
	ld de, LABEL_7984
	call LABEL_7DBB
	jr LABEL_7C15

_:
	ld de, LABEL_1C
	ld ($C21D), de
	ld a, $02
	ld de, LABEL_7904
	call LABEL_7DBB
	ld de, $01BF
	ld ($C21D), de
	ld a, $02
	ld de, LABEL_7984
	call LABEL_7DBB
LABEL_7C15:
	ld a, ($C149)
	and a
	jp nz, LABEL_7C5A
	ld a, ($C102)
	and $0C
	jp z, LABEL_7C89
	and $04
	jr z, +_
	ld a, ($C134)
	dec a
	cp $FF
	jr nz, ++_
	xor a
	jr ++_

_:	ld a, ($C134)
	inc a
	cp $10
	jr nz, +_
	dec a
_:	ld ($C134), a
	ld de, $7912
	ld ($C123), de
	call LABEL_7D8C
	ld a, ($C134)
	add a, $03
	ld de, $791A
	ld ($C123), de
	call LABEL_7D8C
	jr LABEL_7C89

LABEL_7C5A:
	ld a, ($C102)
	and $0C
	jr z, LABEL_7C89
	ld de, $7990
	ld ($C121), de
	and $04
	jr z, +_
	ld a, ($C133)
	dec a
	jr z, LABEL_7C89
	ld ($C133), a
	inc a
	call LABEL_7D38
	jr LABEL_7C89

_:	ld a, ($C133)
	inc a
	cp $05
	jr z, LABEL_7C89
	ld ($C133), a
	call LABEL_7CF3
LABEL_7C89:
	ld a, ($C11A)
	and $07
	jr nz, LABEL_7CB6
	ld de, LABEL_7904
	ld a, ($C149)
	and a
	jr z, +_
	ld de, LABEL_7984
_:
	ld bc, LABEL_1C
	ld a, ($C11A)
	and $08
	jr z, +_
	ld bc, $01BF
_:
	ld (hl), $02
	inc hl
	ld (hl), e
	inc hl
	ld (hl), d
	inc hl
	ld (hl), c
	inc hl
	ld (hl), b
	inc hl
	ld (hl), $00
LABEL_7CB6:
	ld a, ($C143)
	ld b, a
	ld a, ($C13C)
	cp b
	jr z, +_
	ld ($C143), a
	ld de, $7B52
	ld ($C123), de
	call LABEL_7D8C
	ld a, ($C13C)
	add a, $03
	ld de, $7B5A
	ld ($C123), de
	call LABEL_7D8C
_:
	ld a, ($C142)
	ld b, a
	ld a, ($C13B)
	cp b
	ret z
	ld de, $7BD8
	ld ($C121), de
	ld ($C142), a
	dec a
	jr c, LABEL_7D38
	dec a
LABEL_7CF3:
	ld c, a
	ld de, ($C121)
	sla c
	sla c
	ld b, $00
	ex de, hl
	add hl, bc
	ld ($C121), hl
	ex de, hl
	ld de, $0105
	ld ($C21D), de
	ld de, $0106
	ld ($C21F), de
	ld de, ($C121)
	ld a, $04
	call LABEL_7DBB
	ld de, $0107
	ld ($C21D), de
	ld de, $0108
	ld ($C21F), de
	ld de, ($C121)
	ex de, hl
	ld bc, $0040
	add hl, bc
	ex de, hl
	ld a, $04
	jp LABEL_7DBB

LABEL_7D38:
	ld c, a
	ld de, ($C121)
	sla c
	sla c
	ld b, $00
	ex de, hl
	add hl, bc
	ld ($C121), hl
	ex de, hl
	ld de, LABEL_1C
	ld ($C21D), de
	ld ($C21F), de
	ld de, ($C121)
	ld a, $04
	call LABEL_7DBB
	ld de, ($C121)
	ex de, hl
	ld bc, $0040
	add hl, bc
	ex de, hl
	ld a, $04
	jr LABEL_7DBB

LABEL_7D6B:
	ld a, ($C13D)
	and a
	jr z, LABEL_7D85
	ld hl, $C4B7
	ld a, ($C13D)
	cp $04
	jp nz, LABEL_7CB6
	xor a
	ld ($C12D), a
	ld hl, LABEL_97A0
	jr +_

LABEL_7D85:
	ld hl, LABEL_9F40
_:	ld ($C20C), hl
	ret

LABEL_7D8C:
	inc a
	push hl
	call LABEL_8639
	pop hl
	ld ($C121), a
	ld de, $C21D
	ld a, ($C121)
	srl a
	srl a
	srl a
	srl a
	jr nz, +_
	ld a, $1C
_:	ld (de), a
	inc de
	xor a
	ld (de), a
	inc de
	ld a, ($C121)
	and $0F
	ld (de), a
	inc de
	xor a
	ld (de), a
	ld a, $04
	ld de, ($C123)
LABEL_7DBB:
	ld b, a
	ld (hl), a
	inc hl
	ld (hl), e
	inc hl
	ld (hl), d
	inc hl
	ld de, $C21D
_:
	ld a, (de)
	inc de
	ld (hl), a
	inc hl
	djnz -_
	ld (hl), $00
	ret

LABEL_7DCE:
	ld a, ($C194)
	inc a
	ld ($C194), a
	ld a, ($C150)
	ld ($C151), a
	call LABEL_A022
	call LABEL_A290
	call LABEL_A559
	call LABEL_A84F
	call LABEL_AB3C
	call LABEL_ADB6
	call LABEL_B02A
	call LABEL_B2B3
	ld a, ($C137)
	ld b, a
	ld a, ($C150)
	or b
	ld ($C150), a
	xor a
	ld ($C137), a
	ld ($C181), a
	ld ($C198), a
	jp LABEL_9A6D

LABEL_7E0B:	
	ld a, ($C102)
	and $10
	jp z, LABEL_9A6D
	ld a, ($C147)
	xor $01
	ld ($C147), a
	jp LABEL_9A6D

LABEL_7E1E:
	ld b, $32
	jr +_

LABEL_7E22:
	ld b, a
	inc hl
	ld a, (hl)
	sla a
	add a, b
	ld b, a
_:
	ld a, ($C194)
	srl a
	srl a
	srl a
	and $01
	add a, b
	ex af, af'
	ld a, (ix+1)
	ld b, a
	ld a, (iy+1)
	ld c, a
	exx
	jp LABEL_87E2

LABEL_7E42:
	ld b, (ix+1)
	ld c, (iy+1)
	ld a, b
	sub d
	jr c, ++++_
	ld h, a
	ld a, c
	ld c, l
	sub e
	jr c, ++_
	cp h
	jr c, +_
	ld hl, DATA_7E9F
	jr LABEL_7E92

_:	ld hl, DATA_7EA3
	jr LABEL_7E92

_:	neg
	cp h
	jr c, +_
	ld hl, DATA_7EA7
	jr LABEL_7E92

_:	ld hl, DATA_7EAB
	jr LABEL_7E92

_:	neg
	ld h, a
	ld a, c
	ld c, l
	sub e
	jr c, ++_
	cp h
	jr nc, +_
	ld hl, DATA_7EAF
	jr LABEL_7E92

_:	ld hl, DATA_7EB3
	jr LABEL_7E92

_:	neg
	cp h
	jr nc, +_
	ld hl, DATA_7EB7
	jr LABEL_7E92

_:	ld hl, DATA_7EBB
	jr LABEL_7E92

LABEL_7E92:
	ld a, (hl)
	ld b, a
	and c
	jr z, +_
	inc hl
	jr LABEL_7E92

_:	ld a, b
	call LABEL_84A3
	ret

; Data from 7E9F to 7EA2 (4 bytes)
DATA_7E9F:
.db $01, $04, $08, $02

; Data from 7EA3 to 7EA6 (4 bytes)
DATA_7EA3:
.db $04, $01, $02, $08

; Data from 7EA7 to 7EAA (4 bytes)
DATA_7EA7:
.db $02, $04, $08, $01

; Data from 7EAB to 7EAE (4 bytes)
DATA_7EAB:
.db $04, $02, $01, $08

; Data from 7EAF to 7EB2 (4 bytes)
DATA_7EAF:
.db $08, $01, $02, $04

; Data from 7EB3 to 7EB6 (4 bytes)
DATA_7EB3:
.db $01, $08, $04, $02

; Data from 7EB7 to 7EBA (4 bytes)
DATA_7EB7:
.db $08, $02, $01, $04

; Data from 7EBB to 7EBE (4 bytes)
DATA_7EBB:
.db $02, $08, $04, $01

LABEL_7EBF:
	ld a, ($C153)
	and a
	jr nz, +_
	xor a
	ret

_:	ld a, (ix+1)
	ld b, a
	ld a, (iy+1)
	ld c, a
	ld a, ($C189)
	sub b
	jr nc, +_
	neg
_:	cp $20
	ret nc
	ld b, a
	ld a, ($C18B)
	sub c
	jr nc, +_
	neg
_:
	cp $20
	ret nc
	add a, b
	cp $06
	ret

LABEL_7EEA:
	ld a, ($C195)
	and a
	jr z, +_
	xor a
	ret

_:
	ld a, (ix+1)
	ld b, a
	ld a, (iy+1)
	ld c, a
	ld a, ($C189)
	sub b
	jr nc, +_
	neg
_:
	cp $20
	ret nc
	ld b, a
	ld a, ($C18B)
	sub c
	jr nc, +_
	neg
_:
	cp $20
	ret nc
	add a, b
	cp $08
	ret

LABEL_7F15:
	ex af, af'
	ld a, (ix+1)
	ld b, a
	and $07
	jr nz, ++_
	ld a, (iy+1)
	ld c, a
	and $07
	jr nz, ++_
	call LABEL_8480
	ld a, $03
	call LABEL_7F57
	ld b, a
	ex af, af'
	xor $01
	ld c, a
	call LABEL_8498
	and b
	jr z, +_
	ld a, c
	xor $02
	ld c, a
	call LABEL_8498
	and b
	jr z, +_
	ld a, c
	xor $01
	ld c, a
	call LABEL_8498
	and b
	jr z, +_
	ld a, c
	xor $02
	ret

_:	ld a, c
	ret

_:	ex af, af'
	xor $01
	ret

LABEL_7F57:
	ld a, (ix+1)
	and a
	jr z, +_
	cp $B0
	jr nc, +_
	ld a, ($C14F)
	jp LABEL_851D

_:
	ld a, $03
	ret

LABEL_7F6A:
	add a, $34
	ex af, af'
	ld b, (ix+1)
	ld c, (iy+1)
	exx
	jp LABEL_87E2

LABEL_7F77:
	ld a, ($C195)
	dec a
	ld ($C195), a
	jr z, LABEL_7FCA
	ld hl, DATA_3F28
	ld a, ($C11E)
	and a
	jr z, +_
	ld hl, DATA_5B34
_:	ld a, ($C182)
	ld bc, DATA_7FD7
	add a, c
	ld c, a
	ld a, (bc)
	ld c, a
	ld b, $00
	add hl, bc
	ld b, (ix+1)
	ld c, (iy+1)
	exx
	call LABEL_87BF
	call LABEL_885F
	exx
	ld a, c
	sub $04
	ld (ix+0), a
	ld (ix+1), a
	ld a, b
	sub $08
	ld (iy+0), a
	ld (iy+2), b
	ld a, (hl)
	ld (iy+1), a
	inc hl
	ld a, (hl)
	ld (iy+3), a
	ld a, ($C120)
	inc a
	ld ($C120), a
	ret

LABEL_7FCA:
	ld a, ($C197)
	ld b, a
	ld a, ($C196)
	or b
	ld ($C196), a
	xor a
	ret

; Data from 7FD7 to 7FDF (9 bytes)
DATA_7FD7:
.db $00, $D0, $F0, $D2, $F2, $F2, $F2, $F2, $F2

; Jump Table from 7FE0 to 7FF3 (10 entries, indexed by, $C19A)
DATA_7FE0:
.dw LABEL_84AE, LABEL_84C1, LABEL_84D4, LABEL_84F1, $0000, $0000, $0000, $0000

; Data from 7FF4 to 7FFF (12 bytes)
.db $54, $4D, $52, $20, $53, $45, $47, $41, $19, $00, $00, $00, $18, $40, $10, $7F

LABEL_8000:
	ld a, ($C189)
	and a
	ret z
	cp $A8
	ret nc
	ld b, a
	ld a, ($C18B)
	ld c, a
	call LABEL_846A
	ld ($C191), a
	ld b, $02
	cp $03
	jr z, ++_
	cp $05
	ret c
	cp $06
	jr nz, +_
	push hl
	call LABEL_8553
	ld de, DATA_8043
	ex de, hl
	ld bc, $0006
	ldir
	ld hl, ($C174)
	ld ($C17F), hl
	xor a
	ld ($C182), a
	inc a
	ld ($C181), a
	ld ($C198), a
	pop hl
	ld b, $04
	jr +++_

; Data from 8043 to 8048 (6 bytes)
DATA_8043:
.db $02, $34, $C0, $1F, $00, $00

_:
	ld b, $04
_:
	xor a
_:
	ld de, $C130
	call LABEL_86B6
	ld a, ($C192)
	inc a
	ld ($C192), a
	and $01
	add a, $14
	call LABEL_85E5
	ld a, ($C17A)
	inc a
	ld ($C17A), a
	ld a, ($C153)
	dec a
	ld ($C153), a
	ld a, b
	ld (hl), a
	ld a, ($C11E)
	and a
	jr nz, +_
	ld hl, $3800
	ld b, $00
	ld a, ($C189)
	and $F8
	srl a
	srl a
	ld c, a
	add hl, bc
	ld a, ($C18B)
	and $F8
	ld c, a
	sla c
	rl b
	sla c
	rl b
	sla c
	rl b
	add hl, bc
	ld d, h
	ld e, l
	call LABEL_8553
	ld (hl), $02
	inc hl
	ld (hl), e
	inc hl
	ld (hl), d
	inc hl
	ld (hl), $1C
	inc hl
	ld (hl), $00
	inc hl
	ld (hl), $00
	ret

_:	call LABEL_8553
	ld ($C121), hl
	ld a, ($C18B)
	ld c, a
	ld a, ($C189)
	ld b, a
	cp $08
	jr nz, +_
	ld a, c
	cp $18
	jp z, LABEL_8153
	cp $A0
	jp z, LABEL_8165
	jr ++_

_:
	ld a, b
	cp $98
	jr nz, +_
	ld a, c
	cp $18
	jp z, LABEL_8177
	cp $A0
	jp z, LABEL_8181
_:
	ld a, ($C18B)
	ld b, a
	srl a
	srl b
	srl b
	srl b
	add a, b
	add a, $02
	ld b, a
	and $07
	sla a
	sla a
	add a, $03
	ld c, a
	ld a, b
	and $F8
	srl a
	srl a
	srl a
	ld b, a
	inc b
	ld hl, $C357
	ld de, $01A0
_:
	add hl, de
	djnz -_
	add hl, bc
	ld a, ($C189)
	ld b, a
	srl a
	srl b
	srl b
	srl b
	add a, b
	add a, $02
	ld b, a
	and $07
	ld d, a
	ld a, b
	and $F8
	ld c, a
	ld b, $00
	sla c
	rl b
	sla c
	rl b
	add hl, bc
	ld b, d
	inc b
	xor a
	dec a
_:
	rr a
	djnz -_
	ld b, a
	ld a, (hl)
	and b
	ld (hl), a
	ld b, h
	ld c, l
	ld de, $5689
	add hl, de
	push hl
	ld de, $4000
	add hl, de
	ex de, hl
	ld hl, ($C121)
	ld (hl), $01
	inc hl
	ld (hl), e
	inc hl
	ld (hl), d
	inc hl
	ld (hl), a
	inc hl
	ld (hl), $00
	pop hl

	ld a, l
	and $E0
	ld l, a
	ld de, $1B80
	xor a
	sbc hl, de

	; divide the address pointer by the tile size
	srl	h
	rr	l		; hl /= 2
	srl	h
	rr	l		; hl /= 2
	srl	h
	rr	l		; hl /= 2
	srl	h
	rr	l		; hl /= 2
	srl	h
	rr	l		; hl /= 2

	; divide HL by 13
	ld de, $000D
	or a
_:	inc a
	sbc hl, de
	jr nc, -_
	dec a
	add hl, de	; L = remainder, A = rounded quotient

	ld h, a
	ld e, l
	ld l, $40
	mlt hl
	add hl, de
	add hl, de
	ld.lil de, SegaVRAM+$3801
	add.lil hl, de	; HL = tile attribute
	res.lil 7, (hl)
	ret

LABEL_8153:
	ld hl, $C837
	ld bc, $0003
	ld d, $FC
	call +_
	ld hl, $C857
	ld d, $7F
	jr +_

LABEL_8165:
	ld hl, $D88B
	ld bc, $0003
	ld d, $FC
	call +_
	ld hl, $D8AB
	ld d, $7F
	jr +_

LABEL_8177:
	ld hl, $C9B7
	ld bc, $0003
	ld d, $1F
	jr +_

LABEL_8181:
	ld hl, $DA0B
	ld bc, $0003
	ld d, $1F
	jr +_

_:
	ld a, (hl)
	and d
	ld (hl), a
	call +_
	add hl, bc
	ld a, (hl)
	and d
	ld (hl), a
	call +_
	inc hl
	ld a, (hl)
	and d
	ld (hl), a
	call +_
	add hl, bc
	ld a, (hl)
	and d
	ld (hl), a
	call +_
	inc hl
	ld a, (hl)
	and d
	ld (hl), a
	call +_
	add hl, bc
	ld a, (hl)
	and d
	ld (hl), a
	call +_
	ld hl, ($C121)
	ld (hl), $00
	ret

_:
	push hl
	push bc
	ld bc, $9689
	add hl, bc
	ld b, h
	ld c, l
	ld hl, ($C121)
	ld (hl), $01
	inc hl
	ld (hl), c
	inc hl
	ld (hl), b
	inc hl
	ld (hl), a
	inc hl
	ld ($C121), hl
	pop bc
	pop hl
	ret

LABEL_81D4:
	ld a, ($C115)
	ld b, a
	ld a, ($C116)
	cp b
	jr nz, LABEL_81F4
	ld a, ($C117)
	inc a
	ld ($C117), a
	cp $3C
	jr c, LABEL_823B
	xor a
	ld ($C13D), a
	ld ($C117), a
	ld a, (Port_SerialReceive)
	jr LABEL_823B

LABEL_81F4:
	ld hl, $C105
	add a, l
	ld l, a
	ld c, (hl)
	ld a, ($C13D)
	cp $03
	jr nc, +_
	ld a, c
	ld ($C13D), a
	jr ++++_

_:
	ld a, ($C13E)
	and a
	jr nz, +_
	ld a, c
	ld ($C13E), a
	jr +++_

_:	dec a
	ld hl, $C137
	add a, l
	ld l, a
	ld a, ($C13E)
	cp $01
	jr nz, +_
	ld a, (hl)
	or c
	ld c, a
_:
	ld (hl), c
	xor a
	ld ($C13E), a
_:
	ld a, ($C116)
	inc a
	and $0F
	ld ($C116), a
	ld a, ($C115)
	ld b, a
	ld a, ($C116)
	cp b
	jr nz, LABEL_81F4
LABEL_823B:
	ld a, ($C135)
	cp $03
	jr nc, +_
	ld b, a
	ld a, ($C12E)
	cp b
	ret z
	ld a, b
	; ld (Port_SerialSend), a
	ret

_:
	ld a, ($C136)
	and a
	jr z, +++++_
	cp $06
	jr nz, ++_
	ld a, ($C135)
	cp $03
	jr z, +_
	ld a, ($C14B)
	jr +++_

_:
	ld a, ($C134)
	jr ++_

_:
	dec a
	ld hl, $C12F
	add a, l
	ld l, a
	ld a, (hl)
_:
	; ld (Port_SerialSend), a
	ld a, ($C136)
	cp $01
	jr nz, +_
	xor a
	ld ($C12F), a
	ld ($C128), a
_:
	xor a
	ld ($C136), a
	ret

_:
	ld de, $C12F
	ld hl, $C128
	ld bc, $0701
_:
	ld a, (de)
	cp (hl)
	jr nz, +_
	inc c
	inc de
	inc hl
	djnz -_
	ld a, $FF
	jr ++_

_:
	ld (hl), a
	ld a, c
	ld ($C136), a
_:
	; ld (Port_SerialSend), a
	ret

LABEL_82A1:
	ld a, ($C102)
	and $80
	jr nz, +_
	ld a, ($C176)
	dec a
	ld ($C176), a
	jr nz, ++_
_:
	ld a, $01
	ld ($C135), a
	ld de, $C20C
	ld hl, DATA_26D
	ld bc, $0010
	ldir
	ret

_:
	call LABEL_87BF
	push ix
	pop hl
	ld c, $5B
	ld a, ($C11E)
	and a
	jr z, +_
	ld c, $58
_:
	ld b, $08
_:
	ld (hl), c
	inc hl
	djnz -_
	push iy
	pop de
	ld hl, DATA_82F5
	ld a, ($C11E)
	and a
	jr z, +_
	ld hl, DATA_8305
_:
	ld bc, $0010
	ldir
	ld a, ($C120)
	add a, $08
	ld ($C120), a
	ret

; Data from 82F5 to 8304 (16 bytes)
DATA_82F5:
.db $5C, $14, $64, $15, $6C, $16, $74, $17, $84, $18, $8C, $19, $94, $17, $9C, $1A

; Data from 8305 to 8314 (16 bytes)
DATA_8305:
.db $40, $14, $48, $15, $50, $16, $58, $17, $68, $18, $70, $19, $78, $17, $80, $1A

LABEL_8315:
	di
	ld hl, DATA_1740
	call LABEL_85B4
	ld hl, $C4F7
	ld de, $3800
	call LABEL_8562
	ld hl, $C127
	call LABEL_8AF2
	ld.lil hl, SegaVRAM+$384E
	ld de, $C222
	ld b, $06

_:	ld a, (de)
	ld.lil (hl), a
	inc.lil hl
	ld.lil (hl), $00
	inc.lil hl
	dec de
	djnz -_
	ld a, ($C11E)
	and a
	jr nz, +_
	ld.lil hl, SegaVRAM+$3A5E
	ld de, $001C
	ld.lil (hl), de
	inc l
	inc l
	ld.lil (hl), de
_:	ld a, $01
	ld ($C135), a
	ld hl, +_
	ld ($C20C), hl
	ld a, 3
	ld (DrawTilemapTrig), a
	ei
	ret

_:
	ld hl, $C4B7
	ld a, ($C13D)
	cp $03
	jr z, ++_
	ld a, ($C102)
	and $80
	jr z, LABEL_83D3
	ld a, ($C11F)
	and a
	jr nz, +_
	call LABEL_B55C
	ld hl, $C4B7
	ld a, $02
	ld de, LABEL_979B
	jr +++_

_:
	ld a, ($C13D)
	cp $01
	jr nz, +++_
_:
	ld a, $10
	call LABEL_85E5
	ld a, $01
	ld ($C11F), a
	ld a, $03
	; ld (Port_SerialSend), a
	ld de, LABEL_7B44
_:
	ld ($C135), a
	ld ($C20C), de
	ret

_:
	ld (hl), $02
	inc hl
	ld (hl), $C8
	inc hl
	ld (hl), $7A
	inc hl
	ld (hl), $1C
	inc hl
	ld (hl), $00
	inc hl
	ld (hl), $00
	xor a
	ld ($C11F), a
LABEL_83D3:
	ld de, LABEL_1C
	ld a, ($C102)
	and $03
	jr z, +_
	ld a, $10
	call LABEL_85E5
	ld a, ($C11F)
	xor $01
	ld ($C11F), a
	ld (hl), $02
	inc hl
	ld (hl), $48
	inc hl
	ld (hl), $7A
	inc hl
	ld (hl), e
	inc hl
	ld (hl), d
	inc hl
	ld (hl), $02
	inc hl
	ld (hl), $C8
	inc hl
	ld (hl), $7A
	inc hl
	ld (hl), e
	inc hl
	ld (hl), d
	inc hl
	ld (hl), $00
_:
	ld a, ($C11A)
	and $0F
	jr nz, +++_
	ld ($C12E), a
	ld bc, $7A48
	ld a, ($C11F)
	and $01
	jr z, +_
	ld bc, $7AC8
_:
	ld a, ($C11A)
	and $10
	jr nz, +_
	ld de, $01BF
_:
	ld (hl), $02
	inc hl
	ld (hl), c
	inc hl
	ld (hl), b
	inc hl
	ld (hl), e
	inc hl
	ld (hl), d
	inc hl
	ld (hl), $00
_:
	ld a, ($C102)
	and $0C
	jr z, ++_
	ld a, $10
	call LABEL_85E5
	ld bc, LABEL_1C
	ld de, LABEL_1C
	ld a, ($C11E)
	xor $01
	ld ($C11E), a
	jr z, +_
	ld bc, $013E
	ld de, $013F
_:
	ld (hl), $04
	inc hl
	ld (hl), $5E
	inc hl
	ld (hl), $7A
	inc hl
	ld (hl), c
	inc hl
	ld (hl), b
	inc hl
	ld (hl), e
	inc hl
	ld (hl), d
	inc hl
	ld (hl), $00
_:	ret

LABEL_846A:
	ld hl, $C227
	ld d, $00
	ld e, b
	srl e
	srl e
	srl e
	add hl, de
	ld e, c
	add hl, de
	sla e
	rl d
	add hl, de
	ld a, (hl)
	ret

LABEL_8480:
	call LABEL_846A
	ld de, $0018
	add hl, de
	ld c, (hl)
	ld de, $0030
	xor a
	sbc hl, de
	ld b, (hl)
	ld de, $0017
	add hl, de
	ld d, (hl)
	inc hl
	inc hl
	ld e, (hl)
	ret

LABEL_8498:
	push bc
	ld b, a
	inc b
	xor a
	scf
_:
	rl a
	djnz -_
	pop bc
	ret

LABEL_84A3:
	push bc
	ld b, a
	ld a, $FF
_:
	inc a
	rr b
	jr nc, -_
	pop bc
	ret

; 1st entry of Jump Table from 94F1 (indexed by, $C187)
LABEL_84AE:
	call LABEL_8516
	ld h, (iy+1)
	ld l, (iy+0)
	call LABEL_8511
	ld (iy+1), h
	ld (iy+0), l
	ret

; 2nd entry of Jump Table from 94F1 (indexed by, $C187)
LABEL_84C1:
	call LABEL_8516
	ld h, (iy+1)
	ld l, (iy+0)
	call LABEL_850E
	ld (iy+1), h
	ld (iy+0), l
	ret

; 3rd entry of Jump Table from 94F1 (indexed by, $C187)
LABEL_84D4:
	call LABEL_8516
	ld h, (ix+1)
	ld l, (ix+0)
	call LABEL_8511
	push af
	ld a, h
	cp $B0
	jr c, +_
	sub $50
	ld h, a
_:
	pop af
	ld (ix+1), h
	ld (ix+0), l
	ret

; 4th entry of Jump Table from 94F1 (indexed by, $C187)
LABEL_84F1:
	call LABEL_8516
	ld h, (ix+1)
	ld l, (ix+0)
	call LABEL_850E
	push af
	ld a, h
	cp $B0
	jr c, +_
	sub $B0
	ld h, a
_:
	pop af
	ld (ix+1), h
	ld (ix+0), l
	ret

LABEL_850E:
	ld a, h
	add hl, bc
	ret

LABEL_8511:
	xor a
	ld a, h
	sbc hl, bc
	ret

LABEL_8516:
	ld a, (bc)
	ld d, a
	inc bc
	ld a, (bc)
	ld b, a
	ld c, d
	ret

LABEL_851D:
	cp b
	jr nc, +_
	ld b, $00
	jr ++_

_:
	ld b, $01
_:
	cp c
	jr nc, +_
	ld c, $00
	jr ++_

_:
	ld c, $01
_:
	cp d
	jr nc, +_
	ld d, $00
	jr ++_

_:
	ld d, $01
_:
	cp e
	jr nc, +_
	ld e, $00
	jr ++_

_:
	ld e, $01
_:
	xor a
	rr e
	rl a
	rr d
	rl a
	rr c
	rl a
	rr b
	rl a
	ret

LABEL_8553:
	ld bc, $0000
	ld hl, $C4B7
_:
	ld a, (hl)
	and a
	ret z
	add a, $03
	ld c, a
	add hl, bc
	jr -_

LABEL_8562:
	ld a, $28
	ld ($C121), a
	ld a, $12
	ld ($C122), a
	jr +_

LABEL_856E:
	sla a
	ld ($C121), a
	ld a, b
	ld ($C122), a

_:	push de
	ld.lil de, romStart
	add.lil hl, de
	pop de

	ld.lil ix, SegaVRAM
	add.lil ix, de
	push.lil ix
	pop.lil de
	ld bc, 0

_:	ld a, ($C121)
	ld c, a
	ldir.lil

	push.lil hl
	ld hl, 0
	ld l, a
	ld a, $40
	sub l
	ld l, a
	add.lil hl, de
	ex.lil de, hl
	pop.lil hl

	ld a, ($C122)
	dec a
	ld ($C122), a
	jr nz, -_
	ld a, 3
	ld (DrawTilemapTrig), a
	ret

; Data from 8596 to 8598 (3 bytes)
.db $11, $F7, $C4

LABEL_8599:
	ld a, (hl)
	cp $FF
	ret z
	sla a
	jr c, +_
	srl a
	ld (de), a
	inc de
	inc hl
	jr LABEL_8599

_:
	srl a
	ld b, a
	inc hl
	ld a, (hl)
_:
	ld (de), a
	inc de
	djnz -_
	inc hl
	jr LABEL_8599

LABEL_85B4:
	ld bc, $C4F7
_:
	ld e, (hl)
	inc hl
	ld a, (hl)
	inc hl
	ld d, a
	and $80
	jr nz, +_
	ld a, e
	ld (bc), a
	inc bc
	ld a, d
	ld (bc), a
	inc bc
	jr -_

_:
	ld a, d
	cp $FF
	ret z
	ld a, e
	ld ($C121), a
	ld e, (hl)
	inc hl
	ld d, (hl)
	inc hl
_:
	ld a, e
	ld (bc), a
	inc bc
	ld a, d
	ld (bc), a
	inc bc
	ld a, ($C121)
	dec a
	ld ($C121), a
	jr nz, -_
	jr ---_

LABEL_85E5:
	push bc
	push de
	push hl
	push ix
	call LABEL_B580
	pop ix
	pop hl
	pop de
	pop bc
	ret

LABEL_85F3:
	ld a, ($C153)
	and a
	ret z
	ld a, ($C178)
	ld b, a
	ld a, ($C196)
	and a
	jr z, +_
	ld a, $0A
	cp b
	ret z
	ld ($C178), a
	jr LABEL_85E5

_:
	ld hl, ($C17F)
	ld a, l
	or h
	jr z, +_
	ld a, $09
	cp b
	ret z
	ld ($C178), a
	jr LABEL_85E5

_:	ld hl, DATA_8634
	ld a, ($C153)
	ld c, $00
_:
	cp (hl)
	jr nc, +_
	inc hl
	inc c
	jr -_

_:
	ld a, c
	add a, $04
	cp b
	ret z
	ld ($C178), a
	jr LABEL_85E5

; Data from 8634 to 8638 (5 bytes)
DATA_8634:
.db $80, $60, $40, $20, $00

LABEL_8639:
	ld hl, DATA_864A - 1
	ld b, a
	xor a
_:
	inc hl
	srl b
	jr nc, +_
	add a, (hl)
	daa
	jr -_

_:
	jr nz, --_
	ret

; Data from 864A to 8651 (8 bytes)
DATA_864A:
.db $01, $02, $04, $08, $16, $32, $64, $28

; Data from 8652 to 8661 (16 bytes)
DATA_8652:
.fill 16, $00

LABEL_8662:
	ld.lil hl, romStart + DATA_3FC
	ld.lil de, CRAM
	ld bc, $40
	ldir.lil

	xor a
	ld.lil hl, SegaVRAM+$3800
	ld.lil de, SegaVRAM+$3801
	ld bc, $0700
	ld.lil (hl), $1C
	ld.lil (de), a
	inc e
	ldir.lil

	ld a, 3
	ld (DrawTilemapTrig), a
	ret

LABEL_8689:
	ld a, $16
	call LABEL_85E5
	ld a, ($C16D)
	ld c, a
	ld hl, DATA_87B4
	jr +_

LABEL_8697:
	ld a, $17
	call LABEL_85E5
	ld a, $3C
	ld ($C176), a
	ld ($C195), a
	ld a, ($C182)
	ld c, a
	inc a
	ld ($C182), a
	ld hl, DATA_87AC
_:
	ld b, $00
	add hl, bc
	ld a, (hl)
	ld de, $C130
LABEL_86B6:
	push bc
	push hl
	ld hl, DATA_8790
	rst $08	; LABEL_8
	ld a, (de)
	add a, (hl)
	daa
	ld (de), a
	inc de
	inc hl
	ld a, (de)
	adc a, (hl)
	daa
	ld (de), a
	inc de
	ld a, (de)
	adc a, $00
	daa
	ld (de), a
	inc de
	ld a, (de)
	adc a, $00
	daa
	ld (de), a
	ld hl, $C132
	ld de, $C127
	ld b, $03
_:
	ld a, (de)
	cp (hl)
	jr c, +_
	jr nz, ++_
	dec hl
	dec de
	djnz -_
	jr ++_

_:
	ld hl, $C130
	ld de, $C125
	ld bc, $0003
	ldir
	ld a, $01
	ld ($C14C), a
_:
	ld a, ($C135)
	cp $05
	jr nc, LABEL_874A
	call LABEL_8553
	ld a, ($C14D)
	and a
	jr nz, LABEL_8744
	ld a, ($C132)
	cp $01
	jr nz, LABEL_8744
	ld ($C14D), a
	ld a, $0D
	call LABEL_85E5
	ld a, ($C133)
	inc a
	ld ($C133), a
	ld ($C14A), a
	ld b, a
	ld a, ($C11E)
	and a
	jr z, LABEL_874A
	ld de, $7BDE
	ld a, ($C11F)
	and a
	jr z, +_
	ld de, $7A1E
_:
	ld (hl), $01
	inc hl
	ld a, b
	dec a
	dec a
	sla a
	add a, e
	ld (hl), a
	inc hl
	ld (hl), d
	inc hl
	ld (hl), $1B
	inc hl
	ld (hl), $00
LABEL_8744:
	ld a, ($C11E)
	and a
	jr nz, +_
LABEL_874A:
	pop hl
	pop bc
	ret

_:
	push hl
	ld hl, $C132
	call LABEL_8AF2
	pop hl
	ld (hl), $0C
	inc hl
	ld (hl), $9C
	inc hl
	ld (hl), $79
	inc hl
	ld de, $C222
	ld b, $06
_:
	ld a, (de)
	dec de
	ld (hl), a
	inc hl
	ld (hl), $00
	inc hl
	djnz -_
	ld (hl), $00
	ld a, ($C14C)
	and a
	jr z, ++_
	ld (hl), $0C
	inc hl
	ld (hl), $DC
	inc hl
	ld (hl), $78
	inc hl
	ld de, $C222
	ld b, $06
_:
	ld a, (de)
	dec de
	ld (hl), a
	inc hl
	ld (hl), $00
	inc hl
	djnz -_
	ld (hl), $00
_:
	pop hl
	pop bc
	ret

; Data from 8790 to 87AB (28 bytes)
DATA_8790:
.db $10, $00, $50, $00, $00, $01, $00, $02, $00, $03, $00, $04, $00, $05, $00, $07
.db $00, $08, $00, $10, $00, $16, $00, $20, $00, $30, $00, $50

; Data from 87AC to 87B3 (8 bytes)
DATA_87AC:
.db $03, $05, $08, $0A, $0A, $0A, $0A, $0A

; Data from 87B4 to 87BB (8 bytes)
DATA_87B4:
.db $02, $04, $06, $07, $09, $0B, $0C, $0D

_:	call LABEL_885F
LABEL_87BF:
	ld a, ($C120)
	ld hl, $DF00
	ld e, a
	ld d, $00
	add hl, de
	push hl
	pop ix
	ld hl, $DF00
	add a, $20
	rst $08	; LABEL_8
	push hl
	pop iy
	ld a, ($C120)
	inc a
	ld ($C120), a
	ld (DrawSATTrig), a
	ret

LABEL_87DD:
	call LABEL_87BF
	jr +_

LABEL_87E2:
	call -_
_:
	ex af, af'
	ld de, $0000
	ld hl, $0000
	ld e, a
	and $0F
	sla a
	ld l, a
	ld a, e
	and $F0
	ld e, a
	sla e
	rl d
	sla e
	rl d
	add hl, de
	push hl
	exx
	pop de
	ld a, $B0
	cp c
	jr nc, +_
	ld a, ($C120)
	dec a
	ld ($C120), a
	ret

_:	ld hl, DATA_3F28
	ld a, ($C11E)
	and a
	jr z, +_
	ld hl, DATA_5B34
_:	add hl, de

LABEL_881C:
	ld a, c
	sub $08
	ld (ix+0), a
	ld a, b
	sub $08
	ld (iy+0), a
	ld a, (hl)
	ld (iy+1), a
	ld a, c
	sub $08
	ld (ix+1), a
	ld (iy+2), b
	inc hl
	ld a, (hl)
	ld (iy+3), a
	ld (ix+2), c
	ld a, b
	sub $08
	ld (iy+4), a
	ld de, $001F
	add hl, de
	ld a, (hl)
	ld (iy+5), a
	ld (ix+3), c
	ld (iy+6), b
	inc hl
	ld a, (hl)
	ld (iy+7), a
	ld a, ($C120)
	add a, $03
	ld ($C120), a
	ret

LABEL_885F:
	exx
	ld a, ($C11E)
	and a
	jr z, +_
	ld a, b
	srl a
	srl b
	srl b
	srl b
	add a, b
	add a, $32
	ld b, a
	ld a, c
	srl a
	srl c
	srl c
	srl c
	add a, c
	add a, $19
	ld c, a
	exx
	ret

_:
	ld a, b
	add a, $30
	ld b, a
	ld a, c
	add a, $1B
	ld c, a
	ld a, ($C148)
	sub c
	neg
	ld c, a
	exx
	ret

LABEL_8893:
	call LABEL_85F3
LABEL_8896:
	ld a, ($C11E)
	and a
	jp nz, LABEL_89FA
	ld a, ($C11F)
	and a
	jp z, LABEL_8958
	ld hl, $C21D
	ld a, $1C
	ld b, $09
_:
	ld (hl), a
	inc hl
	djnz -_
	ld a, ($C11A)
	and $18
	jr nz, +_
	ld bc, $1C1C
	ld a, $1C
	jr ++_

_:
	ld bc, $010A
	ld a, $0B
_:
	ld ($C224), bc
	ld ($C223), a
	ld hl, DATA_8C26
	ld ($C121), hl
	ld hl, $0900
	ld ($C123), hl
	ld a, ($C11A)
	and $60
	jr z, +_
	ld hl, $C132
	call LABEL_8AF2
	jr +++_

_:
	ld a, $1A
	ld ($C222), a
	ld a, ($C14B)
	inc a
	ld ($C220), a
	ld a, $1B
	ld ($C21F), a
	ld a, ($C14A)
	sub $01
	jr nc, +_
	xor a
_:
	ld ($C21D), a
_:
	call LABEL_8B35
	ld a, ($C11A)
	and $18
	jr nz, +_
	ld bc, $1C1C
	ld a, $1C
	jr ++_

_:	ld bc, $020A
	ld a, $0B
_:
	ld ($C224), bc
	ld ($C223), a
	ld hl, DATA_8C38
	ld ($C121), hl
	ld hl, $0900
	ld ($C123), hl
	ld a, ($C11A)
	and $60
	jr z, +_
	ld hl, $C13A
	call LABEL_8AF2
	jr +++_

_:
	ld a, $1A
	ld ($C222), a
	ld a, ($C13C)
	inc a
	ld ($C220), a
	ld a, $1B
	ld ($C21F), a
	ld a, ($C13B)
	and a
	jr z, +_
	dec a
_:	ld ($C21D), a
_:	call LABEL_8B35
	jr +++_

LABEL_8958:
	ld a, ($C11A)
	and $18
	jr nz, +_
	ld bc, $1C1C
	ld d, $1C
	jr ++_

_:	ld bc, $0C0D
	ld d, $0B
	ld a, ($C14C)
	and a
	jr nz, +_
	ld bc, $010A
_:	ld ($C224), bc
	ld a, d
	ld ($C223), a
	ld hl, DATA_8C26
	ld ($C121), hl
	ld hl, $0900
	ld ($C123), hl
	ld hl, $C132
	call LABEL_8AF2
	call LABEL_8B35

_:	ld a, ($C11F)
	and a
	jp nz, LABEL_89FA
	ld a, ($C134)
	inc a
	cp $02
	jr c, +_
	ld a, $02
_:	ld ($C121), a
	ld bc, $C89E
	ld a, ($C134)
	ld de, DATA_8ADA
	ld h, $00
	ld l, a
	add hl, de
	ex de, hl
_:	ld a, (de)
	dec de
	push bc
	push de
	ex af, af'
	exx
	call LABEL_87DD
	pop de
	pop bc
	ld a, b
	sub $10
	ld b, a
	ld a, ($C121)
	dec a
	ld ($C121), a
	jr nz, -_
	call LABEL_87BF
	ld a, $8E
	ld (ix+0), a
	ld a, $B7
	ld (iy+0), a
	ld a, $1B
	ld (iy+1), a
	ld a, $8E
	ld (ix+1), a
	ld a, $C7
	ld (iy+2), a
	ld a, ($C14A)
	sub $01
	jr nc, +_
	xor a
_:	ld (iy+3), a
	ld a, ($C120)
	add a, $01
	ld ($C120), a
LABEL_89FA:
	call LABEL_8B6F
	ld hl, ($C183)
	ld a, l
	or h
	jp z, LABEL_8A75
	ld a, ($C176)
	and a
	jr nz, +_
	dec hl
	ld ($C183), hl
_:	ld ix, DATA_8AD6
	ld iy, DATA_8AD8
	call LABEL_7EBF
	jr nc, +_
	call LABEL_8689
	ld hl, $0000
	ld ($C183), hl
	ld a, $78
	ld ($C185), a
_:
	ld a, ($C11E)
	and a
	jr nz, +_
	ld a, ($C16D)
	add a, $3E
	ex af, af'
	ld bc, $5078
	exx
	call LABEL_87E2
	jp LABEL_8AD5

_:	call LABEL_87BF
	ld bc, $5078
	exx
	call LABEL_885F
	exx
	ld a, c
	sub $04
	ld (ix+0), a
	ld a, b
	sub $04
	ld (iy+0), a
	ld a, ($C16D)
	ld b, a
	and $03
	ld c, a
	ld a, b
	and $04
	sla a
	sla a
	sla a
	add a, c
	add a, $DC
	ld hl, DATA_5B34
	ld b, $00
	ld c, a
	add hl, bc
	ld a, (hl)
	ld (iy+1), a
	ret

LABEL_8A75:
	ld a, ($C185)
	and a
	jr z, LABEL_8AD5
	dec a
	ld ($C185), a
	call LABEL_87BF
	ld hl, DATA_3F28
	ld a, ($C11E)
	and a
	jr z, +_
	ld hl, DATA_5B34
_:	ld a, ($C16D)
	ld b, a
	and $01
	sla a
	sla a
	sla a
	sla a
	sla a
	ld c, a
	ld a, b
	and $FE
	add a, c
	ld c, a
	ld b, $00
	add hl, bc
	ld bc, $00D4
	add hl, bc
	ld bc, $5078
	exx
	call LABEL_885F
	exx
	ld a, c
	sub $04
	ld (ix+0), a
	ld (ix+1), a
	ld a, b
	sub $08
	ld (iy+0), a
	ld (iy+2), b
	ld a, (hl)
	ld (iy+1), a
	inc hl
	ld a, (hl)
	ld (iy+3), a
	ld a, ($C120)
	inc a
	ld ($C120), a
LABEL_8AD5:
	ret

; Data from 8AD6 to 8AD9 (4 bytes)
DATA_8AD6:
.db $00, $50
DATA_8AD8
.db $00, $78

; Data from 8ADA to 8AF1 (24 bytes)
DATA_8ADA:
.db $3E, $3F, $40, $40, $41, $41, $42, $42, $43, $43, $44, $44
.fill 12, $45

LABEL_8AF2:
	ld de, $C222
	ld b, $02
_:
	ld a, (hl)
	srl a
	srl a
	srl a
	srl a
	jr nz, ++_
	ld a, $1C
	ld (de), a
	dec de
	ld a, (hl)
	and $0F
	jr nz, +++_
	ld a, $1C
	ld (de), a
	dec de
	dec hl
	djnz -_
	jr ++++_

_:	ld a, (hl)
	srl a
	srl a
	srl a
	srl a
_:
	ld (de), a
	dec de
	ld a, (hl)
	and $0F
_:
	ld (de), a
	dec de
	dec hl
	djnz ---_
_:
	ld a, (hl)
	srl a
	srl a
	srl a
	srl a
	ld (de), a
	dec de
	xor a
	ld (de), a
	ret

LABEL_8B35:
	call LABEL_87BF
	ld hl, $C225
	ld de, ($C121)
	ld bc, ($C123)
_:	ld a, (hl)
	cp $1C
	jr z, +_
	ld a, (de)
	inc de
	ld (ix+0), a
	ld a, (de)
	inc de
	ld (iy+0), a
	ld a, (hl)
	dec hl
	ld (iy+1), a
	inc ix
	lea iy, iy+2
	inc c
	jr ++_

_:	inc de
	inc de
	dec hl
_:	djnz ---_
	ld a, ($C120)
	sub $01
	add a, c
	ld ($C120), a
	ret

LABEL_8B6F:
	ld a, ($C11E)
	and a
	ret z
	ld a, ($C11F)
	and a
	ret z
	call LABEL_8553
	ld ($C121), hl
	ld de, $C138
	ld hl, $C13F
	ld b, $03
_:	ld a, (de)
	cp (hl)
	jr nz, +_
	inc hl
	inc de
	djnz -_
	jr +++_

_:	ld a, ($C138)
	ld ($C13F), a
	ld a, ($C139)
	ld ($C140), a
	ld a, ($C13A)
	ld ($C141), a
	ld hl, $C13A
	call LABEL_8AF2
	ld hl, ($C121)
	ld (hl), $0C
	inc hl
	ld (hl), $5C
	inc hl
	ld (hl), $7B
	inc hl
	ld de, $C222
	ld b, $06
_:
	ld a, (de)
	dec de
	ld (hl), a
	inc hl
	ld (hl), $00
	inc hl
	djnz -_
	ld (hl), $00
	ret

_:
	ld a, ($C142)
	ld b, a
	ld a, ($C13B)
	cp b
	jr z, ++++_
	ld ($C142), a
	ld hl, $C21D
	ld c, $1B
	ld b, $05
	and a
	jr z, +_
	dec a
	jr nz, LABEL_8BE2
_:	ld c, $1C
LABEL_8BE2:
	ld (hl), c
	inc hl
	dec a
	jr nz, +_
	ld c, $1C
_:
	djnz LABEL_8BE2
	ld hl, ($C121)
	ld (hl), $0A
	inc hl
	ld (hl), $DE
	inc hl
	ld (hl), $7B
	inc hl
	ld de, $C21D
	ld b, $05
_:
	ld a, (de)
	inc de
	ld (hl), a
	inc hl
	ld (hl), $00
	inc hl
	djnz -_
	ld (hl), $00
	ret

_:	ld a, ($C143)
	ld b, a
	ld a, ($C13C)
	cp b
	ret z
	ld ($C143), a
	inc a
	ld hl, ($C121)
	ld (hl), $01
	inc hl
	ld (hl), $A6
	inc hl
	ld (hl), $7B
	inc hl
	ld (hl), a
	inc hl
	ld (hl), $00
	ret

; Data from 8C26 to 8C37 (18 bytes)
DATA_8C26:
.db $17, $A0, $17, $A8, $17, $B0, $1F, $A0, $1F, $A8, $1F, $B0, $1F, $B8, $1F, $C0
.db $1F, $C8

; Data from 8C38 to 8C49 (18 bytes)
DATA_8C38:
.db $96, $30, $96, $38, $96, $40, $9E, $30, $9E, $38, $9E, $40, $9E, $48, $9E, $50
.db $9E, $58

LABEL_8C4A:
	ld hl, DATA_2CB
	ld de, $C227
	call LABEL_8599
	ld a, ($C11E)
	and a
	jr nz, +_
	ld.lil hl, romStart+DATA_4054
	ld.lil de, SegaVRAM+$0520
	ld bc, $1AE0
	ldir.lil

	ld.lil hl, romStart + DATA_766
	ld bc, $0180
	ldir.lil

	ld hl, DATA_43C
	call LABEL_85B4
	ld a, $15
	ld b, $1B
	ld hl, $C4F7
	ld de, $3800
	call LABEL_856E
	call ClearTileCache
	ld a, $2C
	ld ($C118), a
	ret

_:
	ld bc, LABEL_1C
	ld de, $00DC
	ld hl, $C4F7
	ld a, $10
	ld ($C121), a
_:
	ld a, $0D
	ld ($C122), a
_:
	ld (hl), e
	inc hl
	ld (hl), d
	inc hl
	inc de
	ld a, ($C122)
	dec a
	ld ($C122), a
	jr nz, -_
	ld a, $07
	ld ($C122), a
_:
	ld (hl), c
	inc hl
	ld (hl), b
	inc hl
	ld a, ($C122)
	dec a
	ld ($C122), a
	jr nz, -_
	ld a, ($C121)
	dec a
	ld ($C121), a
	jr nz, ---_
	ld a, d
	add a, $06
	ld d, a
	ld (hl), e
	inc hl
	ld (hl), d
	inc hl
	ld a, $0B
_:
	ld (hl), $F1
	inc hl
	ld (hl), $00
	inc hl
	dec a
	jr nz, -_
	inc de
	ld (hl), e
	inc hl
	ld (hl), d
	inc hl
	ld a, $1B
_:
	ld (hl), c
	inc hl
	ld (hl), b
	inc hl
	dec a
	jr nz, -_
	ld hl, $000C
	ld ($C567), hl
	ld hl, $000D
	ld ($C569), hl
	ld hl, $000B
	ld ($C56B), hl
	ld hl, $0001
	ld ($C5DF), hl
	ld hl, $000A
	ld ($C5E1), hl
	ld hl, $000B
	ld ($C5E3), hl
	inc de
	ex de, hl
	ld de, $1000
	add hl, de
	ld ($C629), hl
	ld ($C62B), hl
	ld ($C651), hl
	ld ($C653), hl
	ld ($C679), hl
	ld ($C67B), hl
	ld a, ($C11F)
	and a
	jr z, +_
	ld hl, $0002
	ld ($C6F7), hl
	ld hl, $000A
	ld ($C6F9), hl
	ld hl, $000B
	ld ($C6FB), hl
	ld hl, $001A
	ld ($C633), hl
	ld ($C74B), hl
	ld a, ($C14B)
	inc a
	ld ($C635), a
	ld a, ($C13C)
	inc a
	ld ($C74D), a
_:
	ld hl, $C4F7
	ld de, $3800
	call LABEL_8562

	ld.lil hl, romStart + DATA_5C34
	ld.lil de, SegaVRAM + $0520
	ld bc, $1660
	ldir.lil

	push.lil de
	call LABEL_8E50
	pop.lil de
	ld.lil hl, romStart + $C4F7
	ld bc, $1A00
	ldir.lil

	ld.lil hl, romStart + DATA_1520
	ld c, $40
	ldir.lil

	ld.lil hl, romStart + DATA_1240
	ld c, $20
	ldir.lil

	ld a, $30
	ld ($C118), a
	ld a, $C8
	ld ($C119), a
	ld hl, $C132
	call LABEL_8AF2
	ld.lil hl, romStart + $C222
	ld.lil de, SegaVRAM + $399C

	ld b, $06
_:	ld a, (hl)
	dec hl
	ld.lil (de), a
	xor a
	inc e
	ld.lil (de), a
	inc e
	djnz -_

	ld hl, $C127
	call LABEL_8AF2
	ld.lil de, SegaVRAM + $38DC
	ld hl, $C222

	ld b, $06
_:	ld a, (hl)
	dec hl
	ld.lil (de), a
	xor a
	inc e
	ld.lil (de), a
	inc e
	djnz -_

	ld a, ($C11F)
	and a
	jr nz, +++++_
	ld hl, $C21D
	ld a, $1C
	ld b, $07
_:
	ld (hl), a
	inc hl
	djnz -_
	ld de, $C223
	ld a, ($C134)
	ld c, a
	ld b, $00
	ld hl, DATA_8E38
	add hl, bc
	ld b, $04
_:
	ld a, (hl)
	ld (de), a
	dec de
	dec de
	dec hl
	dec c
	jp m, +_
	djnz -_

_:	ld.lil hl, romStart + $C21D
	ld.lil de, SegaVRAM+$3A9A
	ld b, $07
_:	ldi.lil
	ld a, $08
	ld.lil (de), a
	inc.lil de
	djnz -_
	ld a, 3
	ld (DrawTilemapTrig), a
	ret

_:
	ld hl, $C13A
	call LABEL_8AF2
	ld hl, $C222
	ld.lil de, SegaVRAM + $3B5C
	ld b, $06
_:
	ld a, (hl)
	dec hl
	ld.lil (de), a
	xor a
	ld.lil (de), a
	djnz -_
	ld a, 3
	ld (DrawTilemapTrig), a
	ret

; Data from 8E38 to 8E4F (24 bytes)
DATA_8E38:
.db $BF, $C0, $C1, $C1, $C2, $C2, $D8, $D8, $D9, $D9, $DA, $DA
.fill 12, $DB

LABEL_8E50:
	ld hl, DATA_8E6
	ld de, $C4F7
	ld a, $10
	ld ($C121), a
_:
	ld a, $0D
	ld ($C122), a
_:
	ld c, (hl)
	inc hl
	ld b, (hl)
	inc hl
	push hl
	ld a, b
	and $06
	srl a
	ld hl, DATA_8E84
	jp LABEL_18

LABEL_8E70:
	pop hl
	ld a, ($C122)
	dec a
	ld ($C122), a
	jr nz, -_
	ld a, ($C121)
	dec a
	ld ($C121), a
	jr nz, --_
	ret

; Jump Table from 8E84 to 8E85 (1 entries, indexed by unknown)
DATA_8E84:
.dw LABEL_8E8C
.dw LABEL_8E96
.dw LABEL_8EA4
.dw LABEL_8ECB

; 1st entry of Jump Table from 8E84 (indexed by unknown)
LABEL_8E8C:
	call LABEL_8F14
	ld bc, $0020
	ldir
	jr LABEL_8E70

LABEL_8E96:	
	call LABEL_8F14
	ld b, $20
_:	call LABEL_8F31
	inc hl
	inc de
	djnz -_
	jr LABEL_8E70

; 1st entry of Jump Table from 8E88 (indexed by unknown)
LABEL_8EA4:
	call LABEL_8F14
	ld a, $20
	ld ($C123), a
	push hl
_:
	ld hl, DATA_8EF4
	ld a, ($C123)
	dec a
	ld c, a
	ld b, $00
	add hl, bc
	ld c, (hl)
	pop hl
	push hl
	add hl, bc
	ld a, (hl)
	ld (de), a
	inc de
	ld a, ($C123)
	dec a
	ld ($C123), a
	jr nz, -_
	pop hl
	jr LABEL_8E70

LABEL_8ECB:	
	call LABEL_8F14
	ld a, $20
	ld ($C123), a
	push hl
_:	ld hl, DATA_8EF4
	ld a, ($C123)
	dec a
	ld c, a
	ld b, $00
	add hl, bc
	ld c, (hl)
	pop hl
	push hl
	add hl, bc
	call LABEL_8F31
	inc de
	ld a, ($C123)
	dec a
	ld ($C123), a
	jr nz, -_
	pop hl
	jp LABEL_8E70

; Data from 8EF4 to 8F13 (32 bytes)
DATA_8EF4:
.db $03, $02, $01, $00, $07, $06, $05, $04, $0B, $0A, $09, $08, $0F, $0E, $0D, $0C
.db $13, $12, $11, $10, $17, $16, $15, $14, $1B, $1A, $19, $18, $1F, $1E, $1D, $1C

LABEL_8F14:
	ld a, b
	and $01
	ld b, a
	sla c
	rl b
	sla c
	rl b
	sla c
	rl b
	sla c
	rl b
	sla c
	rl b
	ld hl, DATA_AA0
	add hl, bc
	ret

; Data from 8F31 to 8F53 (35 bytes)
LABEL_8F31:
	ld c, (hl)
	sla c
	rr a
	sla c
	rr a
	sla c
	rr a
	sla c
	rr a
	sla c
	rr a
	sla c
	rr a
	sla c
	rr a
	sla c
	rr a
	ld (de), a
	ret

LABEL_8F54:
	ld a, ($C11F)
	and a
	jp nz, LABEL_952B
	ld b, $00
	ld a, ($C134)
	cp $02
	jr z, +_
	inc b
	cp $05
	jr z, +_
	inc b
	cp $09
	jr z, +_
	cp $0D
	jr z, +_
	cp $11
	jp nz, LABEL_952B
_:	di
	ld a, b
	ld ($C14E), a
	call LABEL_8662
	ld a, ($C14E)
	cp $01
	jr nz, +_
	ld.lil de, SegaVRAM + $3A54
	ld a, $3A
	ld.lil (de), a
	xor a
	ld.lil (de), a

_:	ld.lil hl, romStart + DATA_7304
	ld.lil de, SegaVRAM+$0520
	ld bc, $04A0
	ldir.lil
	xor a

_:	push af
	ld hl, DATA_9037
	ld c, a
	add hl, bc
	ld c, (hl)
	ld.lil hl, DATA_901B
	push.lil de
	rst $10	; LABEL_10
	ld.lil de, romStart
	add.lil hl, de
	pop.lil de
	ldir.lil
	pop af
	inc a
	cp $0E
	jr nz, -_

	ei
	ld a, $30
	ld ($C118), a
	ld a, $C8
	ld ($C119), a
	ld a, $01
	call LABEL_85E5
	xor a
	ld ($C146), a
	ld ($C199), a
	ld hl, $6000
	ld ($C18A), hl
	ld ($C19D), hl
	ld hl, $D800
	ld ($C188), hl
	ld hl, $FF50
	ld ($C18E), hl
	ld hl, $FF00
	ld ($C19B), hl
	ld hl, $FF40
	ld ($C1A1), hl
	ld hl, +_
	ld ($C20C), hl
	ld a, 3
	ld (DrawTilemapTrig), a
	ret

; Data from 901B to 9036 (28 bytes)
DATA_901B:
.dw DATA_4054 + $0080, DATA_4054 + $0300, DATA_4054 + $1220, DATA_4054 + $1560
.dw DATA_4054 + $0C00, DATA_4054 + $0EA0, DATA_4054 + $0D00, DATA_4054 + $0CE0
.dw DATA_4054 + $0FA0, DATA_4054 + $0F00, DATA_4054 + $0D20, DATA_4054 + $0CE0
.dw DATA_4054 + $0FC0, DATA_4054 + $0F00

; Data from 9037 to 9044 (14 bytes)
DATA_9037:
.db $40, $80, $40, $80, $40, $40, $20, $20, $20, $20, $20, $20, $20, $20

_:	ld a, ($C14E)
	ld hl, DATA_904E
	jp LABEL_18

; Jump Table from 904E to 9053 (3 entries, indexed by, $C14E)
DATA_904E:
.dw LABEL_9054, LABEL_90CC, LABEL_9150

; 1st entry of Jump Table from 904E (indexed by, $C14E)
LABEL_9054:
	ld a, ($C199)
	ld hl, DATA_905D
	jp LABEL_18

; Jump Table from 905D to 9060 (2 entries, indexed by, $C199)
DATA_905D:
.dw LABEL_9061, LABEL_90A1

; 1st entry of Jump Table from 905D (indexed by, $C199)
LABEL_9061:
	ld a, ($C19C)
	cp $10
	jr nc, LABEL_908A
	ld hl, $F400
	ld ($C188), hl
	ld hl, $00C8
	ld ($C18E), hl
	ld hl, $2800
	ld ($C19B), hl
	ld hl, $00B0
	ld ($C1A1), hl
	ld a, $01
	call LABEL_85E5
	ld a, $01
	ld ($C199), a
LABEL_908A:
	call LABEL_91C5
	call LABEL_91D1
	ld hl, DATA_90C4
	call LABEL_9267
	call LABEL_91DD
	call LABEL_9282
	add a, $0E
	jp LABEL_91DD

; 2nd entry of Jump Table from 905D (indexed by, $C199)
LABEL_90A1:
	ld a, ($C189)
	cp $F0
	jr c, +_
	cp $F2
	jp c, LABEL_91B6
_:	call LABEL_91C5
	call LABEL_91D1
	ld hl, DATA_90C8
	call LABEL_9267
	call LABEL_91F0
	call LABEL_9282
	add a, $12
	jp LABEL_91DD

; Data from 90C4 to 90C7 (4 bytes)
DATA_90C4:
.db $40, $42, $44, $40

; Data from 90C8 to 90CB (4 bytes)
DATA_90C8:
.db $17, $1A, $1D, $17

; 2nd entry of Jump Table from 904E (indexed by, $C14E)
LABEL_90CC:
	ld a, ($C199)
	ld hl, DATA_90D5
	jp LABEL_18

; Jump Table from 90D5 to 90DC (4 entries, indexed by, $C199)
DATA_90D5:
.dw LABEL_90DD, LABEL_90F1, LABEL_9115, LABEL_912F

; 1st entry of Jump Table from 90D5 (indexed by, $C199)
LABEL_90DD:
	ld a, ($C19C)
	cp $80
	jr nz, +_
	ld hl, $FFF0
	ld ($C1A1), hl
	ld a, $01
	ld ($C199), a
_:	jr LABEL_908A

; 2nd entry of Jump Table from 90D5 (indexed by, $C199)
LABEL_90F1:
	ld a, ($C19C)
	cp $78
	jr nz, +_
	ld a, $30
	ld ($C19A), a
	ld a, $02
	ld ($C199), a
_:	call LABEL_908A
	ld a, $60
	ld (ix+4), a
	ld a, $80
	ld (iy+8), a
	ld a, $29
	ld (iy+9), a
	ret

; 3rd entry of Jump Table from 90D5 (indexed by, $C199)
LABEL_9115:
	ld a, ($C19A)
	dec a
	ld ($C19A), a
	jr nz, +_
	ld a, $3C
	ld ($C19A), a
	ld a, $03
	ld ($C199), a
_:
	call LABEL_9282
	ld a, $02
	jr +_

; 4th entry of Jump Table from 90D5 (indexed by, $C199)
LABEL_912F:
	ld a, ($C19A)
	dec a
	ld ($C19A), a
	jp z, LABEL_91B6
	call LABEL_9282
	ld a, $04
_:	call LABEL_91DD
	ld a, $60
	ld (ix+4), a
	ld a, $80
	ld (iy+8), a
	ld a, $2A
	ld (iy+9), a
	ret

; 3rd entry of Jump Table from 904E (indexed by, $C14E)
LABEL_9150:
	ld a, ($C199)
	ld hl, DATA_9159
	jp LABEL_18

; Jump Table from 9159 to 915C (2 entries, indexed by, $C199)
DATA_9159:
.dw LABEL_915D, LABEL_9190

; 1st entry of Jump Table from 9159 (indexed by, $C199)
LABEL_915D:
	ld a, ($C19C)
	cp $10
	jr nc, +_
	ld hl, $2800
	ld ($C19B), hl
	ld hl, $00B0
	ld ($C1A1), hl
	ld a, $01
	call LABEL_85E5
	ld a, $01
	ld ($C199), a
_:	call LABEL_91C5
	call LABEL_91D1
	ld hl, DATA_90C4
	call LABEL_9267
	call LABEL_91DD
	call LABEL_9282
	add a, $06
	jr LABEL_91DD

; 2nd entry of Jump Table from 9159 (indexed by, $C199)
LABEL_9190:
	ld a, ($C19C)
	cp $FF
	jr z, LABEL_91B6
	call LABEL_91D1
	call LABEL_9282
	add a, $0A
	call LABEL_91DD
	ld a, ($C19E)
	ld (ix+4), a
	ld a, ($C19C)
	sub $10
	ld (iy+8), a
	ld a, $3B
	ld (iy+9), a
	ret

LABEL_91B6:
	call LABEL_B55C
	ld a, $01
	ld ($C146), a
	ld hl, LABEL_952B
	ld ($C20C), hl
	ret

LABEL_91C5:
	ld bc, ($C18E)
	ld hl, ($C188)
	add hl, bc
	ld ($C188), hl
	ret

LABEL_91D1:
	ld bc, ($C1A1)
	ld hl, ($C19B)
	add hl, bc
	ld ($C19B), hl
	ret

LABEL_91DD:
	ld ($C121), a
	call LABEL_87BF
	ld hl, DATA_7294
	ld a, ($C121)
	ld e, a
	ld d, $00
	add hl, de
	jp LABEL_881C

LABEL_91F0:
	ld ($C121), a
	ld a, b
	sub $04
	ld b, a
	ld a, c
	sub $04
	ld c, a
	call LABEL_87BF
	ld hl, DATA_7294
	ld a, ($C121)
	ld e, a
	ld d, $00
	add hl, de
	call LABEL_881C
	ld a, c
	sub $08
	ld (ix+4), a
	ld a, b
	add a, $08
	ld (iy+8), a
	ld de, $FFE1
	add hl, de
	ld a, (hl)
	ld (iy+9), a
	ld (ix+5), c
	ld a, b
	add a, $08
	ld (iy+10), a
	ld de, $0020
	add hl, de
	ld a, (hl)
	ld (iy+11), a
	ld a, c
	add a, $08
	ld c, a
	ld (ix+6), c
	ld (ix+7), c
	ld (ix+8), c
	ld a, b
	sub $08
	ld (iy+12), a
	ld de, $001E
	add hl, de
	ld a, (hl)
	ld (iy+13), a
	ld (iy+14), b
	inc hl
	ld a, (hl)
	ld (iy+15), a
	ld a, b
	add a, $08
	ld (iy+16), a
	inc hl
	ld a, (hl)
	ld (iy+17), a
	ld a, ($C120)
	add a, $05
	ld ($C120), a
	ret

LABEL_9267:
	ld a, ($C190)
	inc a
	ld ($C190), a
	and $0C
	srl a
	srl a
	ld c, a
	ld b, $00
	add hl, bc
	ld a, ($C189)
	ld b, a
	ld a, ($C18B)
	ld c, a
	ld a, (hl)
	ret

LABEL_9282:
	ld a, ($C19C)
	ld b, a
	ld a, ($C19E)
	ld c, a
	ld a, ($C194)
	inc a
	ld ($C194), a
	srl a
	srl a
	and $02
	ret

LABEL_9298:
	ld a, ($C153)
	and a
	jr nz, +_
	ld a, ($C176)
	and a
	jr nz, +_
	call LABEL_B55C
	ld a, $3C
	ld ($C176), a
	ld hl, DATA_99C4 + $0E
	ld ($C214), hl
	ld a, ($C11F)
	and a
	jr z, +_
	ld a, ($C14B)
	cp $03
	jr nz, +_
	ld a, $06
	ld ($C135), a
_:	ld a, ($C195)
	and a
	ret nz
	ld a, ($C176)
	and a
	jp nz, LABEL_93A7
	ld a, ($C191)
	sub $02
	jr nc, +_
	xor a
_:
	cp $02
	jr c, +_
	sub $02
_:	ld b, a
	ld hl, $C157
	ld de, ($C17F)
	ld a, d
	or e
	jr z, +_
	ld hl, $C15D
_:	ld a, b
	inc a
	dec a
	jr z, +_
	inc hl
	inc hl
	dec a
	jr z, +_
	inc hl
	inc hl
_:	ld a, (hl)
	ld ($C18C), a
	inc hl
	ld a, (hl)
	ld ($C18F), a
	call LABEL_951B
	jr z, +_
	ld a, ($C187)
	ld hl, DATA_9527
	ld c, a
	ld b, $00
	add hl, bc
	ld a, (hl)
	ld ($C186), a
	ld b, a
	jr ++_

_:	ld a, ($C189)
	ld b, a
	ld a, ($C18B)
	ld c, a
	call LABEL_8480
	call LABEL_9502
	ld b, a
_:
	ld a, ($C187)
	push af
	ld a, ($C101)
	and $0F
	ld hl, DATA_9412
	rst $18	; LABEL_18
	pop af
	ld b, a
	ld a, ($C187)
	cp b
	jr z, +_
	xor a
	ld ($C101), a
	ld a, ($C18F)
	inc a
	ld ($C18F), a
_:
	call LABEL_951B
	jr nz, +_
	ld a, ($C187)
	call LABEL_8498
	ld b, a
	ld a, ($C186)
	and b
	jr nz, LABEL_93A7
_:
	ld ix, $C188
	ld iy, $C18A
	ld bc, $C18C
	ld a, ($C187)
	ld hl, DATA_94F1
	rst $18	; LABEL_18
	call LABEL_94F9
	call LABEL_951B
	jr nz, +_
	ld a, ($C189)
	ld b, a
	ld a, ($C18B)
	ld c, a
	call LABEL_8480
	call LABEL_9502
	ld b, a
	ld a, ($C101)
	and $0F
	ld hl, DATA_9412
	rst $18	; LABEL_18
	ld a, ($C187)
	call LABEL_8498
	ld b, a
	ld a, ($C186)
	and b
	jr nz, LABEL_93A7
_:
	ld a, ($C187)
	ld bc, $C18E
	ld hl, DATA_94F1
	rst $18	; LABEL_18
	call LABEL_94F9
	jr ++_

LABEL_93A7:
	ld a, ($C190)
	dec a
	and $0C
	jr nz, +_
	add a, $04
_:	ld ($C190), a
_:	ld a, ($C11E)
	and a
	jr nz, LABEL_93DB
	ld a, ($C18B)
	sub $48
	jr nc, +_
	xor a
_:
	cp $48
	jr c, +_
	ld a, $47
_:
	ld ($C148), a
	sub $18
	jr nc, +_
	sub $20
_:
	ld ($C119), a
LABEL_93DB:
	ld a, ($C190)
	inc a
	ld ($C190), a
	ld a, ($C187)
	sla a
	sla a
	ld c, a
	ld hl, DATA_9402
	ld b, $00
	ld a, ($C190)
	and $0C
	srl a
	srl a
	add a, c
	ld c, a
	add hl, bc
	ld a, (hl)
	ex af, af'
	ld a, ($C189)
	ld b, a
	ld a, ($C18B)
	ld c, a
	exx
	jp LABEL_87E2

; Data from 9402 to 9411 (16 bytes)
DATA_9402:
.db $20, $21, $22, $21, $20, $24, $23, $24, $20, $25, $26, $25, $20, $27, $28, $27

; Jump Table from 9412 to 9431 (16 entries, indexed by, $C101)
DATA_9412:
.dw LABEL_9444, LABEL_94CC, LABEL_94D4, LABEL_9444, LABEL_94DD, LABEL_9432, LABEL_9458, LABEL_9444
.dw LABEL_94E7, LABEL_947F, LABEL_94A5, LABEL_9444, LABEL_9444, LABEL_9444, LABEL_9444, LABEL_9444

; 6th entry of Jump Table from 9412 (indexed by, $C101)
LABEL_9432:
	call LABEL_951B
	ret nz
	ld a, b
	and $01
	jr nz, ++_
	ld a, b
	and $04
	jr z, ++++_
_:	xor a
	ld ($C187), a
; 1st entry of Jump Table from 9412 (indexed by, $C101)
LABEL_9444:
	ret

_:	ld a, b
	and $04
	ret nz
_:	ld a, $02
	ld ($C187), a
	ret

_:
	ld a, ($C187)
	cp $02
	jp z, ----_
	jr --_

; 7th entry of Jump Table from 9412 (indexed by, $C101)
LABEL_9458:
	call LABEL_951B
	ret nz
	ld a, b
	and $02
	jr nz, ++_
	ld a, b
	and $04
	jr z, ++++_
_:	ld a, $01
	ld ($C187), a
	ret

_:	ld a, b
	and $04
	ret nz

_:	ld a, $02
	ld ($C187), a
	ret

_:	ld a, ($C187)
	cp $02
	jr z, ----_
	jr --_

; 10th entry of Jump Table from 9412 (indexed by, $C101)
LABEL_947F:
	call LABEL_951B
	ret nz
	ld a, b
	and $01
	jr nz, ++_
	ld a, b
	and $08
	jr z, ++++_
_:	xor a
	ld ($C187), a
	ret

_:	ld a, b
	and $08
	ret nz

_:	ld a, $03
	ld ($C187), a
	ret

_:	ld a, ($C187)
	cp $03
	jr z, ----_
	jr --_

; 11th entry of Jump Table from 9412 (indexed by, $C101)
LABEL_94A5:
	call LABEL_951B
	ret nz
	ld a, b
	and $02
	jr nz, ++_
	ld a, b
	and $08
	jr z, ++++_
_:	ld a, $01
	ld ($C187), a
	ret

_:	ld a, b
	and $08
	ret nz

_:	ld a, $03
	ld ($C187), a
	ret

_:	ld a, ($C187)
	cp $03
	jr z, ----_
	jr --_

; 2nd entry of Jump Table from 9412 (indexed by, $C101)
LABEL_94CC:
	ld a, b
	and $01
	ret nz
	ld ($C187), a
	ret

; 3rd entry of Jump Table from 9412 (indexed by, $C101)
LABEL_94D4:
	ld a, b
	and $02
	ret nz
	inc a
	ld ($C187), a
	ret

; 5th entry of Jump Table from 9412 (indexed by, $C101)
LABEL_94DD:
	ld a, b
	and $04
	ret nz
	ld a, $02
	ld ($C187), a
	ret

; 9th entry of Jump Table from 9412 (indexed by, $C101)
LABEL_94E7:
	ld a, b
	and $08
	ret nz
	ld a, $03
	ld ($C187), a
	ret

; Jump Table from 94F1 to 94F8 (4 entries, indexed by, $C187)
DATA_94F1:
.dw LABEL_84AE, LABEL_84C1, LABEL_84D4, LABEL_84F1

LABEL_94F9:
	cp h
	ret z
	call LABEL_951B
	ret nz
	jp LABEL_8000

LABEL_9502:
	ld a, ($C189)
	and a
	jr z, +_
	cp $B0
	jr nc, +_
	ld a, $01
	call LABEL_851D
	ld ($C186), a
	ret

_:	ld a, $03
	ld ($C186), a
	ret

LABEL_951B:
	ld a, ($C189)
	and $07
	ret nz
	ld a, ($C18B)
	and $07
	ret

; Data from 9527 to 952A (4 bytes)
DATA_9527:
.db $0C, $0C, $03, $03

LABEL_952B:
	di
	ld hl, $C152
	xor a
_:
	ld (hl), a
	inc l
	jr nz, -_
	call LABEL_8C4A
	ld a, ($C134)
	ld hl, DATA_9685
	rst $10	; LABEL_10
	ld de, $C157
	ld bc, $0016
	ldir
	ld hl, ($C167)
	ld ($C155), hl
	ld a, ($C134)
	ld c, a
	ld hl, DATA_9753
	add hl, bc
	ld a, (hl)
	ld ($C16E), a
	ld hl, DATA_976B
	add hl, bc
	ld a, (hl)
	ld ($C16D), a
	ld hl, DATA_9783
	add hl, bc
	ld a, (hl)
	ld ($C172), a
	ld a, c
	cp $02
	jr nc, +_
	ld a, $04
	jr ++_

_:	ld a, $03
_:	ld ($C173), a
	ld a, c
	cp $02
	jr c, +_
	ld a, $02
_:	ld ($C170), a
	add a, $01
	ld ($C179), a
	sla c
	ld hl, DATA_9723
	add hl, bc
	ld a, (hl)
	ld ($C174), a
	inc hl
	ld a, (hl)
	ld ($C175), a
	ld a, $C0
	ld ($C153), a
	jr ++_

LABEL_95A3:
	di
	ld hl, $C176
	xor a
_:
	ld (hl), a
	inc l
	jr nz, -_
_:	ld.lil hl, romStart + DATA_3FC
	ld.lil de, CRAM
	ld bc, $0040
	ldir.lil
	ld a, ($C11E)
	and a
	jr z, LABEL_9627
	ld de, $3BDE
	ld a, ($C11F)
	and a
	jr z, ++_
	ld hl, $C21D
	ld a, ($C13B)
	ld bc, $051B
	and a
	jr nz, LABEL_95E1
	ld c, $1C
LABEL_95E1:
	dec a
	jr nz, +_
	ld c, $1C
_:	ld (hl), c
	inc hl
	ld (hl), $00
	inc hl
	djnz LABEL_95E1
	ld.lil hl, SegaVRAM
	add.lil hl, de
	ex.lil de, hl
	ld.lil hl, romStart + $C21D
	ld bc, $000A
	ldir.lil
	ld de, $3A1E
_:	ld hl, $C21D
	ld a, ($C133)
	ld b, $04
	ld c, $1B
	and a
	jr nz, LABEL_960D
	ld c, $1C
LABEL_960D:
	dec a
	jr nz, +_
	ld c, $1C
_:	ld (hl), c
	inc hl
	ld (hl), $00
	inc hl
	djnz LABEL_960D
	ld.lil hl, SegaVRAM
	add.lil hl, de
	ex.lil de, hl
	ld.lil hl, romStart + $C21D
	ld bc, $0008
	ldir.lil
LABEL_9627:
	ld a, $50
	ld ($C189), a
	ld a, $A0
	ld ($C18B), a
	ld a, ($C133)
	ld ($C14A), a
	ld a, $02
	ld ($C187), a
	ld a, $04
	ld ($C191), a
	ei
	ld hl, +_
	ld ($C20C), hl
	ret

_:	ld hl, DATA_9675
	ld de, $C20C
	ld bc, $0010
	ldir
	ld a, ($C130)
	ld hl, ($C131)
	or h
	or l
	jr nz, +_
	ld a, $FA
	ld ($C176), a
	xor a
	jp LABEL_85E5

_:	ld a, $3C
	ld ($C176), a
	ret

; Data from 9675 to 9684 (16 bytes)
DATA_9675:
.dw LABEL_BF8A, LABEL_9298, LABEL_7DCE, LABEL_8896
.FILL 8, $00
; Pointer Table from 9685 to 96B4 (24 entries, indexed by, $C134)
DATA_9685:
.dw DATA_96B5, DATA_96CB, DATA_96CB, DATA_96E1, DATA_96E1, DATA_96E1, DATA_96F7, DATA_96F7
.dw DATA_96F7, DATA_96F7, DATA_96F7, DATA_96F7, DATA_96F7, DATA_96F7, DATA_96F7, DATA_96F7
.dw DATA_96F7, DATA_96F7, DATA_96F7, DATA_96F7, DATA_96F7, DATA_970D, DATA_970D, DATA_970D

; 1st entry of Pointer Table from 9685 (indexed by, $C134)
; Data from 96B5 to 96CA (22 bytes)
DATA_96B5:
.db $D0, $00, $C0, $00, $A0, $00, $F0, $00, $E0, $00, $C0, $00, $E0, $00, $D0, $00
.db $C0, $00, $80, $00, $60, $00

; 2nd entry of Pointer Table from 9685 (indexed by, $C134)
; Data from 96CB to 96E0 (22 bytes)
DATA_96CB:
.db $E0, $00, $D0, $00, $B0, $00, $00, $01, $F0, $00, $D0, $00, $F0, $00, $E0, $00
.db $D0, $00, $90, $00, $70, $00

; 4th entry of Pointer Table from 9685 (indexed by, $C134)
; Data from 96E1 to 96F6 (22 bytes)
DATA_96E1:
.db $00, $01, $F0, $00, $D0, $00, $10, $01, $00, $01, $E0, $00, $10, $01, $00, $01
.db $F0, $00, $A0, $00, $80, $00

; 7th entry of Pointer Table from 9685 (indexed by, $C134)
; Data from 96F7 to 970C (22 bytes)
DATA_96F7:
.db $30, $01, $20, $01, $00, $01, $30, $01, $20, $01, $00, $01, $40, $01, $30, $01
.db $20, $01, $C0, $00, $90, $00

; 22nd entry of Pointer Table from 9685 (indexed by, $C134)
; Data from 970D to 9722 (22 bytes)
DATA_970D:
.db $20, $01, $10, $01, $F0, $00, $20, $01, $10, $01, $F0, $00, $50, $01, $40, $01
.db $30, $01, $A0, $00, $80, $00

; Data from 9723 to 9752 (48 bytes)
DATA_9723:
.db $A4, $01, $68, $01, $2C, $01, $F0, $00, $B4, $00, $68, $01, $B4, $00, $B4, $00
.db $78, $00, $68, $01, $B4, $00, $78, $00, $78, $00, $F0, $00, $78, $00, $78, $00
.db $3C, $00, $78, $00, $3C, $00, $3C, $00, $1E, $00, $3C, $00, $3C, $00, $1E, $00

; Data from 9753 to 976A (24 bytes)
DATA_9753:
.db $00, $01, $02, $02, $02, $03, $03, $03, $04, $04, $04, $05, $05, $05
.fill 10, $06

; Data from 976B to 9782 (24 bytes)
DATA_976B:
.db $00, $01, $02, $02, $03, $03, $04, $04, $05, $05, $06, $06
.fill 12, $07

; Data from 9783 to 979A (24 bytes)
DATA_9783:
.db $00, $01, $01, $01
.fill 17, $02
.db $03, $03, $03

LABEL_979B:
	ld a, $03
	ld ($C133), a
LABEL_97A0:
	ld a, $0F
	ld ($C150), a
	ld hl, DATA_8652
	ld de, $C20C
	ld bc, $0010
	ldir
	ld hl, LABEL_952B
	ld ($C20C), hl
	ret

LABEL_97B7:
	ld a, ($C135)
	cp $04
	jr nz, LABEL_981A
	ld a, ($C13D)
	cp $05
	jr z, +_
	cp $06
	jr nz, +++++_
_:
	ld a, ($C14B)
	cp $03
	jr nz, +_
	ld a, ($C153)
	and a
	jr nz, +_
	ld a, $06
	jr ++_

_:
	ld a, ($C133)
	and a
	jr nz, ++_
	ld a, $05
_:	ld ($C135), a
_:	xor a
	ld ($C146), a
	call LABEL_B55C
	ld hl, DATA_8652
	ld de, $C20C
	ld bc, $0010
	ldir
	ld hl, LABEL_9B38
	ld ($C20C), hl
	ret

_:	ld a, ($C13D)
	cp $04
	jr nc, LABEL_981A
	call LABEL_B55C
	ld hl, DATA_8652
	ld de, $C20C
	ld bc, $0010
	ldir
	ld hl, LABEL_9F40
	ld ($C20C), hl
	ret

LABEL_981A:
	ld a, ($C193)
	inc a
	cp $3C
	jr nz, +_
	xor a
_:	ld ($C193), a
	ld a, ($C176)
	and a
	jr z, +_
	dec a
	ld ($C176), a
	jr ++_

_:
	ld hl, ($C17F)
	ld a, h
	or l
	jr z, +_
	dec hl
	ld ($C17F), hl
_:
	ld a, ($C154)
	ld b, a
	ld a, ($C153)
	cp b
	jp z, LABEL_98F5
	ld b, a
	xor a
	ld ($C17E), a
	ld a, b
	ld ($C154), a
	cp $37
	jr z, +_
	cp $86
	jr nz, ++_
_:
	ld hl, $0258
	ld ($C183), hl
	jr +++_

_:
	ld b, a
	ld a, ($C16E)
	ld c, a
	ld a, ($C16F)
	add a, c
	ld e, a
	ld d, $00
	ld hl, DATA_99C4
	add hl, de
	ld a, (hl)
	cp b
	jr nz, ++_
	ld a, ($C16F)
	and a
	jr nz, +_
	inc a
	ld ($C16F), a
	ld a, ($C165)
	ld ($C155), a
	ld a, ($C166)
	ld ($C156), a
	jr ++_

_:
	ld a, ($C163)
	ld ($C155), a
	ld a, ($C164)
	ld ($C156), a
_:
	ld a, ($C152)
	and a
	jr nz, +_
	ld a, ($C170)
	ld hl, DATA_98E3
	rst $10	; LABEL_10
	ld a, ($C171)
	ld e, a
	ld d, $00
	add hl, de
	ld a, (hl)
	cp b
	jr nz, LABEL_991A
	ld a, ($C171)
	inc a
	inc a
	ld ($C171), a
	inc hl
	ld a, (hl)
	jr ++++_

_:
	ld a, ($C17A)
	cp $07
	jr nz, +_
	ld a, $01
	jr +++_

_:
	cp $11
	jr nz, +_
	ld a, $02
	jr ++_

_:
	cp $20
	jr nz, LABEL_991A
	ld a, $03
_:
	ld b, a
	ld a, ($C179)
	cp b
	jr nc, LABEL_991A
	ld a, b
	ld ($C179), a
	jr LABEL_991A

; Pointer Table from 98E3 to 98E8 (3 entries, indexed by, $C170)
DATA_98E3:
.dw DATA_98E9, DATA_98EF, DATA_98F3

; 1st entry of Pointer Table from 98E3 (indexed by, $C170)
; Data from 98E9 to 98EE (6 bytes)
DATA_98E9:
.db $A8, $02, $79, $03, $C8, $04

; 2nd entry of Pointer Table from 98E3 (indexed by, $C170)
; Data from 98EF to 98F2 (4 bytes)
DATA_98EF:
.db $9B, $03, $C8, $04

; 3rd entry of Pointer Table from 98E3 (indexed by, $C170)
; Data from 98F3 to 98F4 (2 bytes)
DATA_98F3:
.db $C8, $04

LABEL_98F5:
	ld a, ($C193)
	and a
	jr nz, LABEL_9958
	ld a, ($C17E)
	inc a
	ld ($C17E), a
	ld b, a
	ld a, ($C173)
	cp b
	jr nz, LABEL_991A
	xor a
	ld ($C17E), a
	ld a, ($C179)
	inc a
	cp $05
	jr nz, +_
	ld a, $04
_:	ld ($C179), a
LABEL_991A:
	ld a, ($C193)
	and a
	jr nz, LABEL_9958
	ld a, ($C17B)
	inc a
	jr nz, +_
	ld a, $FF
	ld ($C17B), a
	jr LABEL_9958

_:	ld ($C17B), a
	ld b, a
	ld hl, DATA_99A8
	ld a, ($C172)
	rst $10	; LABEL_10
	ld a, ($C17C)
	ld de, $0000
	ld e, a
	add hl, de
	ld a, (hl)
	cp b
	jr nz, LABEL_9958
	ld a, ($C17C)
	inc a
	ld ($C17C), a
	ld a, ($C17D)
	xor $01
	ld ($C17D), a
	jr z, LABEL_9958
	ld ($C198), a
LABEL_9958:
	call LABEL_8553
	ld a, ($C11A)
	ld b, a
	and $07
	jr nz, ++_
	ld de, $0000
	ld a, b
	and $08
	jr z, +_
	ld de, $7F60
_:
	ld (hl), $02
	inc hl
	ld (hl), $12
	inc hl
	ld (hl), $C0
	inc hl
	ld (hl), e
	inc hl
	ld (hl), d
	inc hl
	ld (hl), $00
_:
	ld de, ($C17F)
	ld a, e
	or d
	ret z
	ld a, d
	and a
	ret nz
	ld a, e
	cp $60
	ret nc
	and $07
	ret nz
	ld b, $1F
	ld c, $00
	ld a, e
	and $08
	jr nz, +_
	ld b, $FF
	ld c, $FF
_:
	ld (hl), $02
	inc hl
	ld (hl), $34
	inc hl
	ld (hl), $C0
	inc hl
	ld (hl), b
	inc hl
	ld (hl), c
	inc hl
	ld (hl), $00
	ret

; Pointer Table from 99A8 to 99AF (4 entries, indexed by, $C172)
DATA_99A8:
.dw DATA_99B0, DATA_99B8, DATA_99BE, DATA_99BE

; 1st entry of Pointer Table from 99A8 (indexed by, $C172)
; Data from 99B0 to 99B7 (8 bytes)
DATA_99B0:
.db $07, $1B, $22, $36, $3B, $4F, $54, $00

; 2nd entry of Pointer Table from 99A8 (indexed by, $C172)
; Data from 99B8 to 99BD (6 bytes)
DATA_99B8:
.db $07, $1B, $22, $36, $3B, $00

; 3rd entry of Pointer Table from 99A8 (indexed by, $C172)
; Data from 99BE to 99C3 (6 bytes)
DATA_99BE:
.db $05, $19, $1E, $32, $37, $00

; Data from 99C4 to 99D1 (14 bytes)
DATA_99C4:
.db $14, $0A, $1E, $0F, $28, $14, $32, $19, $3C, $1E, $50, $28, $64, $32

LABEL_99D2:
	ld a, ($C176)
	cp $01
	ret nz
	ld hl, DATA_99E9
	ld de, $C20C
	ld bc, $0010
	ldir
	ld a, $78
	ld ($C176), a
	ret

; Data from 99E9 to 99F8 (16 bytes)
DATA_99E9:
.dw LABEL_93DB, LABEL_8893
.fill 10, $00
.dw LABEL_99F9

LABEL_99F9:
	ld a, ($C176)
	dec a
	ld ($C176), a
	and a
	jr z, ++_
	and $07
	ret nz
	call LABEL_8553
	ld bc, $FFFF
	ld a, ($C176)
	and $08
	jr nz, +_
	ld bc, $1F00
_:
	ld (hl), $02
	inc hl
	ld (hl), $0E
	inc hl
	ld (hl), $C0
	inc hl
	ld (hl), b
	inc hl
	ld (hl), c
	inc hl
	ld (hl), $00
	ret

_:	ld a, ($C134)
	inc a
	cp $18
	jr nz, +_
	ld a, $17
_:	ld ($C134), a
	ld a, ($C11F)
	and a
	jr z, +_
	ld a, ($C14B)
	inc a
	ld ($C14B), a
	cp $04
	jr nz, +_
	ld a, $01
	ld ($C14D), a
	ld hl, DATA_8652
	ld de, $C20C
	ld bc, $0010
	ldir
	ld hl, LABEL_9B38
	ld ($C20C), hl
	ret

_:	ld hl, DATA_8652
	ld de, $C20C
	ld bc, $0010
	ldir
	ld hl, LABEL_8F54
	ld ($C20C), hl
	ret

LABEL_9A6D:
	ld a, ($C177)
	and a
	ret z
	ld a, ($C147)
	and a
	jr z, +_
	xor a
	ld ($C177), a
	ret

_:	ld a, ($C176)
	and a
	jr nz, +_
	ld ($C146), a
	ld a, ($C133)
	dec a
	ld ($C133), a
	ld a, $3C
	ld ($C176), a
	jp LABEL_B55C

_:	cp $01
	ret nz
	xor a
	ld ($C190), a
	ld hl, DATA_9B28
	ld de, $C20C
	ld bc, $0010
	ldir
	ld a, $0B
	jp LABEL_85E5

LABEL_9AAC:
	ld a, ($C190)
	inc a
	ld ($C190), a
	srl a
	srl a
	srl a
	cp $09
	jr nz, +_
	ld a, $01
	ld ($C152), a
	ld a, $3C
	ld ($C176), a
	ld hl, ++_
	ld ($C20C), hl
	ld a, $0C
	jp LABEL_85E5

_:	add a, $29
	ex af, af'
	ld a, ($C189)
	ld b, a
	ld a, ($C18B)
	ld c, a
	exx
	jp LABEL_87E2

_:
	ld a, ($C176)
	dec a
	ld ($C176), a
	cp $32
	jr nz, +_
	ld a, $0C
	jp LABEL_85E5

_:	ld a, ($C176)
	and a
	ret nz
	ld a, ($C133)
	and a
	jr z, +_
	ld hl, LABEL_95A3
	ld ($C20C), hl
	ret

_:	ld a, ($C135)
	cp $02
	jr z, +_
	ld a, $05
	ld ($C135), a
	ld hl, LABEL_9B38
	ld ($C20C), hl
	ld hl, $0000
	ld ($C212), hl
	ret

_:	ld a, $B4
	ld ($C176), a
	ld hl, LABEL_82A1
	ld ($C20C), hl
	ret

; Data from 9B28 to 9B37 (16 bytes)
DATA_9B28:
.dw LABEL_9AAC
.db $00, $00, $00, $00 
.dw LABEL_8896
.db $00, $00, $00, $00, $00, $00, $00, $00

LABEL_9B38:
	ld a, $06
	ld ($C176), a
	ld hl, +_
	ld ($C20C), hl
	ret

_:	ld a, ($C176)
	dec a
	ld ($C176), a
	ret nz
	ld hl, +_
	ld ($C20C), hl
	ret

_:	di
	ld hl, DATA_2580
	call LABEL_85B4
	ld hl, $C132
	call LABEL_8AF2
	ld hl, $C54B
	ld de, $C222
	ld b, $06
_:
	ld a, (de)
	dec de
	ld (hl), a
	inc hl
	ld (hl), $00
	inc hl
	djnz -_
	ld hl, $C13A
	call LABEL_8AF2
	ld hl, $C5EB
	ld de, $C222
	ld b, $06
_:
	ld a, (de)
	dec de
	ld (hl), a
	inc hl
	ld (hl), $00
	inc hl
	djnz -_
	ld a, ($C135)
	cp $05
	jr nz, +_
	ld hl, DATA_9B9F
	ld de, $C55B
	jr ++_

; Data from 9B9F to 9BAC (14 bytes)
DATA_9B9F:
.db $28, $00, $20, $00, $0C, $00, $24, $00, $28, $00, $20, $00, $BE, $01

; Data from 9BAD to 9BBA (14 bytes)
DATA_9BAD:
.db $1E, $00, $25, $00, $20, $00, $1D, $00, $28, $00, $BE, $01, $1C, $00

_:	ld a, ($C133)
	ld hl, $C55B
	call LABEL_9E66
	ld a, ($C135)
	cp $06
	jr nz, ++_
	ld hl, DATA_9BAD
	ld de, $C533
_:
	ld bc, $000E
	ldir
_:
	ld a, ($C13D)
	cp $05
	jr nz, +_
	ld hl, DATA_9B9F
	ld de, $C5FB
	jr ++_

_:
	ld a, ($C13B)
	ld hl, $C5FB
	call LABEL_9E66
	ld a, ($C13D)
	cp $06
	jr nz, ++_
	ld hl, DATA_9BAD
	ld de, $C5D3
_:
	ld bc, $000E
	ldir
_:
	ld hl, $C4F7
	ld de, $3800
	call LABEL_8562
	ld.lil hl, romStart + DATA_2668
	ld.lil de, SegaVRAM + $2000
	ld bc, $05E0
	ldir.lil

	ld.lil hl, romStart + DATA_2D44
	ld.lil de, SegaVRAM + $2520
	ld bc, $0760
	ldir.lil

	ld.lil hl, romStart + DATA_37A8
	ld bc, $0780
	ldir.lil

	ld a, $30
	ld ($C118), a
	ld a, $C8
	ld ($C119), a
	ei
	xor a
	ld ($C146), a
	ld a, ($C133)
	ld ($C188), a
	ld a, ($C13B)
	ld ($C18A), a
	ld a, $3C
	ld ($C176), a
	ld hl, +_
	ld ($C20C), hl
	ret

_:
	ld a, ($C176)
	and $07
	jr nz, +_
	ld ($C12E), a
_:
	ld a, ($C176)
	dec a
	ld ($C176), a
	ret nz
	ld a, $3C
	ld ($C176), a
	ld a, ($C135)
	sub $03
	ld b, a
	ld a, ($C13D)
	cp $08
	jr nz, +_
	ld a, $04
_:
	sub $04
	ld c, a
	ld a, $FD
_:
	add a, $03
	djnz -_
	add a, c
	ld hl, DATA_9CAF
	rst $10	; LABEL_10
	ld ($C20C), hl
	ret

; Jump Table from 9CAF to 9CC0 (9 entries, indexed by unknown)
DATA_9CAF:
.dw LABEL_9D74, LABEL_9D87, LABEL_9CC1, LABEL_9D8C, LABEL_9D74, LABEL_9CD6, LABEL_9CEB, LABEL_9CF6, LABEL_9D02

; 3rd entry of Jump Table from 9CAF (indexed by unknown)
LABEL_9CC1:
	call LABEL_9D5C
	ld a, ($C13D)
	cp $07
	ret nz
	ld a, ($C18A)
	ld de, $79D4
	call LABEL_9F06
	jp LABEL_9D74

; 6th entry of Jump Table from 9CAF (indexed by unknown)
LABEL_9CD6:
	call LABEL_9D5C
	ld a, ($C13D)
	cp $07
	ret nz
	ld a, ($C18A)
	ld de, $79D4
	call LABEL_9F06
	jp LABEL_9D8C

; 7th entry of Jump Table from 9CAF (indexed by unknown)
LABEL_9CEB:
	call +_
	ld a, ($C135)
	cp $07
	ret nz
	jp LABEL_9D74

; 8th entry of Jump Table from 9CAF (indexed by unknown)
LABEL_9CF6:
	call +_
	ld a, ($C135)
	cp $07
	ret nz
	jp LABEL_9D87

; 9th entry of Jump Table from 9CAF (indexed by unknown)
LABEL_9D02:
	call LABEL_9D5C
	call +_
	ld a, ($C135)
	cp $07
	ret nz
	ld a, ($C13D)
	cp $07
	ret nz
	ld a, ($C18A)
	ld de, $79D4
	call LABEL_9F06
	jr LABEL_9D74

_:
	ld a, ($C176)
	dec a
	ld ($C176), a
	ret nz
	ld a, $0E
	call LABEL_85E5
	ld a, $0B
	ld de, $C130
	call LABEL_86B6
	call LABEL_9EC2
	ld a, ($C133)
	ld hl, $7894
	call LABEL_9E86
	ld a, $3C
	ld ($C176), a
	ld a, ($C133)
	dec a
	ld ($C133), a
	ret nz
	ld a, ($C188)
	ld de, $78D4
	call LABEL_9F06
	ld a, $07
	ld ($C135), a
	ret

LABEL_9D5C:
	ld a, ($C142)
	ld b, a
	ld a, ($C13B)
	cp b
	jp z, LABEL_9ED7
	ld ($C142), a
	inc a
	ld hl, $7994
	call LABEL_9E86
	jp LABEL_9ED7

; 1st entry of Jump Table from 9CAF (indexed by unknown)
LABEL_9D74:
	ld hl, $C132
	ld de, $C13A
	ld b, $03
_:
	ld a, (de)
	cp (hl)
	jr c, LABEL_9D87
	jp nz, LABEL_9D8C
	dec de
	dec hl
	djnz -_
; 2nd entry of Jump Table from 9CAF (indexed by unknown)
LABEL_9D87:
	ld hl, LABEL_9DDC
	jr +_

; 4th entry of Jump Table from 9CAF (indexed by unknown)
LABEL_9D8C:
	ld hl, ++_
_:
	ld ($C20C), hl
	ret

_:
	call LABEL_9EC2
	ld de, DATA_9E5A
	call LABEL_9E37
	ld hl, +_
	ld ($C20C), hl
	ld a, $02
	jp LABEL_85E5

_:
	ld a, ($C176)
	inc a
	ld ($C176), a
	ld b, a
	and $1F
	jp nz, LABEL_9E23
	ld hl, DATA_36E4
	ld a, b
	and $20
	jr nz, +_
	ld hl, DATA_3746
_:
	di
	ld de, $3AC4
	ld a, $07
	ld b, $07
	call LABEL_856E
	ei
	jr LABEL_9E23

LABEL_9DDC:
	call LABEL_9EC2
	ld de, DATA_9E4E
	call LABEL_9E37
	ld hl, +_
	ld ($C20C), hl
	ld a, $03
	jp LABEL_85E5

_:
	ld a, ($C176)
	inc a
	ld ($C176), a
	ld b, a
	and $1F
	jr nz, LABEL_9E23
	ld hl, DATA_2C48
	ld a, b
	and $20
	jr nz, +_
	ld hl, DATA_2CC6
_:	di
	ld de, $3A44
	ld a, $07
	ld b, $09
	call LABEL_856E
	ei
LABEL_9E23:
	ld a, ($C102)
	and $80
	ret z
	xor a
	ld ($C135), a
	call LABEL_B55C
	ld hl, LABEL_9F40
	ld ($C20C), hl
	ret

LABEL_9E37:
	call LABEL_8553
	ld (hl), $0C
	inc hl
	ld (hl), $98
	inc hl
	ld (hl), $7A
	inc hl
	ld b, $0C
_:
	ld a, (de)
	inc de
	ld (hl), a
	inc hl
	djnz -_
	ld (hl), $00
	ret

; Data from 9E4E to 9E59 (12 bytes)
DATA_9E4E:
.db $24, $00, $1C, $00, $BC, $01, $24, $00, $27, $00, $1C, $00

; Data from 9E5A to 9E65 (12 bytes)
DATA_9E5A:
.db $24, $00, $1C, $00, $25, $00, $0D, $00, $21, $00, $0C, $00

LABEL_9E66:
	and a
	ret z
	ld b, a
_:
	ld ($C121), hl
	ld (hl), $06
	inc hl
	inc hl
	ld (hl), $08
	ld de, $0026
	add hl, de
	ld (hl), $07
	inc hl
	inc hl
	ld (hl), $09
	ld hl, ($C121)
	ld de, $0004
	add hl, de
	djnz -_
	ret

LABEL_9E86:
	dec a
	sla a
	sla a
	ld c, a
	ld b, $00
	add hl, bc
	ex de, hl
	call LABEL_8553
	ld (hl), $04
	inc hl
	ld (hl), e
	inc hl
	ld (hl), d
	inc hl
	ld (hl), $1C
	inc hl
	ld (hl), $00
	inc hl
	ld (hl), $1C
	inc hl
	ld (hl), $00
	inc hl
	ex de, hl
	ld bc, $0040
	add hl, bc
	ex de, hl
	ld (hl), $04
	inc hl
	ld (hl), e
	inc hl
	ld (hl), d
	inc hl
	ld (hl), $1C
	inc hl
	ld (hl), $00
	inc hl
	ld (hl), $1C
	inc hl
	ld (hl), $00
	inc hl
	ld (hl), $00
	ret

LABEL_9EC2:
	call LABEL_9ED7
	call LABEL_8553
	push hl
	ld hl, $C132
	call LABEL_8AF2
	ld hl, LABEL_7984-$0100
	ld ($C123), hl
	jr +_

LABEL_9ED7:
	call LABEL_8553
	push hl
	ld hl, $C13A
	call LABEL_8AF2
	ld hl, LABEL_7984
	ld ($C123), hl
_:
	ld de, $C222
	ld b, $06
	pop hl
	ld (hl), $0C
	inc hl
	ld a, ($C123)
	ld (hl), a
	inc hl
	ld a, ($C124)
	ld (hl), a
	inc hl
_:
	ld a, (de)
	dec de
	ld (hl), a
	inc hl
	ld (hl), $00
	inc hl
	djnz -_
	ld (hl), $00
	ret

LABEL_9F06:
	and a
	ret z
	ld ($C123), a
	call LABEL_8553
	push hl
	ld a, ($C123)
	sla a
	ld c, a
	ld b, $00
	ld hl, DATA_9F34
	add hl, bc
	ld c, (hl)
	inc hl
	ld b, (hl)
	pop hl
	ld (hl), $0A
	inc hl
	ld (hl), e
	inc hl
	ld (hl), d
	inc hl
	ld (hl), b
	inc hl
	ld (hl), $00
	inc hl
	ld (hl), c
	ld b, $08
_:
	inc hl
	ld (hl), $00
	djnz -_
	ret

; Data from 9F34 to 9F3F (12 bytes)
DATA_9F34:
.db $00, $00, $02, $1C, $04, $1C, $06, $1C, $08, $1C, $00, $01

LABEL_9F40:
	di
	ld.lil hl, romStart + DATA_18B0
	ld.lil de, SegaVRAM + $2000
	ld bc, $0CC0
	ldir.lil

	call LABEL_8662
	ld hl, DATA_9FC5
_:
	ld a, (hl)
	cp $FF
	jr z, +_
	ld c, a
	inc hl
	ld e, (hl)
	inc hl
	ld d, (hl)
	inc hl

	push de
	ld.lil de, romStart
	add.lil hl, de
	pop de

	ld.lil ix, SegaVRAM
	add.lil ix, de
	push.lil ix
	pop.lil de
	ldir.lil
	jr -_

_:	ld hl, $C128
	xor a
_:	ld (hl), a
	inc l
	jr nz, -_
	ld a, $30
	ld ($C118), a
	ld a, $C8
	ld ($C119), a
	ei
	ld hl, +_
	ld ($C20C), hl
	ret

_:
	ld a, ($C102)
	and $80
	jr nz, +_
	ld a, ($C176)
	inc a
	ld ($C176), a
	ret nz
_:
	xor a
	ld ($C176), a
	ld ($C193), a
	ld hl, LABEL_8315
	ld ($C20C), hl
	ret

; Data from 9FC5 to A021 (93 bytes)
DATA_9FC5:
.db $0E, $8C, $39, $42, $01, $43, $01, $46, $01, $47, $01, $48, $01, $49, $01, $4C
.db $01, $06, $10, $3A, $BA, $01, $0D, $00, $28, $00, $1C, $86, $3A, $21, $00, $20
.db $00, $22, $00, $1D, $00, $1C, $00, $22, $00, $1D, $00, $26, $00, $20, $00, $1C
.db $00, $22, $00, $20, $00, $1D, $00, $28, $00, $20, $04, $3B, $25, $00, $24, $00
.db $1E, $00, $20, $00, $27, $00, $21, $00, $20, $00, $1F, $00, $1C, $00, $51, $01
.db $BD, $01, $1C, $00, $21, $00, $20, $00, $22, $00, $1D, $00, $FF

LABEL_A022:
	ld a, $01
	ld ($C197), a
	ld a, ($C151)
	srl a
	ld ($C151), a
	jr c, ++_
	ld a, ($C137)
	and $01
	ret z
	xor a
	ld ($C19B), a
	ld ($C19D), a
	ld a, $68
	ld ($C19E), a
	ld b, $A0
	ld c, $02
	ld a, ($C11C)
	and $08
	jr nz, +_
	ld b, $B0
	inc c
_:
	ld a, b
	ld ($C19C), a
	ld a, c
	ld ($C19A), a
	ld a, $01
	ld ($C1A6), a
	ld a, $03
	ld ($C199), a
	ret

_:
	ld ix, $C19B
	ld iy, $C19D
	ld a, ($C199)
	ld hl, DATA_A075
	jp LABEL_18

; Jump Table from A075 to A080 (6 entries, indexed by, $C199)
DATA_A075:
.dw LABEL_A08B, LABEL_A0A3, LABEL_A11A, LABEL_A16D, LABEL_A1D6, LABEL_A081

; 6th entry of Jump Table from A075 (indexed by, $C199)
LABEL_A081:
	call LABEL_7F77
	ret nz
	ld a, $03
	ld ($C199), a
	ret

; 1st entry of Jump Table from A075 (indexed by, $C199)
LABEL_A08B:
	ld a, $50
	ld ($C19C), a
	ld ($C19E), a
	xor a
	ld ($C19B), a
	ld ($C19D), a
	inc a
	ld ($C199), a
	inc a
	ld ($C19A), a
	ret

; 2nd entry of Jump Table from A075 (indexed by, $C199)
LABEL_A0A3:
	ld a, $03
	ld ($C14F), a
	ld a, ($C17D)
	and a
	jr nz, ++_
	ld a, ($C16F)
	and a
	jr z, +_
	ld a, ($C179)
	cp $03
	jr nc, ++_
_:
	ld hl, $9000
	ld ($C1A3), hl
	jr ++_

_:
	ld a, ($C189)
	ld h, a
	ld a, ($C18B)
	ld l, a
	ld ($C1A3), hl
_:
	ld a, ($C181)
	and a
	jr z, +_
	ld a, $02
	ld ($C199), a
	ld a, ($C19A)
	call LABEL_7F15
	ld ($C19A), a
	jr +++_

_:
	ld a, ($C16F)
	and a
	jr nz, +_
	ld a, ($C198)
	and a
	jr z, +_
	ld a, ($C19A)
	call LABEL_7F15
	ld ($C19A), a
_:
	call LABEL_7EBF
	jr nc, +_
	ld a, $01
	ld ($C177), a
_:
	ld a, ($C155)
	ld ($C19F), a
	ld a, ($C156)
	ld ($C1A2), a
	call LABEL_A220
LABEL_A112:
	ld hl, $C199
	xor a
	jp LABEL_7E22

; 3rd entry of Jump Table from A075 (indexed by, $C199)
LABEL_A11A:
	ld a, ($C176)
	and a
	jp nz, LABEL_7E1E
	ld a, $01
	ld ($C14F), a
	ld hl, ($C11C)
	ld ($C1A3), hl
	call LABEL_7EEA
	jr nc, +_
	call LABEL_8697
	ld a, $05
	ld ($C199), a
	xor a
	ld ($C1A5), a
	ret

_:	ld hl, ($C17F)
	ld a, h
	or l
	jr nz, +_
	ld ($C1A5), a
	inc a
	ld ($C199), a
_:
	ld a, ($C181)
	and a
	jr z, +_
	ld a, ($C19A)
	call LABEL_7F15
	ld ($C19A), a
_:
	ld a, ($C169)
	ld ($C19F), a
	ld a, ($C16A)
	ld ($C1A2), a
	call LABEL_A220
	jp LABEL_7E1E

; 4th entry of Jump Table from A075 (indexed by, $C199)
LABEL_A16D:
	xor a
	ld ($C14F), a
	ld hl, $5067
	ld ($C1A3), hl
	ld a, $F0
	ld ($C19F), a
	ld a, $01
	ld ($C1A2), a
	ld a, ($C177)
	and a
	jr nz, LABEL_A1D0
	call LABEL_A243
	ld a, ($C19C)
	cp $50
	jr nz, LABEL_A1D0
	ld a, ($C19E)
	cp $67
	jr z, +_
	cp $68
	jr nz, LABEL_A1D0
_:
	ld a, ($C196)
	and $FE
	ld ($C196), a
	ld a, ($C1A6)
	and a
	jr nz, +_
	ld a, ($C135)
	cp $04
	jr nz, +_
	ld a, ($C12F)
	or $10
	ld ($C12F), a
	ld a, ($C150)
	and $FE
	ld ($C150), a
	ret

_:	ld a, $04
	ld ($C199), a
	xor a
	ld ($C1A6), a
	ld ($C19A), a
	jr LABEL_A1D6

LABEL_A1D0:
	ld a, ($C19A)
	jp LABEL_7F6A

; 5th entry of Jump Table from A075 (indexed by, $C199)
LABEL_A1D6:
	ld a, ($C176)
	and a
	jr nz, ++++_
	ld a, ($C19E)
	sub $01
	ld ($C19E), a
	cp $50
	jr nz, +++_
	ld a, ($C181)
	and a
	jr nz, +_
	ld a, ($C1A5)
	and a
	jr nz, +_
	ld a, $01
	jr ++_

_:
	ld a, $02
_:
	ld ($C199), a
	ld a, $02
	ld ($C19A), a
_:
	ld a, ($C181)
	and a
	jr z, +_
	ld ($C1A5), a
_:
	ld a, ($C1A5)
	and a
	jp z, LABEL_A112
	ld hl, ($C17F)
	ld a, h
	or l
	jp nz, LABEL_7E1E
	ld ($C1A5), a
	jp LABEL_A112

LABEL_A220:
	ld a, ($C176)
	and a
	ret nz
	ld a, ($C19E)
	cp $68
	jr nz, LABEL_A243
	ld a, ($C19C)
	cp $20
	jr c, +_
	cp $80
	jr c, LABEL_A243
_:
	ld a, ($C16B)
	ld ($C19F), a
	ld a, ($C16C)
	ld ($C1A2), a
LABEL_A243:
	ld a, ($C19A)
	ld bc, $C19F
	ld hl, DATA_7FE0
	rst $18	; LABEL_18
	call +_
	ld a, ($C19A)
	ld bc, $C1A1
	ld hl, DATA_7FE0
	rst $18	; LABEL_18
_:
	cp h
	ret z
	ld a, ($C19C)
	ld b, a
	and $07
	ret nz
	ld a, ($C19E)
	ld c, a
	and $07
	ret nz
	call LABEL_8480
	call LABEL_7F57
	ld l, a
	ld a, ($C19A)
	xor $01
	call LABEL_8498
	or l
	ld l, a
	and $0F
	cp $0F
	jr nz, +_
	ld a, $01
	jr ++_

_:	ld de, ($C1A3)
	call LABEL_7E42
_:	ld ($C19A), a
	ret

LABEL_A290:
	ld a, $02
	ld ($C197), a
	ld a, ($C151)
	srl a
	ld ($C151), a
	jr c, ++_
	ld a, ($C137)
	and $02
	ret z
	xor a
	ld ($C1A9), a
	ld ($C1AB), a
	ld a, $68
	ld ($C1AC), a
	ld b, $A0
	ld c, $02
	ld a, ($C11C)
	and $08
	jr nz, +_
	ld b, $B0
	inc c
_:
	ld a, b
	ld ($C1AA), a
	ld a, c
	ld ($C1A8), a
	ld a, $01
	ld ($C1B5), a
	ld a, $05
	ld ($C1A7), a
	ret

_:	ld ix, $C1A9
	ld iy, $C1AB
	ld a, ($C1A7)
	ld hl, DATA_A2E3
	jp LABEL_18

; Jump Table from A2E3 to A2F0 (7 entries, indexed by, $C1A7)
DATA_A2E3:
.dw LABEL_A304, LABEL_A320, LABEL_A36A, LABEL_A3B3, LABEL_A42E, LABEL_A482, LABEL_A2F1

; 7th entry of Jump Table from A2E3 (indexed by, $C1A7)
LABEL_A2F1:
	call LABEL_7F77
	ret nz
	ld b, $02
	ld a, ($C196)
	or b
	ld ($C196), a
	ld a, $05
	ld ($C1A7), a
	ret

; 1st entry of Jump Table from A2E3 (indexed by, $C1A7)
LABEL_A304:
	ld a, $50
	ld ($C1AA), a
	ld a, $60
	ld ($C1AC), a
	xor a
	ld ($C1A9), a
	ld ($C1AB), a
	inc a
	ld ($C1A7), a
	ld ($C1A8), a
	ld ($C1B3), a
	ret

; 2nd entry of Jump Table from A2E3 (indexed by, $C1A7)
LABEL_A320:
	ld a, ($C176)
	and a
	jp nz, LABEL_A39F
	ld bc, $0080
	ld hl, ($C1AB)
	ld a, ($C1B3)
	and a
	jr nz, +_
	xor a
	sbc hl, bc
	ld ($C1AB), hl
	ld a, h
	cp $60
	jr nz, ++_
	ld a, $01
	ld ($C1B3), a
	ld ($C1A8), a
	jr ++_

_:
	add hl, bc
	ld ($C1AB), hl
	ld a, h
	cp $68
	jr nz, +_
	xor a
	ld ($C1B3), a
	ld ($C1A8), a
_:
	ld a, ($C179)
	cp $01
	jr c, +++_
	ld a, $02
	ld ($C1A7), a
	xor a
	ld ($C1A8), a
	jr +++_

; 3rd entry of Jump Table from A2E3 (indexed by, $C1A7)
LABEL_A36A:
	ld a, ($C176)
	and a
	jr nz, LABEL_A39F
	ld a, ($C1AC)
	sub $01
	ld ($C1AC), a
	cp $50
	jr nz, +++_
	ld a, ($C181)
	and a
	jr nz, +_
	ld a, ($C1B4)
	and a
	jr nz, +_
	ld a, $03
	jr ++_

_:	ld a, $04
_:	ld ($C1A7), a
	ld a, $02
	ld ($C1A8), a
_:	ld a, ($C181)
	and a
	jr z, LABEL_A39F
	ld ($C1B4), a
LABEL_A39F:
	ld a, ($C1B4)
	and a
	jp z, LABEL_A426
	ld hl, ($C17F)
	ld a, h
	or l
	jp nz, LABEL_7E1E
	ld ($C1B4), a
	jp LABEL_A426

; 4th entry of Jump Table from A2E3 (indexed by, $C1A7)
LABEL_A3B3:
	ld a, $03
	ld ($C14F), a
	ld a, ($C17D)
	and a
	jr nz, +_
	ld hl, $1000
	ld ($C1B1), hl
	jr ++_

; Data from A3C6 to A3CD (8 bytes)
DATA_A3C6:
.db $00, $E8, $00, $18, $E8, $00, $18, $00

_:
	ld a, ($C189)
	ld b, a
	ld a, ($C18B)
	ld c, a
	ld a, ($C187)
	ld hl, DATA_A3C6
	rst $08	; LABEL_8
	ld a, (hl)
	add a, b
	ld b, a
	inc hl
	ld a, (hl)
	add a, c
	ld l, a
	ld h, b
	ld ($C1B1), hl
_:
	ld a, ($C181)
	and a
	jr z, +_
	ld a, $04
	ld ($C1A7), a
	ld a, ($C1A8)
	call LABEL_7F15
	ld ($C1A8), a
	jr +++_

_:
	ld a, ($C198)
	and a
	jr z, +_
	ld a, ($C1A8)
	call LABEL_7F15
	ld ($C1A8), a
_:
	call LABEL_7EBF
	jr nc, +_
	ld a, $01
	ld ($C177), a
_:
	ld a, ($C167)
	ld ($C1AD), a
	ld a, ($C168)
	ld ($C1B0), a
	call LABEL_A4E9
LABEL_A426:
	ld hl, $C1A7
	ld a, $08
	jp LABEL_7E22

; 5th entry of Jump Table from A2E3 (indexed by, $C1A7)
LABEL_A42E:
	ld a, ($C176)
	and a
	jp nz, LABEL_7E1E
	ld a, $01
	ld ($C14F), a
	ld hl, ($C11C)
	ld ($C1B1), hl
	call LABEL_7EEA
	jr nc, +_
	call LABEL_8697
	ld a, $06
	ld ($C1A7), a
	xor a
	ld ($C1B4), a
	ret

_:	ld hl, ($C17F)
	ld a, h
	or l
	jr nz, +_
	ld ($C1B4), a
	ld a, $03
	ld ($C1A7), a
_:	ld a, ($C181)
	and a
	jr z, +_
	ld a, ($C1A8)
	call LABEL_7F15
	ld ($C1A8), a
_:	ld a, ($C169)
	ld ($C1AD), a
	ld a, ($C16A)
	ld ($C1B0), a
	call LABEL_A4E9
	jp LABEL_7E1E

; 6th entry of Jump Table from A2E3 (indexed by, $C1A7)
LABEL_A482:
	xor a
	ld ($C14F), a
	ld hl, $5067
	ld ($C1B1), hl
	ld a, $F0
	ld ($C1AD), a
	ld a, $01
	ld ($C1B0), a
	ld a, ($C177)
	and a
	jr nz, LABEL_A4E3
	call LABEL_A50C
	ld a, ($C1AA)
	cp $50
	jr nz, LABEL_A4E3
	ld a, ($C1AC)
	cp $67
	jr z, +_
	cp $68
	jr nz, LABEL_A4E3
_:	ld a, ($C196)
	and $FD
	ld ($C196), a
	ld a, ($C1B5)
	and a
	jr nz, +_
	ld a, ($C135)
	cp $04
	jr nz, +_
	ld a, ($C12F)
	or $20
	ld ($C12F), a
	ld a, ($C150)
	and $FD
	ld ($C150), a
	ret

_:	ld a, $02
	ld ($C1A7), a
	xor a
	ld ($C1B5), a
	ld ($C1A8), a
LABEL_A4E3:
	ld a, ($C1A8)
	jp LABEL_7F6A

LABEL_A4E9:
	ld a, ($C176)
	and a
	ret nz
	ld a, ($C1AC)
	cp $68
	jr nz, LABEL_A50C
	ld a, ($C1AA)
	cp $20
	jr c, +_
	cp $80
	jr c, LABEL_A50C
_:	ld a, ($C16B)
	ld ($C1AD), a
	ld a, ($C16C)
	ld ($C1B0), a
LABEL_A50C:
	ld a, ($C1A8)
	ld bc, $C1AD
	ld hl, DATA_7FE0
	rst $18	; LABEL_18
	call +_
	ld a, ($C1A8)
	ld bc, $C1AF
	ld hl, DATA_7FE0
	rst $18	; LABEL_18
_:	cp h
	ret z
	ld a, ($C1AA)
	ld b, a
	and $07
	ret nz
	ld a, ($C1AC)
	ld c, a
	and $07
	ret nz
	call LABEL_8480
	call LABEL_7F57
	ld l, a
	ld a, ($C1A8)
	xor $01
	call LABEL_8498
	or l
	ld l, a
	and $0F
	cp $0F
	jr nz, +_
	ld a, $01
	jr ++_

_:	ld de, ($C1B1)
	call LABEL_7E42
_:	ld ($C1A8), a
	ret

LABEL_A559:
	ld a, $04
	ld ($C197), a
	ld a, ($C151)
	srl a
	ld ($C151), a
	jr c, ++_
	ld a, ($C137)
	and $04
	ret z
	xor a
	ld ($C1B8), a
	ld ($C1BA), a
	ld a, $68
	ld ($C1BB), a
	ld b, $A0
	ld c, $02
	ld a, ($C11C)
	and $08
	jr nz, +_
	ld b, $B0
	inc c
_:
	ld a, b
	ld ($C1B9), a
	ld a, c
	ld ($C1B7), a
	ld a, $01
	ld ($C1C4), a
	ld a, $06
	ld ($C1B6), a
	ret

_:
	ld ix, $C1B8
	ld iy, $C1BA
	ld a, ($C1B6)
	ld hl, DATA_A5AC
	jp LABEL_18

; Jump Table from A5AC to A5BB (8 entries, indexed by, $C1B6)
DATA_A5AC:
.dw LABEL_A5C6, LABEL_A5E2, LABEL_A62D, LABEL_A64A, LABEL_A695, LABEL_A724, LABEL_A778, LABEL_A5BC

; 8th entry of Jump Table from A5AC (indexed by, $C1B6)
LABEL_A5BC:
	call LABEL_7F77
	ret nz
	ld a, $06
	ld ($C1B6), a
	ret

; 1st entry of Jump Table from A5AC (indexed by, $C1B6)
LABEL_A5C6:
	ld a, $48
	ld ($C1B9), a
	ld a, $68
	ld ($C1BB), a
	xor a
	ld ($C1B7), a
	ld ($C1C2), a
	ld ($C1B8), a
	ld ($C1BA), a
	inc a
	ld ($C1B6), a
	ret

; 2nd entry of Jump Table from A5AC (indexed by, $C1B6)
LABEL_A5E2:
	ld a, ($C176)
	and a
	jp nz, LABEL_A680
	ld bc, $0080
	ld hl, ($C1BA)
	ld a, ($C1C2)
	and a
	jr nz, +_
	xor a
	sbc hl, bc
	ld ($C1BA), hl
	ld a, h
	cp $60
	jr nz, ++_
	ld a, $01
	ld ($C1C2), a
	ld ($C1B7), a
	jr ++_

_:
	add hl, bc
	ld ($C1BA), hl
	ld a, h
	cp $68
	jr nz, +_
	xor a
	ld ($C1C2), a
	ld ($C1B7), a
_:
	ld a, ($C179)
	cp $02
	jr c, LABEL_A677
	ld a, $02
	ld ($C1B6), a
	ld a, $03
	ld ($C1B7), a
	jr LABEL_A677

; 3rd entry of Jump Table from A5AC (indexed by, $C1B6)
LABEL_A62D:
	ld a, ($C176)
	and a
	jr nz, LABEL_A680
	ld a, ($C1B9)
	add a, $01
	ld ($C1B9), a
	cp $50
	jr nz, LABEL_A677
	xor a
	ld ($C1B7), a
	ld a, $03
	ld ($C1B6), a
	jr LABEL_A677

; 4th entry of Jump Table from A5AC (indexed by, $C1B6)
LABEL_A64A:
	ld a, ($C176)
	and a
	jp nz, LABEL_A680
	ld a, ($C1BB)
	sub $01
	ld ($C1BB), a
	cp $50
	jr nz, LABEL_A677
	ld a, ($C181)
	and a
	jr nz, +_
	ld a, ($C1C3)
	and a
	jr nz, +_
	ld a, $04
	jr ++_

_:	ld a, $05
_:	ld ($C1B6), a
	ld a, $02
	ld ($C1B7), a
LABEL_A677:
	ld a, ($C181)
	and a
	jr z, LABEL_A680
	ld ($C1C3), a
LABEL_A680:
	ld a, ($C1C3)
	and a
	jp z, LABEL_A71C
	ld hl, ($C17F)
	ld a, h
	or l
	jp nz, LABEL_7E1E
	ld ($C1C3), a
	jp LABEL_A71C

; 5th entry of Jump Table from A5AC (indexed by, $C1B6)
LABEL_A695:
	ld a, $03
	ld ($C14F), a
	ld a, ($C17D)
	and a
	jr nz, +_
	ld hl, DATA_90C8
	ld ($C1C0), hl
	jr ++++_

_:	ld a, ($C189)
	ld b, a
	ld a, ($C18B)
	ld c, a
	ld a, ($C19C)
	ld d, a
	ld a, ($C19E)
	ld e, a
	ld a, ($C150)
	and $11
	jr z, ++_
	and $01
	jr nz, +_
	ld a, ($C1D7)
	ld d, a
	ld a, ($C1D9)
	ld e, d
_:	ld a, d
	sub b
	neg
	add a, b
	ld b, a
	ld a, e
	sub c
	neg
_:	add a, c
	ld l, a
	ld h, b
	ld ($C1C0), hl
_:
	ld a, ($C181)
	and a
	jr z, +_
	ld ($C1C3), a
	ld a, $05
	ld ($C1B6), a
	ld a, ($C1B7)
	call LABEL_7F15
	ld ($C1B7), a
	jr +++_

_:
	ld a, ($C198)
	and a
	jr z, +_
	ld a, ($C1B7)
	call LABEL_7F15
	ld ($C1B7), a
_:	call LABEL_7EBF
	jr nc, +_
	ld a, $01
	ld ($C177), a
_:	ld a, ($C167)
	ld ($C1BC), a
	ld a, ($C168)
	ld ($C1BF), a
	call LABEL_A7DF
LABEL_A71C:
	ld hl, $C1B6
	ld a, $10
	jp LABEL_7E22

; 6th entry of Jump Table from A5AC (indexed by, $C1B6)
LABEL_A724:
	ld a, ($C176)
	and a
	jp nz, LABEL_7E1E
	ld a, $01
	ld ($C14F), a
	ld hl, ($C11C)
	ld ($C1C0), hl
	call LABEL_7EEA
	jr nc, +_
	call LABEL_8697
	ld a, $07
	ld ($C1B6), a
	xor a
	ld ($C1C3), a
	ret

_:	ld hl, ($C17F)
	ld a, h
	or l
	jr nz, +_
	ld ($C1C3), a
	ld a, $04
	ld ($C1B6), a
_:
	ld a, ($C181)
	and a
	jr z, +_
	ld a, ($C1B7)
	call LABEL_7F15
	ld ($C1B7), a
_:
	ld a, ($C169)
	ld ($C1BC), a
	ld a, ($C16A)
	ld ($C1BF), a
	call LABEL_A7DF
	jp LABEL_7E1E

; 7th entry of Jump Table from A5AC (indexed by, $C1B6)
LABEL_A778:
	xor a
	ld ($C14F), a
	ld hl, $5067
	ld ($C1C0), hl
	ld a, $F0
	ld ($C1BC), a
	ld a, $01
	ld ($C1BF), a
	ld a, ($C177)
	and a
	jr nz, LABEL_A7D9
	call LABEL_A802
	ld a, ($C1B9)
	cp $50
	jr nz, LABEL_A7D9
	ld a, ($C1BB)
	cp $67
	jr z, +_
	cp $68
	jr nz, LABEL_A7D9
_:
	ld a, ($C196)
	and $FB
	ld ($C196), a
	ld a, ($C1C4)
	and a
	jr nz, +_
	ld a, ($C135)
	cp $04
	jr nz, +_
	ld a, ($C12F)
	or $40
	ld ($C12F), a
	ld a, ($C150)
	and $FB
	ld ($C150), a
	ret

_:	ld a, $03
	ld ($C1B6), a
	xor a
	ld ($C1C4), a
	ld ($C1B7), a
LABEL_A7D9:
	ld a, ($C1B7)
	jp LABEL_7F6A

LABEL_A7DF:
	ld a, ($C176)
	and a
	ret nz
	ld a, ($C1BB)
	cp $68
	jr nz, LABEL_A802
	ld a, ($C1B9)
	cp $20
	jr c, +_
	cp $80
	jr c, LABEL_A802
_:
	ld a, ($C16B)
	ld ($C1BC), a
	ld a, ($C16C)
	ld ($C1BF), a
LABEL_A802:
	ld a, ($C1B7)
	ld bc, $C1BC
	ld hl, DATA_7FE0
	rst $18	; LABEL_18
	call +_
	ld a, ($C1B7)
	ld bc, $C1BE
	ld hl, DATA_7FE0
	rst $18	; LABEL_18
_:	cp h
	ret z
	ld a, ($C1B9)
	ld b, a
	and $07
	ret nz
	ld a, ($C1BB)
	ld c, a
	and $07
	ret nz
	call LABEL_8480
	call LABEL_7F57
	ld l, a
	ld a, ($C1B7)
	xor $01
	call LABEL_8498
	or l
	ld l, a
	and $0F
	cp $0F
	jr nz, +_
	ld a, $01
	jr ++_

_:	ld de, ($C1C0)
	call LABEL_7E42
_:	ld ($C1B7), a
	ret

LABEL_A84F:
	ld a, $08
	ld ($C197), a
	ld a, ($C151)
	srl a
	ld ($C151), a
	jr c, ++_
	ld a, ($C137)
	and $08
	ret z
	xor a
	ld ($C1C7), a
	ld ($C1C9), a
	ld a, $68
	ld ($C1CA), a
	ld b, $A0
	ld c, $02
	ld a, ($C11C)
	and $08
	jr nz, +_
	ld b, $B0
	inc c
_:
	ld a, b
	ld ($C1C8), a
	ld a, c
	ld ($C1C6), a
	ld a, $01
	ld ($C1D3), a
	ld a, $06
	ld ($C1C5), a
	ret

_:	ld ix, $C1C7
	ld iy, $C1C9
	ld a, ($C1C5)
	ld hl, DATA_A8A2
	jp LABEL_18

; Jump Table from A8A2 to A8B1 (8 entries, indexed by, $C1C5)
DATA_A8A2:
.dw LABEL_A8BC, LABEL_A8D8, LABEL_A921, LABEL_A93E, LABEL_A987, LABEL_AA09, LABEL_AA5D, LABEL_A8B2

; 8th entry of Jump Table from A8A2 (indexed by, $C1C5)
LABEL_A8B2:
	call LABEL_7F77
	ret nz
	ld a, $06
	ld ($C1C5), a
	ret

; 1st entry of Jump Table from A8A2 (indexed by, $C1C5)
LABEL_A8BC:
	ld a, $58
	ld ($C1C8), a
	ld a, $68
	ld ($C1CA), a
	xor a
	ld ($C1C6), a
	ld ($C1D1), a
	ld ($C1C7), a
	ld ($C1C9), a
	inc a
	ld ($C1C5), a
	ret

; 2nd entry of Jump Table from A8A2 (indexed by, $C1C5)
LABEL_A8D8:
	ld a, ($C176)
	and a
	jp nz, LABEL_A973
	ld bc, $0080
	ld hl, ($C1C9)
	ld a, ($C1D1)
	and a
	jr nz, +_
	xor a
	sbc hl, bc
	ld ($C1C9), hl
	ld a, h
	cp $60
	jr nz, ++_
	ld a, $01
	ld ($C1D1), a
	ld ($C1C6), a
	jr ++_

_:
	add hl, bc
	ld ($C1C9), hl
	ld a, h
	cp $68
	jr nz, +_
	xor a
	ld ($C1D1), a
	ld ($C1C6), a
_:
	ld a, ($C179)
	cp $03
	jr c, LABEL_A96A
	ld a, $02
	ld ($C1C5), a
	ld ($C1C6), a
	jr LABEL_A96A

; 3rd entry of Jump Table from A8A2 (indexed by, $C1C5)
LABEL_A921:
	ld a, ($C176)
	and a
	jr nz, LABEL_A973
	ld a, ($C1C8)
	sub $01
	ld ($C1C8), a
	cp $50
	jr nz, LABEL_A96A
	ld a, $03
	ld ($C1C5), a
	xor a
	ld ($C1C6), a
	jr LABEL_A96A

; 4th entry of Jump Table from A8A2 (indexed by, $C1C5)
LABEL_A93E:
	ld a, ($C176)
	and a
	jr nz, LABEL_A973
	ld a, ($C1CA)
	sub $01
	ld ($C1CA), a
	cp $50
	jr nz, LABEL_A96A
	ld a, ($C181)
	and a
	jr nz, +_
	ld a, ($C1D2)
	and a
	jr nz, +_
	ld a, $04
	jr ++_

_:	ld a, $05
_:	ld ($C1C5), a
	ld a, $02
	ld ($C1C6), a
LABEL_A96A:
	ld a, ($C181)
	and a
	jr z, LABEL_A973
	ld ($C1D2), a
LABEL_A973:
	ld a, ($C1D2)
	and a
	jp z, LABEL_AA01
	ld hl, ($C17F)
	ld a, h
	or l
	jp nz, LABEL_7E1E
	ld ($C1D2), a
	jp LABEL_AA01

; 5th entry of Jump Table from A8A2 (indexed by, $C1C5)
LABEL_A987:
	ld a, $03
	ld ($C14F), a
	ld a, ($C17D)
	and a
	jr nz, +_
	ld hl, $10C8
	ld ($C1CF), hl
	jr +++++_

_:
	ld a, ($C189)
	ld h, a
	ld a, ($C18B)
	ld l, a
	ld a, ($C1C8)
	sub h
	jr nc, +_
	neg
_:	cp $30
	jr nc, ++_
	ld a, ($C1CA)
	sub l
	jr nc, +_
	neg
_:	cp $30
	jr nc, +_
	ld hl, ($C11C)
_:
	ld ($C1CF), hl
_:
	ld a, ($C181)
	and a
	jr z, +_
	ld ($C1D2), a
	ld a, $05
	ld ($C1C5), a
	ld a, ($C1C6)
	call LABEL_7F15
	ld ($C1C6), a
	jr +++_

_:
	ld a, ($C198)
	and a
	jr z, +_
	ld a, ($C1C6)
	call LABEL_7F15
	ld ($C1C6), a
_:
	call LABEL_7EBF
	jr nc, +_
	ld a, $01
	ld ($C177), a
_:
	ld a, ($C167)
	ld ($C1CB), a
	ld a, ($C168)
	ld ($C1CE), a
	call LABEL_AAC4
LABEL_AA01:
	ld hl, $C1C5
	ld a, $18
	jp LABEL_7E22

; 6th entry of Jump Table from A8A2 (indexed by, $C1C5)
LABEL_AA09:
	ld a, ($C176)
	and a
	jp nz, LABEL_7E1E
	ld a, $01
	ld ($C14F), a
	ld hl, ($C11C)
	ld ($C1CF), hl
	call LABEL_7EEA
	jr nc, +_
	call LABEL_8697
	ld a, $07
	ld ($C1C5), a
	xor a
	ld ($C1D2), a
	ret

_:	ld hl, ($C17F)
	ld a, h
	or l
	jr nz, +_
	ld ($C1D2), a
	ld a, $04
	ld ($C1C5), a
_:	ld a, ($C181)
	and a
	jr z, +_
	ld a, ($C1C6)
	call LABEL_7F15
	ld ($C1C6), a
_:
	ld a, ($C169)
	ld ($C1CB), a
	ld a, ($C16A)
	ld ($C1CE), a
	call LABEL_AAC4
	jp LABEL_7E1E

; 7th entry of Jump Table from A8A2 (indexed by, $C1C5)
LABEL_AA5D:
	xor a
	ld ($C14F), a
	ld hl, $5067
	ld ($C1CF), hl
	ld a, $F0
	ld ($C1CB), a
	ld a, $01
	ld ($C1CE), a
	ld a, ($C177)
	and a
	jr nz, LABEL_AABE
	call LABEL_AAE7
	ld a, ($C1C8)
	cp $50
	jr nz, LABEL_AABE
	ld a, ($C1CA)
	cp $67
	jr z, +_
	cp $68
	jr nz, LABEL_AABE
_:
	ld a, ($C196)
	and $F7
	ld ($C196), a
	ld a, ($C1D3)
	and a
	jr nz, +_
	ld a, ($C135)
	cp $04
	jr nz, +_
	ld a, ($C12F)
	or $80
	ld ($C12F), a
	ld a, ($C150)
	and $F7
	ld ($C150), a
	ret

_:
	ld a, $03
	ld ($C1C5), a
	xor a
	ld ($C1D3), a
	ld ($C1C6), a
LABEL_AABE:
	ld a, ($C1C6)
	jp LABEL_7F6A

LABEL_AAC4:
	ld a, ($C176)
	and a
	ret nz
	ld a, ($C1CA)
	cp $68
	jr nz, LABEL_AAE7
	ld a, ($C1C8)
	cp $20
	jr c, +_
	cp $80
	jr c, LABEL_AAE7
_:
	ld a, ($C16B)
	ld ($C1CB), a
	ld a, ($C16C)
	ld ($C1CE), a
LABEL_AAE7:
	ld a, ($C1C6)
	ld bc, $C1CB
	ld hl, DATA_7FE0
	rst $18	; LABEL_18
	call +_
	ld a, ($C1C6)
	ld bc, $C1CD
	ld hl, DATA_7FE0
	rst $18	; LABEL_18
_:
	cp h
	ret z
	ld a, ($C1C8)
	ld b, a
	and $07
	ret nz
	ld a, ($C1CA)
	ld c, a
	and $07
	ret nz
	call LABEL_8480
	call LABEL_7F57
	ld l, a
	ld a, ($C1C6)
	xor $01
	call LABEL_8498
	or l
	ld l, a
	and $0F
	cp $0F
	jr nz, +_
	ld a, $01
	jr ++_

_:	ld de, ($C1CF)
	call LABEL_7E42
_:	ld ($C1C6), a
	ret

; Data from AB34 to AB3B (8 bytes)
.db $00, $E8, $00, $18, $E8, $00, $18, $00

LABEL_AB3C:
	ld a, $10
	ld ($C197), a
	ld a, ($C151)
	srl a
	ld ($C151), a
	jr c, ++_
	ld a, ($C137)
	and $10
	ret z
	xor a
	ld ($C1D6), a
	ld ($C1D8), a
	ld a, $68
	ld ($C1D9), a
	ld b, $A0
	ld c, $02
	ld a, ($C11C)
	and $08
	jr nz, +_
	ld b, $B0
	inc c
_:
	ld a, b
	ld ($C1D7), a
	ld a, c
	ld ($C1D5), a
	ld a, $01
	ld ($C1E1), a
	ld a, $04
	ld ($C1D4), a
	ret

_:
	ld ix, $C1D6
	ld iy, $C1D8
	ld a, ($C1D4)
	ld hl, DATA_AB8F
	jp LABEL_18

; Jump Table from AB8F to AB9A (6 entries, indexed by, $C1D4)
DATA_AB8F:
.dw LABEL_ABAE, LABEL_ACFA, LABEL_ABC7, LABEL_AC3E, LABEL_AC92, LABEL_AB9B

; 6th entry of Jump Table from AB8F (indexed by, $C1D4)
LABEL_AB9B:
	call LABEL_7F77
	ret nz
	ld b, $10
	ld a, ($C196)
	or b
	ld ($C196), a
	ld a, $04
	ld ($C1D4), a
	ret

; 1st entry of Jump Table from AB8F (indexed by, $C1D4)
LABEL_ABAE:
	ld a, $50
	ld ($C1D7), a
	ld a, $68
	ld ($C1D9), a
	xor a
	ld ($C1D5), a
	ld ($C1D8), a
	ld ($C1D6), a
	inc a
	ld ($C1D4), a
	ret

; 3rd entry of Jump Table from AB8F (indexed by, $C1D4)
LABEL_ABC7:
	ld a, $03
	ld ($C14F), a
	ld a, ($C17D)
	and a
	jr nz, ++_
	ld a, ($C16F)
	and a
	jr z, +_
	ld a, ($C179)
	cp $03
	jr nc, ++_
_:
	ld hl, $9000
	ld ($C1DE), hl
	jr ++_

_:
	ld a, ($C189)
	ld h, a
	ld a, ($C18B)
	ld l, a
	ld ($C1DE), hl
_:
	ld a, ($C181)
	and a
	jr z, +_
	ld a, $03
	ld ($C1D4), a
	ld a, ($C1D5)
	call LABEL_7F15
	ld ($C1D5), a
	jr +++_

_:
	ld a, ($C16F)
	and a
	jr nz, +_
	ld a, ($C198)
	and a
	jr z, +_
	ld a, ($C1D5)
	call LABEL_7F15
	ld ($C1D5), a
_:
	call LABEL_7EBF
	jr nc, +_
	ld a, $01
	ld ($C177), a
_:
	ld a, ($C155)
	ld ($C1DA), a
	ld a, ($C156)
	ld ($C1DD), a
	call LABEL_AD44
LABEL_AC36:
	ld hl, $C1D4
	xor a
	jp LABEL_7E22

; 4th entry of Jump Table from AB8F (indexed by, $C1D4)
LABEL_AC3E:
	ld a, ($C176)
	and a
	jp nz, LABEL_7E1E
	ld a, $01
	ld ($C14F), a
	ld hl, ($C11C)
	ld ($C1DE), hl
	call LABEL_7EEA
	jr nc, +_
	call LABEL_8697
	ld a, $05
	ld ($C1D4), a
	xor a
	ld ($C1E0), a
	ret

_:
	ld hl, ($C17F)
	ld a, h
	or l
	jr nz, +_
	ld ($C1E0), a
	ld a, $02
	ld ($C1D4), a
_:
	ld a, ($C181)
	and a
	jr z, +_
	ld a, ($C1D5)
	call LABEL_7F15
	ld ($C1D5), a
_:
	ld a, ($C169)
	ld ($C1DA), a
	ld a, ($C16A)
	ld ($C1DD), a
	call LABEL_AD44
	jp LABEL_7E1E

; 5th entry of Jump Table from AB8F (indexed by, $C1D4)
LABEL_AC92:
	xor a
	ld ($C14F), a
	ld hl, $5067
	ld ($C1DE), hl
	ld a, $F0
	ld ($C1DA), a
	ld a, $01
	ld ($C1DD), a
	ld a, ($C177)
	and a
	jr nz, LABEL_ACF4
	call LABEL_AD67
	ld a, ($C1D7)
	cp $50
	jr nz, LABEL_ACF4
	ld a, ($C1D9)
	cp $67
	jr z, +_
	cp $68
	jr nz, LABEL_ACF4
_:	ld a, ($C196)
	and $EF
	ld ($C196), a
	ld a, ($C1E1)
	and a
	jr nz, +_
	ld a, ($C135)
	cp $04
	jr nz, +_
	ld a, ($C12F)
	or $01
	ld ($C12F), a
	ld a, ($C150)
	and $EF
	ld ($C150), a
	ret

_:	xor a
	ld ($C1E1), a
	ld ($C1D5), a
	inc a
	ld ($C1D4), a
	jr LABEL_ACFA

LABEL_ACF4:
	ld a, ($C1D5)
	jp LABEL_7F6A

; 2nd entry of Jump Table from AB8F (indexed by, $C1D4)
LABEL_ACFA:
	ld a, ($C176)
	and a
	jr nz, ++++_
	ld a, ($C1D9)
	sub $01
	ld ($C1D9), a
	cp $50
	jr nz, +++_
	ld a, ($C181)
	and a
	jr nz, +_
	ld a, ($C1E0)
	and a
	jr nz, +_
	ld a, $02
	jr ++_

_:
	ld a, $03
_:
	ld ($C1D4), a
	ld a, $02
	ld ($C1D5), a
_:
	ld a, ($C181)
	and a
	jr z, +_
	ld ($C1E0), a
_:
	ld a, ($C1E0)
	and a
	jp z, LABEL_AC36
	ld hl, ($C17F)
	ld a, h
	or l
	jp nz, LABEL_7E1E
	ld ($C1E0), a
	jp LABEL_AC36

LABEL_AD44:
	ld a, ($C176)
	and a
	ret nz
	ld a, ($C1D9)
	cp $68
	jr nz, LABEL_AD67
	ld a, ($C1D7)
	cp $20
	jr c, +_
	cp $80
	jr c, LABEL_AD67
_:
	ld a, ($C16B)
	ld ($C1DA), a
	ld a, ($C16C)
	ld ($C1DD), a
LABEL_AD67:
	ld a, ($C1D5)
	ld bc, $C1DA
	ld hl, DATA_7FE0
	rst $18	; LABEL_18
	call +_
	ld a, ($C1D5)
	ld bc, $C1DC
	ld hl, DATA_7FE0
	rst $18	; LABEL_18
_:
	cp h
	ret z
	ld a, ($C1D7)
	ld b, a
	and $07
	ret nz
	ld a, ($C1D9)
	ld c, a
	and $07
	ret nz
	call LABEL_8480
	call LABEL_7F57
	ld l, a
	ld a, ($C1D5)
	xor $01
	call LABEL_8498
	or l
	ld l, a
	and $0F
	cp $0F
	jr nz, +_
	ld a, $01
	ld ($C1D5), a
	ret

_:
	ld de, ($C1DE)
	call LABEL_7E42
	ld ($C1D5), a
	ret

LABEL_ADB6:
	ld a, $20
	ld ($C197), a
	ld a, ($C151)
	srl a
	ld ($C151), a
	jr c, ++_
	ld a, ($C137)
	and $20
	ret z
	xor a
	ld ($C1E4), a
	ld ($C1E6), a
	ld a, $68
	ld ($C1E7), a
	ld b, $A0
	ld c, $02
	ld a, ($C11C)
	and $08
	jr nz, +_
	ld b, $B0
	inc c
_:
	ld a, b
	ld ($C1E5), a
	ld a, c
	ld ($C1E3), a
	ld a, $01
	ld ($C1EF), a
	ld a, $04
	ld ($C1E2), a
	ret

_:
	ld ix, $C1E4
	ld iy, $C1E6
	ld a, ($C1E2)
	ld hl, DATA_AE09
	jp LABEL_18

; Jump Table from AE09 to AE14 (6 entries, indexed by, $C1E2)
DATA_AE09:
.dw LABEL_AE1F, LABEL_AE38, LABEL_AE81, LABEL_AEFC, LABEL_AF50, LABEL_AE15

; 6th entry of Jump Table from AE09 (indexed by, $C1E2)
LABEL_AE15:
	call LABEL_7F77
	ret nz
	ld a, $04
	ld ($C1E2), a
	ret

; 1st entry of Jump Table from AE09 (indexed by, $C1E2)
LABEL_AE1F:
	ld a, $50
	ld ($C1E5), a
	ld a, $68
	ld ($C1E7), a
	xor a
	ld ($C1E3), a
	ld ($C1E4), a
	ld ($C1E6), a
	inc a
	ld ($C1E2), a
	ret

; 2nd entry of Jump Table from AE09 (indexed by, $C1E2)
LABEL_AE38:
	ld a, ($C176)
	and a
	jr nz, ++++_
	ld a, ($C1E7)
	sub $01
	ld ($C1E7), a
	cp $50
	jr nz, +++_
	ld a, ($C181)
	and a
	jr nz, +_
	ld a, ($C1EE)
	and a
	jr nz, +_
	ld a, $02
	jr ++_

_:
	ld a, $03
_:	ld ($C1E2), a
	ld a, $02
	ld ($C1E3), a
_:	ld a, ($C181)
	and a
	jr z, +_
	ld ($C1EE), a
_:	ld a, ($C1EE)
	and a
	jp z, LABEL_AEF4
	ld hl, ($C17F)
	ld a, h
	or l
	jp nz, LABEL_7E1E
	ld ($C1EE), a
	jp LABEL_AEF4

; 3rd entry of Jump Table from AE09 (indexed by, $C1E2)
LABEL_AE81:
	ld a, $03
	ld ($C14F), a
	ld a, ($C17D)
	and a
	jr nz, +_
	ld hl, $1000
	ld ($C1EC), hl
	jr ++_

; Data from AE94 to AE9B (8 bytes)
DATA_AE94:
.db $00, $E8, $00, $18, $E8, $00, $18, $00

_:
	ld a, ($C189)
	ld b, a
	ld a, ($C18B)
	ld c, a
	ld a, ($C187)
	ld hl, DATA_AE94
	rst $08	; LABEL_8
	ld a, (hl)
	add a, b
	ld b, a
	inc hl
	ld a, (hl)
	add a, c
	ld l, a
	ld h, b
	ld ($C1EC), hl
_:
	ld a, ($C181)
	and a
	jr z, +_
	ld a, $03
	ld ($C1E2), a
	ld a, ($C1E3)
	call LABEL_7F15
	ld ($C1E3), a
	jr +++_

_:
	ld a, ($C198)
	and a
	jr z, +_
	ld a, ($C1E3)
	call LABEL_7F15
	ld ($C1E3), a
_:	call LABEL_7EBF
	jr nc, ++_
	ld a, $01
	ld ($C177), a
_:	ld a, ($C167)
	ld ($C1E8), a
	ld a, ($C168)
	ld ($C1EB), a
	call LABEL_AFBA
LABEL_AEF4:
	ld hl, $C1E2
	ld a, $08
	jp LABEL_7E22

; 4th entry of Jump Table from AE09 (indexed by, $C1E2)
LABEL_AEFC:
	ld a, ($C176)
	and a
	jp nz, LABEL_7E1E
	ld a, $01
	ld ($C14F), a
	ld hl, ($C11C)
	ld ($C1EC), hl
	call LABEL_7EEA
	jr nc, +_
	call LABEL_8697
	ld a, $05
	ld ($C1E2), a
	xor a
	ld ($C1EE), a
	ret

_:	ld hl, ($C17F)
	ld a, h
	or l
	jr nz, +_
	ld ($C1EE), a
	ld a, $02
	ld ($C1E2), a
_:
	ld a, ($C181)
	and a
	jr z, +_
	ld a, ($C1E3)
	call LABEL_7F15
	ld ($C1E3), a
_:
	ld a, ($C169)
	ld ($C1E8), a
	ld a, ($C16A)
	ld ($C1EB), a
	call LABEL_AFBA
	jp LABEL_7E1E

; 5th entry of Jump Table from AE09 (indexed by, $C1E2)
LABEL_AF50:
	xor a
	ld ($C14F), a
	ld hl, $5067
	ld ($C1EC), hl
	ld a, $F0
	ld ($C1E8), a
	ld a, $01
	ld ($C1EB), a
	ld a, ($C177)
	and a
	jr nz, LABEL_AFB4
	call LABEL_AFDD
	ld a, ($C1E5)
	cp $50
	jr nz, LABEL_AFB4
	ld a, ($C1E7)
	cp $67
	jr z, +_
	cp $68
	jr nz, LABEL_AFB4
_:
	ld a, ($C196)
	and $DF
	ld ($C196), a
	ld a, ($C1EF)
	and a
	jr nz, +_
	ld a, ($C135)
	cp $04
	jr nz, +_
	ld a, ($C12F)
	or $02
	ld ($C12F), a
	ld a, ($C150)
	and $DF
	ld ($C150), a
	ret

_:	ld a, $01
	ld ($C1E2), a
	xor a
	ld ($C1EF), a
	ld ($C1E3), a
	jp LABEL_AEF4

LABEL_AFB4:
	ld a, ($C1E3)
	jp LABEL_7F6A

LABEL_AFBA:
	ld a, ($C176)
	and a
	ret nz
	ld a, ($C1E7)
	cp $68
	jr nz, LABEL_AFDD
	ld a, ($C1E5)
	cp $20
	jr c, +_
	cp $80
	jr c, LABEL_AFDD
_:
	ld a, ($C16B)
	ld ($C1E8), a
	ld a, ($C16C)
	ld ($C1EB), a
LABEL_AFDD:
	ld a, ($C1E3)
	ld bc, $C1E8
	ld hl, DATA_7FE0
	rst $18	; LABEL_18
	call +_
	ld a, ($C1E3)
	ld bc, $C1EA
	ld hl, DATA_7FE0
	rst $18	; LABEL_18
_:
	cp h
	ret z
	ld a, ($C1E5)
	ld b, a
	and $07
	ret nz
	ld a, ($C1E7)
	ld c, a
	and $07
	ret nz
	call LABEL_8480
	call LABEL_7F57
	ld l, a
	ld a, ($C1E3)
	xor $01
	call LABEL_8498
	or l
	ld l, a
	and $0F
	cp $0F
	jr nz, +_
	ld a, $01
	jr ++_

_:
	ld de, ($C1EC)
	call LABEL_7E42
_:
	ld ($C1E3), a
	ret

LABEL_B02A:
	ld a, $40
	ld ($C197), a
	ld a, ($C151)
	srl a
	ld ($C151), a
	jr c, ++_
	ld a, ($C137)
	and $40
	ret z
	xor a
	ld ($C1F2), a
	ld ($C1F4), a
	ld a, $68
	ld ($C1F5), a
	ld b, $A0
	ld c, $02
	ld a, ($C11C)
	and $08
	jr nz, +_
	ld b, $B0
	inc c
_:
	ld a, b
	ld ($C1F3), a
	ld a, c
	ld ($C1F1), a
	ld a, $01
	ld ($C1FD), a
	ld a, $04
	ld ($C1F0), a
	ret

_:	ld ix, $C1F2
	ld iy, $C1F4
	ld a, ($C1F0)
	ld hl, DATA_B07D
	jp LABEL_18

; Jump Table from B07D to B088 (6 entries, indexed by, $C1F0)
DATA_B07D:
.dw LABEL_B093, LABEL_B0AC, LABEL_B0F6, LABEL_B185, LABEL_B1D9, LABEL_B089

; 6th entry of Jump Table from B07D (indexed by, $C1F0)
LABEL_B089:
	call LABEL_7F77
	ret nz
	ld a, $04
	ld ($C1F0), a
	ret

; 1st entry of Jump Table from B07D (indexed by, $C1F0)
LABEL_B093:
	ld a, $50
	ld ($C1F3), a
	ld a, $68
	ld ($C1F5), a
	xor a
	ld ($C1F1), a
	ld ($C1F2), a
	ld ($C1F4), a
	inc a
	ld ($C1F0), a
	ret

; 2nd entry of Jump Table from B07D (indexed by, $C1F0)
LABEL_B0AC:
	ld a, ($C176)
	and a
	jr nz, ++++_
	ld a, ($C1F5)
	sub $01
	ld ($C1F5), a
	cp $50
	jr nz, +++_
	ld a, ($C181)
	and a
	jr nz, +_
	ld a, ($C1FC)
	and a
	jr nz, +_
	ld a, $02
	jr ++_

_:	ld a, $03
_:	ld ($C1F0), a
	ld a, $02
	ld ($C1F1), a
_:	ld a, ($C181)
	and a
	jr z, +_
	ld ($C1FC), a
_:
	ld a, ($C1FC)
	and a
	jp z, LABEL_B17D
	ld hl, ($C17F)
	ld a, h
	or l
	jp nz, LABEL_7E1E
	ld ($C1FC), a
	jp LABEL_B17D

; 3rd entry of Jump Table from B07D (indexed by, $C1F0)
LABEL_B0F6:
	ld a, $03
	ld ($C14F), a
	ld a, ($C17D)
	and a
	jr nz, +_
	ld hl, DATA_90C8
	ld ($C1FA), hl
	jr ++++_

_:
	ld a, ($C189)
	ld b, a
	ld a, ($C18B)
	ld c, a
	ld a, ($C19C)
	ld d, a
	ld a, ($C19E)
	ld e, a
	ld a, ($C150)
	and $11
	jr z, ++_
	and $01
	jr nz, +_
	ld a, ($C1D7)
	ld d, a
	ld a, ($C1D9)
	ld e, d
_:
	ld a, d
	sub b
	neg
	add a, b
	ld b, a
	ld a, e
	sub c
	neg
_:
	add a, c
	ld l, a
	ld h, b
	ld ($C1FA), hl
_:
	ld a, ($C181)
	and a
	jr z, +_
	ld ($C1FC), a
	ld a, $03
	ld ($C1F0), a
	ld a, ($C1F1)
	call LABEL_7F15
	ld ($C1F1), a
	jr +++_

_:
	ld a, ($C198)
	and a
	jr z, +_
	ld a, ($C1F1)
	call LABEL_7F15
	ld ($C1F1), a
_:
	call LABEL_7EBF
	jr nc, +_
	ld a, $01
	ld ($C177), a
_:
	ld a, ($C167)
	ld ($C1F6), a
	ld a, ($C168)
	ld ($C1F9), a
	call LABEL_B243
LABEL_B17D:
	ld hl, $C1F0
	ld a, $10
	jp LABEL_7E22

; 4th entry of Jump Table from B07D (indexed by, $C1F0)
LABEL_B185:
	ld a, ($C176)
	and a
	jp nz, LABEL_7E1E
	ld a, $01
	ld ($C14F), a
	ld hl, ($C11C)
	ld ($C1FA), hl
	call LABEL_7EEA
	jr nc, +_
	call LABEL_8697
	ld a, $05
	ld ($C1F0), a
	xor a
	ld ($C1FC), a
	ret

_:	ld hl, ($C17F)
	ld a, h
	or l
	jr nz, +_
	ld ($C1FC), a
	ld a, $02
	ld ($C1F0), a
_:
	ld a, ($C181)
	and a
	jr z, +_
	ld a, ($C1F1)
	call LABEL_7F15
	ld ($C1F1), a
_:
	ld a, ($C169)
	ld ($C1F6), a
	ld a, ($C16A)
	ld ($C1F9), a
	call LABEL_B243
	jp LABEL_7E1E

; 5th entry of Jump Table from B07D (indexed by, $C1F0)
LABEL_B1D9:
	xor a
	ld ($C14F), a
	ld hl, $5067
	ld ($C1FA), hl
	ld a, $F0
	ld ($C1F6), a
	ld a, $01
	ld ($C1F9), a
	ld a, ($C177)
	and a
	jr nz, LABEL_B23D
	call LABEL_B266
	ld a, ($C1F3)
	cp $50
	jr nz, LABEL_B23D
	ld a, ($C1F5)
	cp $67
	jr z, +_
	cp $68
	jr nz, LABEL_B23D
_:
	ld a, ($C196)
	and $BF
	ld ($C196), a
	ld a, ($C1FD)
	and a
	jr nz, +_
	ld a, ($C135)
	cp $04
	jr nz, +_
	ld a, ($C12F)
	or $04
	ld ($C12F), a
	ld a, ($C150)
	and $BF
	ld ($C150), a
	ret

_:	ld a, $01
	ld ($C1F0), a
	xor a
	ld ($C1FD), a
	ld ($C1F1), a
	jp LABEL_B0AC

LABEL_B23D:
	ld a, ($C1F1)
	jp LABEL_7F6A

LABEL_B243:
	ld a, ($C176)
	and a
	ret nz
	ld a, ($C1F5)
	cp $68
	jr nz, LABEL_B266
	ld a, ($C1F3)
	cp $20
	jr c, +_
	cp $80
	jr c, LABEL_B266
_:
	ld a, ($C16B)
	ld ($C1F6), a
	ld a, ($C16C)
	ld ($C1F9), a
LABEL_B266:
	ld a, ($C1F1)
	ld bc, $C1F6
	ld hl, DATA_7FE0
	rst $18	; LABEL_18
	call +_
	ld a, ($C1F1)
	ld bc, $C1F8
	ld hl, DATA_7FE0
	rst $18	; LABEL_18
_:
	cp h
	ret z
	ld a, ($C1F3)
	ld b, a
	and $07
	ret nz
	ld a, ($C1F5)
	ld c, a
	and $07
	ret nz
	call LABEL_8480
	call LABEL_7F57
	ld l, a
	ld a, ($C1F1)
	xor $01
	call LABEL_8498
	or l
	ld l, a
	and $0F
	cp $0F
	jr nz, +_
	ld a, $01
	jr ++_

_:	ld de, ($C1FA)
	call LABEL_7E42
_:	ld ($C1F1), a
	ret

LABEL_B2B3:
	ld a, $80
	ld ($C197), a
	ld a, ($C151)
	srl a
	ld ($C151), a
	jr c, ++_
	ld a, ($C137)
	and $80
	ret z
	xor a
	ld ($C200), a
	ld ($C202), a
	ld a, $68
	ld ($C203), a
	ld b, $A0
	ld c, $02
	ld a, ($C11C)
	and $08
	jr nz, +_
	ld b, $B0
	inc c
_:
	ld a, b
	ld ($C201), a
	ld a, c
	ld ($C1FF), a
	ld a, $01
	ld ($C20B), a
	ld a, $04
	ld ($C1FE), a
	ret

_:	ld ix, $C200
	ld iy, $C202
	ld a, ($C1FE)
	ld hl, DATA_B306
	jp LABEL_18

; Jump Table from B306 to B311 (6 entries, indexed by, $C1FE)
DATA_B306:
.dw LABEL_B31C, LABEL_B32F, LABEL_B378, LABEL_B3FF, LABEL_B453, LABEL_B312

; 6th entry of Jump Table from B306 (indexed by, $C1FE)
LABEL_B312:
	call LABEL_7F77
	ret nz
	ld a, $04
	ld ($C1FE), a
	ret

; 1st entry of Jump Table from B306 (indexed by, $C1FE)
LABEL_B31C:
	ld a, $50
	ld ($C201), a
	ld a, $68
	ld ($C203), a
	xor a
	ld ($C1FF), a
	inc a
	ld ($C1FE), a
	ret

; 2nd entry of Jump Table from B306 (indexed by, $C1FE)
LABEL_B32F:
	ld a, ($C176)
	and a
	jr nz, ++++_
	ld a, ($C203)
	sub $01
	ld ($C203), a
	cp $50
	jr nz, +++_
	ld a, ($C181)
	and a
	jr nz, +_
	ld a, ($C20A)
	and a
	jr nz, +_
	ld a, $02
	jr ++_

_:
	ld a, $03
_:
	ld ($C1FE), a
	ld a, $02
	ld ($C1FF), a
_:
	ld a, ($C181)
	and a
	jr z, +_
	ld ($C20A), a
_:
	ld a, ($C20A)
	and a
	jp z, LABEL_B3F7
	ld hl, ($C17F)
	ld a, h
	or l
	jp nz, LABEL_7E1E
	ld ($C20A), a
	jp LABEL_B3F7

; 3rd entry of Jump Table from B306 (indexed by, $C1FE)
LABEL_B378:
	ld a, $03
	ld ($C14F), a
	ld a, ($C17D)
	and a
	jr nz, +_
	ld hl, $10C8
	ld ($C208), hl
	jr +++++_

; Data from B38B to B392 (8 bytes)
.db $00, $E8, $00, $18, $E8, $00, $18, $00

_:
	ld a, ($C189)
	ld h, a
	ld a, ($C18B)
	ld l, a
	ld a, ($C201)
	sub h
	jr nc, +_
	neg
_:
	cp $30
	jr nc, ++_
	ld a, ($C203)
	sub l
	jr nc, +_
	neg
_:
	cp $30
	jr nc, +_
	ld hl, ($C11C)
_:
	ld ($C208), hl
_:
	ld a, ($C181)
	and a
	jr z, +_
	ld a, $03
	ld ($C1FE), a
	ld a, ($C1FF)
	call LABEL_7F15
	ld ($C1FF), a
	jr +++_

_:
	ld a, ($C198)
	and a
	jr z, +_
	ld a, ($C1FF)
	call LABEL_7F15
	ld ($C1FF), a
_:
	call LABEL_7EBF
	jr nc, +_
	ld a, $01
	ld ($C177), a
_:
	ld a, ($C167)
	ld ($C204), a
	ld a, ($C168)
	ld ($C207), a
	call LABEL_B4BD
LABEL_B3F7:
	ld hl, $C1FE
	ld a, $18
	jp LABEL_7E22

; 4th entry of Jump Table from B306 (indexed by, $C1FE)
LABEL_B3FF:
	ld a, ($C176)
	and a
	jp nz, LABEL_7E1E
	ld a, $01
	ld ($C14F), a
	ld hl, ($C11C)
	ld ($C208), hl
	call LABEL_7EEA
	jr nc, +_
	call LABEL_8697
	ld a, $05
	ld ($C1FE), a
	xor a
	ld ($C20A), a
	ret

_:	ld hl, ($C17F)
	ld a, h
	or l
	jr nz, +_
	ld ($C20A), a
	ld a, $02
	ld ($C1FE), a
_:
	ld a, ($C181)
	and a
	jr z, +_
	ld a, ($C1FF)
	call LABEL_7F15
	ld ($C1FF), a
_:
	ld a, ($C169)
	ld ($C204), a
	ld a, ($C16A)
	ld ($C207), a
	call LABEL_B4BD
	jp LABEL_7E1E

; 5th entry of Jump Table from B306 (indexed by, $C1FE)
LABEL_B453:
	xor a
	ld ($C14F), a
	ld hl, $5067
	ld ($C208), hl
	ld a, $F0
	ld ($C204), a
	ld a, $01
	ld ($C207), a
	ld a, ($C177)
	and a
	jr nz, LABEL_B4B7
	call LABEL_B4E0
	ld a, ($C201)
	cp $50
	jr nz, LABEL_B4B7
	ld a, ($C203)
	cp $67
	jr z, +_
	cp $68
	jr nz, LABEL_B4B7
_:
	ld a, ($C196)
	and $7F
	ld ($C196), a
	ld a, ($C20B)
	and a
	jr nz, +_
	ld a, ($C135)
	cp $04
	jr nz, +_
	ld a, ($C12F)
	or $08
	ld ($C12F), a
	ld a, ($C150)
	and $7F
	ld ($C150), a
	ret

_:	ld a, $01
	ld ($C1FE), a
	xor a
	ld ($C20B), a
	ld ($C1FF), a
	jp LABEL_B3F7

LABEL_B4B7:
	ld a, ($C1FF)
	jp LABEL_7F6A

LABEL_B4BD:
	ld a, ($C176)
	and a
	ret nz
	ld a, ($C203)
	cp $68
	jr nz, LABEL_B4E0
	ld a, ($C201)
	cp $20
	jr c, +_
	cp $80
	jr c, LABEL_B4E0
_:
	ld a, ($C16B)
	ld ($C204), a
	ld a, ($C16C)
	ld ($C207), a
LABEL_B4E0:
	ld a, ($C1FF)
	ld bc, $C204
	ld hl, DATA_7FE0
	rst $18	; LABEL_18
	call +_
	ld a, ($C1FF)
	ld bc, $C206
	ld hl, DATA_7FE0
	rst $18	; LABEL_18
_:
	cp h
	ret z
	ld a, ($C201)
	ld b, a
	and $07
	ret nz
	ld a, ($C203)
	ld c, a
	and $07
	ret nz
	call LABEL_8480
	call LABEL_7F57
	ld l, a
	ld a, ($C1FF)
	xor $01
	call LABEL_8498
	or l
	ld l, a
	and $0F
	cp $0F
	jr nz, +_
	ld a, $01
	jr ++_

_:
	ld de, ($C208)
	call LABEL_7E42
_:
	ld ($C1FF), a
	ret

LABEL_B52D:
	ld hl, $C000
	ld (hl), $00
	ld de, $C000 + 1
	ld bc, $0100
	ldir
	ret

LABEL_B55C:
	ld de, $0000
	ld ix, $C000
	ld (ix+0), d
	ld (ix+18), d
	ld (ix+50), d
	ld (ix+82), d
	ld (ix+96), d
	ld (ix+114), d
	ld ix, $C080
	ld (ix+0), d
	ld (ix+18), d
	ret

LABEL_B580:
	ld hl, DATA_B8B2 - 2
	cp (hl)
	jr c, ++_
	inc hl
	cp (hl)
	jr c, +_
	ld ix, $C080
	jr LABEL_B59B

_:
	ld ix, $C060
	jr LABEL_B59B

_:
	ld ix, $C000
	inc hl
LABEL_B59B:
	ld (ix+1), a
	inc hl
	rst $08	; LABEL_8
	ld c, (hl)
	inc hl
	ld a, (hl)
	ld (ix+6), c
	ld (ix+7), a
	ld (ix+0), $01
	xor a
	ld (ix+2), a
	ld (ix+3), a
	ld (ix+9), a
	ld (ix+10), a
	ld b, (ix+5)
	or b
	ret z
	ld (ix+5), $00
_:
	ld (ix+18), $00
	ld de, $0020
	add ix, de
	djnz -_
	ret

LABEL_B5CF:
	ld hl, DATA_B8B2 - 2
	inc hl
	ld ix, $C0A0
	ld (ix+32), $01
	call LABEL_B59B
	ret

LABEL_B5E2:
	xor a
	ld ($C0C0), a
	ret

LABEL_B5EA:
	ld a, ($C0C0)
	and a
	jp nz, LABEL_B647
	ld ix, $C000
	call LABEL_B67E
	ld ix, $C060
	call LABEL_B67E
	ld ix, $C080
	call LABEL_B67E
	ld ix, $C000
	ld d, $80
	ld b, $1F
	ld c, $00
	ld a, (ix+96)
	and a
	jr nz, +_
	ld ix, $C020
	jr ++_

_:
	ld ix, $C060
_:
	ld d, $A0
	ld ix, $C080
	ld a, (ix+0)
	and a
	jr nz, +_
	ld ix, $C040
	jr ++_

_:
	ld ix, $C080
_:
	ld d, $C0
	ret

LABEL_B647:
	ld ix, $C0A0
	call LABEL_B67E
	ld ix, $C0A0
	ld d, $80
	ld b, $1F
	rrc c
	rrc c
	rrc c
	ld a, c
	ret


LABEL_B67E:
	ld a, (ix+0)
	and a
	ret z
	ld ($C0C4), ix
	ld a, (ix+2)
	cp (ix+3)
	jr nz, +_
	ld (ix+3), $00
	call LABEL_B6E1
_:
	ld a, (ix+5)
	and a
	ret z
	ld b, a
_:
	ld a, (ix+26)
	and a
	jr z, +++_
	ld a, (ix+13)
	cp $FF
	jr z, +_
	cp (ix+14)
	jr z, ++_
	inc (ix+14)
_:
	ld a, (ix+12)
	jr ++_

_:
	inc (ix+16)
	ld a, (ix+15)
	and a
	jr z, +_
	cp (ix+16)
	jr nz, ++_
	ld a, (ix+18)
	and a
	jr z, ++_
	dec a
	ld (ix+16), $00
_:
	ld (ix+18), a
_:
	ld de, $0020
	add ix, de
	djnz -----_
	ld ix, ($C0C4)
	inc (ix+3)
	ret

LABEL_B6E1:
	ld e, (ix+6)
	ld d, (ix+7)
LABEL_B6E7:
	ld a, (de)
	ld c, a
	and $0F
	ld hl, DATA_B6F0
	rst $10	; LABEL_10
	jp (hl)

; Jump Table from B6F0 to B70F (16 entries, indexed by unknown)
DATA_B6F0:
.dw LABEL_B710, LABEL_B79C, LABEL_B79C, LABEL_B783, LABEL_B79C, LABEL_B7DE, LABEL_B79C, DATA_B838
.dw LABEL_B7AD, LABEL_B7B5, LABEL_B7B1, LABEL_B7A1, LABEL_B79D, LABEL_B79C, LABEL_B7A9, LABEL_B79C

; 1st entry of Jump Table from B6F0 (indexed by unknown)
LABEL_B710:
	inc de
	sla c
	jr c, +++_
	jr z, +_
	ld a, (de)
	ld (ix+2), a
	inc de
	jr LABEL_B6E7

_:
	ld a, (de)
	ex de, hl
	ld (ix+5), a
	ld b, a
	xor a
_:
	ld (ix+18), a
	ld (ix+25), a
	ld (ix+27), a
	ld (ix+28), a
	ld (ix+31), $11
	ld (ix+13), $FF
	ld (ix+12), $0F
	ld (ix+15), a
	ld de, $0020
	add ix, de
	djnz -_
	ld ix, ($C0C4)
	ex de, hl
	inc de
	jr LABEL_B6E7

_:
	ld a, (ix+9)
	or (ix+10)
	jr nz, ++_
	ld (ix+0), a
	ld (ix+1), a
	ld b, (ix+5)
	ld (ix+5), a
_:
	ld (ix+18), a
	ld de, $0020
	add ix, de
	djnz -_
	ld ix, ($C0C4)
	pop de
	ret

_:
	ld e, (ix+9)
	ld d, (ix+10)
	xor a
	ld (ix+9), a
	ld (ix+10), a
	jp LABEL_B6E7

; 4th entry of Jump Table from B6F0 (indexed by unknown)
LABEL_B783:
	ex de, hl
	inc hl
	ld e, (hl)
	inc hl
	ld a, $03
	ld d, (hl)
	cp c
	jp z, LABEL_B6E7
	inc hl
	ld ix, ($C0C4)
	ld (ix+9), l
	ld (ix+10), h
	jp LABEL_B6E7

; 2nd entry of Jump Table from B6F0 (indexed by unknown)
LABEL_B79C:
	ret

; 13th entry of Jump Table from B6F0 (indexed by unknown)
LABEL_B79D:
	ld l, $1F
	jr +_

; 12th entry of Jump Table from B6F0 (indexed by unknown)
LABEL_B7A1:
	ld l, $0B
	jr +_

; Data from B7A5 to B7A8 (4 bytes)
	ld l, $1D
	jr +_

; 15th entry of Jump Table from B6F0 (indexed by unknown)
LABEL_B7A9:
	ld l, $19
	jr +_

; 9th entry of Jump Table from B6F0 (indexed by unknown)
LABEL_B7AD:
	ld l, $0D
	jr +_

; 11th entry of Jump Table from B6F0 (indexed by unknown)
LABEL_B7B1:
	ld l, $0C
	jr +_

; 10th entry of Jump Table from B6F0 (indexed by unknown)
LABEL_B7B5:
	ld l, $0F
_:	ex de, hl
	ld ix, ($C0C4)
	ld b, (ix+5)
	ld d, $00
	add ix, de
_:
	sla c
	jr nc, +_
	inc hl
	ld a, (hl)
	ld (ix+0), a
_:
	ld de, $0020
	add ix, de
	djnz --_
	inc hl
	ex de, hl
	ld ix, ($C0C4)
	jp LABEL_B6E7

; 6th entry of Jump Table from B6F0 (indexed by unknown)
LABEL_B7DE:
	ex de, hl
	xor a
	ld (ix+3), a
	ld (ix+16), a
	ld b, (ix+5)
_:
	sla c
	jr nc, LABEL_B81A
	ld (ix+14), $00
	ld (ix+16), $00
	inc hl
	ld a, (hl)
	and a
	jr z, ++_
	ld e, (ix+25)
	sla e
	add a, e
	ld (ix+26), a
	ld de, DATA_B838
	add a, e
	jr nc, +_
	inc d
_:
	ld e, a
	ld a, (de)
	ld (ix+27), a
	inc de
	ld a, (de)
	ld (ix+28), a
	ld a, (ix+12)
	ld (ix+18), a
LABEL_B81A:
	ld de, $0020
	add ix, de
	djnz --_
	ld ix, ($C0C4)
	inc hl
	ld (ix+6), l
	ld (ix+7), h
	ret

_:
	ld (ix+26), a
	ld (ix+27), a
	ld (ix+28), a
	jr LABEL_B81A

; Data from B838 to B8B1 (122 bytes)
DATA_B838:
.db $00, $00, $3F, $09, $3C, $00, $38, $0A, $35, $07, $32, $07, $2F, $0A, $2C, $0F
.db $2A, $07, $28, $01, $25, $0D, $23, $0B, $21, $0B, $1F, $0C, $1E, $00, $1C, $05
.db $1A, $0C, $19, $04, $17, $0D, $16, $08, $15, $03, $14, $00, $12, $0E, $11, $0D
.db $10, $0D, $0F, $0E, $0F, $00, $0E, $02, $0D, $06, $0C, $0A, $0B, $0E, $0B, $04
.db $0A, $0A, $0A, $00, $09, $07, $08, $0F, $08, $07, $07, $0F, $07, $08, $07, $01
.db $06, $0B, $06, $05, $05, $0F, $05, $0A, $05, $05, $05, $00, $04, $0C, $04, $07
.db $04, $03, $04, $00, $03, $0C, $03, $09
.fill 16, $FF
.db $0D, $14

; Pointer Table from B8B2 to B8E1 (24 entries, indexed by, $C192)
DATA_B8B2:
.dw DATA_BE72, DATA_BB9A, DATA_BADE, DATA_BA7E, DATA_B972, DATA_B9AB, DATA_B9E0, DATA_BA11
.dw DATA_BA3E, DATA_BA67, DATA_BB71, DATA_BCC2, DATA_BDEE, DATA_B920, DATA_B8E2, DATA_BF39
.dw DATA_B901, DATA_BF06, DATA_BF39, DATA_BF39, DATA_BF68, DATA_BF79, DATA_B93D, DATA_BE35

; 15th entry of Pointer Table from B8B2 (indexed by, $C192)
; Data from B8E2 to B900 (31 bytes)
DATA_B8E2:
.db $00, $01, $40, $01, $8E, $FB, $85, $64, $85, $5A, $85, $54, $85, $4C, $85, $42
.db $85, $3C, $85, $34, $85, $2A, $85, $24, $85, $1C, $85, $12, $85, $0C, $80

; 17th entry of Pointer Table from B8B2 (indexed by, $C192)
; Data from B901 to B91F (31 bytes)
DATA_B901:
.db $00, $01, $40, $01, $85, $56, $85, $4E, $85, $46, $85, $3C, $85, $32, $85, $28
.db $85, $1E, $85, $14, $85, $1E, $85, $28, $85, $32, $85, $3C, $85, $46, $80

; 14th entry of Pointer Table from B8B2 (indexed by, $C192)
; Data from B920 to B93C (29 bytes)
DATA_B920:
.db $00, $01, $40, $0C, $89, $02, $88, $01, $85, $5C, $85, $5C, $85, $5C, $85, $5C
.db $85, $5C, $85, $5C, $85, $5C, $85, $5C, $85, $5C, $85, $5C, $80

; 23rd entry of Pointer Table from B8B2 (indexed by, $C192)
; Data from B93D to B971 (53 bytes)
DATA_B93D:
.db $00, $01, $40, $01, $8E, $FD, $85, $60, $85, $5A, $85, $54, $85, $4E, $85, $46
.db $85, $3E, $85, $36, $85, $2C, $85, $22, $85, $18, $85, $0E, $85, $08, $85, $0E
.db $85, $18, $85, $22, $85, $2C, $85, $36, $85, $3E, $85, $46, $85, $4E, $85, $52
.db $85, $5A, $85, $60, $80

; 5th entry of Pointer Table from B8B2 (indexed by, $C192)
; Data from B972 to B9AA (57 bytes)
DATA_B972:
.db $00, $01, $40, $01, $8A, $0C
DATA_B978:
.db $85, $30, $85, $32, $85, $34, $85, $36, $85, $38
.db $85, $3A, $85, $3C, $85, $3E, $85, $40, $85, $42, $85, $44, $85, $46, $85, $48
.db $85, $46, $85, $44, $85, $42, $85, $40, $85, $3E, $85, $3C, $85, $3A, $85, $38
.db $85, $36, $85, $34, $85, $32, $03
.dw DATA_B978
; 6th entry of Pointer Table from B8B2 (indexed by, $C192)
; Data from B9AB to B9DF (53 bytes)
DATA_B9AB:
.db $00, $01, $40, $01, $8A, $0C, $85, $36, $85, $38, $85, $3A, $85, $3C, $85, $3E
.db $85, $40, $85, $42, $85, $44, $85, $46, $85, $48, $85, $4A, $85, $48, $85, $46
.db $85, $44, $85, $42, $85, $40, $85, $3E, $85, $3C, $85, $3A, $85, $38, $85, $36
.db $85, $34, $03
.dw DATA_B9AB + 6

; 7th entry of Pointer Table from B8B2 (indexed by, $C192)
; Data from B9E0 to BA10 (49 bytes)
DATA_B9E0:
.db $00, $01, $40, $01, $8A, $0C, $85, $40, $85, $42, $85, $46, $85, $48, $85, $4A
.db $85, $4C, $85, $4E, $85, $50, $85, $52, $85, $54, $85, $56, $85, $54, $85, $52
.db $85, $50, $85, $4E, $85, $4C, $85, $4A, $85, $48, $85, $46, $85, $42, $03
.dw DATA_B9E0 + 6

; 8th entry of Pointer Table from B8B2 (indexed by, $C192)
; Data from BA11 to BA3D (45 bytes)
DATA_BA11:
.db $00, $01, $40, $01, $8A, $0C, $85, $44, $85, $48, $85, $4C, $85, $50, $85, $52
.db $85, $54, $85, $56, $85, $58, $85, $5A, $85, $5C, $85, $5A, $85, $58, $85, $56
.db $85, $54, $85, $52, $85, $50, $85, $4C, $85, $48, $03
.dw DATA_BA11 + 6

; 9th entry of Pointer Table from B8B2 (indexed by, $C192)
; Data from BA3E to BA66 (41 bytes)
DATA_BA3E:
.db $00, $01, $40, $01, $8A, $0C, $85, $4A, $85, $4E, $85, $52, $85, $56, $85, $58
.db $85, $5A, $85, $5C, $85, $5E, $85, $60, $85, $5E, $85, $5C, $85, $5A, $85, $58
.db $85, $56, $85, $52, $85, $4E, $03
.dw DATA_BA3E + 6

; 10th entry of Pointer Table from B8B2 (indexed by, $C192)
; Data from BA67 to BA7D (23 bytes)
DATA_BA67:
.db $00, $01, $40, $01, $85, $08, $85, $14, $85, $20, $85, $2C, $85, $38, $85, $44
.db $85, $50, $85, $5C, $03
.dw DATA_BA67 + 6

; 4th entry of Pointer Table from B8B2 (indexed by, $C192)
; Data from BA7E to BADD (96 bytes)
DATA_BA7E:
.db $00, $02, $89, $01, $C8, $01, $05, $40, $06, $83, $B3, $BA, $CE, $01, $01, $83
.db $B3, $BA, $CE, $00, $00, $83, $B3, $BA, $40, $08, $C5, $62, $2A, $85, $62, $40
.db $02, $85, $62, $40, $06, $45, $2A, $40, $08, $C9, $03, $03, $C5, $62, $2A, $05
.db $05, $05, $05, $05, $80, $C5, $50, $12, $85, $4A, $85, $42, $C5, $50, $12, $C5
.db $4A, $12, $85, $42, $85, $50, $C5, $4A, $12, $C5, $42, $12, $85, $50, $85, $4A
.db $C5, $42, $12, $C5, $38, $1A, $C5, $32, $1C, $C5, $2A, $1E, $C5, $50, $20, $80

; 3rd entry of Pointer Table from B8B2 (indexed by, $C192)
; Data from BADE to BB70 (147 bytes)
DATA_BADE:
.db $00, $03, $E9, $01, $01, $01, $6E, $F4, $F4, $E8, $01, $01, $01, $83, $F5, $BA
.db $83, $F5, $BA, $83, $31, $BB, $80, $40, $02, $E5, $60, $00, $28, $40, $05, $25
.db $2A, $40, $07, $85, $62, $85, $60, $A5, $62, $38, $A5, $5A, $00, $05, $A5, $50
.db $38, $25, $00, $A5, $56, $2A, $05, $40, $05, $85, $54, $40, $02, $85, $56, $40
.db $03, $25, $38, $40, $04, $85, $54, $40, $07, $A5, $50, $00, $05, $A5, $00, $38
.db $25, $00, $80, $40, $02, $E5, $48, $5A, $36, $40, $05, $25, $38, $40, $07, $C5
.db $60, $5A, $C5, $5E, $54, $25, $38, $E5, $5A, $50, $00, $05, $E5, $54, $32, $38
.db $25, $00, $C9, $03, $03, $E5, $5A, $50, $2A, $05, $40, $0B, $05, $40, $01, $C5
.db $48, $3E, $C5, $46, $3C, $C5, $44, $3A, $40, $15, $E5, $42, $38, $2A, $E5, $00
.db $00, $00, $80

; 11th entry of Pointer Table from B8B2 (indexed by, $C192)
; Data from BB71 to BB99 (41 bytes)
DATA_BB71:
.db $00, $01, $40, $01, $8A, $0F, $85, $64, $85, $60, $85, $5C, $85, $58, $85, $54
.db $85, $50, $85, $4C, $85, $48, $85, $44, $85, $40, $85, $3C, $85, $38, $85, $34
.db $85, $30, $85, $2C, $85, $28, $03 
.dw DATA_BB71 + 6

; 2nd entry of Pointer Table from B8B2 (indexed by, $C192)
; Data from BB9A to BCC1 (296 bytes)
DATA_BB9A:
.db $00, $02, $40, $14, $49, $02, $48, $01, $83, $9E, $BC, $C5, $42, $12, $05, $85
.db $00, $85, $42, $45, $00, $05, $05, $C5, $48, $12, $85, $4A, $05, $40, $01, $45
.db $1A, $05, $05, $05, $45, $00, $45, $1C, $05, $05, $05, $45, $00, $C5, $00, $1E
.db $05, $05, $05, $45, $00, $45, $20, $05, $05, $05, $45, $00, $83, $9E, $BC, $C5
.db $42, $12, $05, $85, $00, $85, $42, $45, $00, $05, $05, $C5, $3A, $12, $85, $3C
.db $05, $40, $01, $45, $1A, $05, $05, $05, $45, $00, $45, $1C, $05, $05, $05, $45
.db $00, $C5, $00, $1E, $05, $05, $05, $45, $00, $45, $20, $05, $05, $05, $45, $00
.db $83, $9E, $BC, $C5, $42, $12, $05, $85, $00, $85, $42, $45, $00, $05, $05, $C5
.db $46, $12, $85, $48, $05, $40, $01, $45, $1A, $05, $05, $05, $C5, $4A, $00, $45
.db $1C, $85, $4C, $05, $05, $45, $00, $45, $1E, $05, $05, $05, $C5, $00, $00, $45
.db $20, $85, $4C, $05, $85, $4E, $45, $00, $45, $2A
.fill 9, $05
.db $C5, $4A, $20, $05, $85, $4C, $05, $45, $00, $45, $1E, $05, $05, $05, $45, $00
.db $C5, $46, $1C, $05, $85, $48, $05, $45, $00, $45, $18, $05, $05, $05, $45, $00
.db $C5, $42, $12, $05, $05, $05, $45, $00, $45, $10, $05, $05, $05, $45, $00, $40
.db $02, $C5, $46, $0E, $85, $48, $05, $05, $45, $00, $45, $10, $85, $40, $85, $42
.db $05, $45, $00, $45, $12, $05, $05, $05, $05, $85, $00, $45, $00, $05, $05, $05
.db $80, $40, $02, $C5, $40, $12, $85, $42, $05, $05, $05, $85, $40, $85, $42, $45
.db $12, $05, $05, $C5, $40, $12, $85, $42, $05, $05, $05, $85, $3A, $85, $3C, $45
.db $12, $85, $38, $05, $80

; 12th entry of Pointer Table from B8B2 (indexed by, $C192)
; Data from BCC2 to BDED (300 bytes)
DATA_BCC2:
.db $00, $03, $40, $02, $EC, $11, $01, $10, $85, $42, $85, $40, $85, $3C, $85, $3A
.db $85, $3E, $85, $40, $6A, $0C, $0A, $C5, $40, $42, $C5, $3E, $40, $C5, $3A, $3C
.db $C5, $38, $3A, $C5, $3C, $3E, $C5, $3E, $40, $8A, $0E, $E5, $3E, $40, $42, $E5
.db $3C, $3E, $40, $E5, $38, $3A, $3C, $E5, $36, $38, $3A, $E5, $3A, $3C, $3E, $E5
.db $3C, $3E, $40, $E5, $3C, $3E, $40, $E5, $3A, $3C, $3E, $E5, $36, $38, $3A, $E5
.db $34, $36, $38, $E5, $38, $3A, $3C, $E5, $3A, $3C, $3E, $EA, $0D, $0B, $09, $E5
.db $3A, $3C, $3E, $E5, $38, $3A, $3C, $E5, $34, $36, $38, $E5, $32, $34, $36, $E5
.db $36, $38, $3A, $E5, $38, $3A, $3C, $E5, $38, $3A, $3C, $E5, $36, $38, $3A, $E5
.db $32, $34, $36, $E5, $30, $32, $34, $E5, $34, $36, $38, $E5, $36, $38, $3A, $EA
.db $0C, $0A, $08, $E5, $36, $38, $3A, $E5, $34, $36, $38, $E5, $30, $32, $34, $E5
.db $2E, $30, $32, $E5, $32, $34, $36, $E5, $34, $36, $38, $E5, $34, $36, $38, $E5
.db $32, $34, $36, $E5, $2E, $30, $32, $E5, $2C, $2E, $30, $E5, $30, $32, $34, $E5
.db $32, $34, $36, $EA, $0B, $09, $07, $E5, $32, $34, $36, $E5, $30, $32, $34, $E5
.db $2C, $2E, $30, $E5, $2A, $2C, $2E, $E5, $2E, $30, $32, $E5, $30, $32, $34, $E5
.db $30, $32, $34, $E5, $2E, $30, $32, $E5, $2A, $2C, $2E, $E5, $28, $2A, $2C, $E5
.db $2C, $2E, $30, $E5, $2E, $30, $32, $EA, $0A, $08, $06, $E5, $2E, $30, $32, $E5
.db $2C, $2E, $30, $E5, $28, $2A, $2C, $E5, $26, $28, $2A, $E5, $2A, $2C, $2E, $E5
.db $2C, $2E, $30, $E5, $2C, $2E, $30, $E5, $2A, $2C, $2E, $E5, $26, $28, $2A, $E5
.db $24, $26, $28, $E5, $28, $2A, $2C, $E5, $2A, $2C, $2E, $80

; 13th entry of Pointer Table from B8B2 (indexed by, $C192)
; Data from BDEE to BE34 (71 bytes)
DATA_BDEE:
.db $00, $03, $40, $01, $EA, $0F, $0C, $0A, $EC, $11, $01, $10, $85, $12, $85, $1C
.db $85, $26, $85, $2E, $C5, $36, $12, $C5, $3E, $1C, $C5, $44, $26, $C5, $4A, $2E
.db $E5, $4E, $36, $12, $E5, $52, $3E, $1C, $E5, $56, $44, $26, $E5, $5A, $4A, $2E
.db $E5, $00, $4E, $36, $65, $52, $3E, $65, $56, $44, $65, $5A, $4A, $65, $00, $4E
.db $25, $52, $25, $56, $25, $5A, $80

; 24th entry of Pointer Table from B8B2 (indexed by, $C192)
; Data from BE35 to BE71 (61 bytes)
DATA_BE35:
.db $00, $01, $40, $01, $85, $06, $85, $0E, $85, $14, $85, $1A, $85, $1E, $85, $22
.db $85, $26, $85, $2A, $85, $2E, $85, $32, $85, $34, $85, $36, $85, $38, $85, $3A
.db $85, $3C, $85, $3E, $85, $40, $85, $42, $85, $44, $85, $46, $85, $48, $85, $4A
.db $85, $4E, $85, $52, $85, $56, $85, $5A, $85, $5E, $85, $62, $80

; 1st entry of Pointer Table from B8B2 (indexed by, $C192)
; Data from BE72 to BF05 (148 bytes)
DATA_BE72:
.db $00, $02, $40, $04, $49, $01, $48, $01, $C5, $38, $08, $85, $00, $85, $50, $85
.db $00, $C5, $46, $00, $85, $00, $C5, $40, $16, $85, $00, $C5, $50, $08, $85, $46
.db $85, $00, $05, $C5, $40, $00, $05, $C5, $00, $16, $05, $C5, $3A, $0A, $85, $00
.db $85, $52, $85, $00, $C5, $48, $00, $85, $00, $C5, $42, $18, $85, $00, $C5, $52
.db $0A, $85, $48, $85, $00, $05, $C5, $42, $00, $05, $C5, $00, $18, $05, $C5, $38
.db $08, $85, $00, $85, $50, $85, $00, $C5, $46, $00, $85, $00, $C5, $40, $16, $85
.db $00, $C5, $50, $08, $85, $46, $85, $00, $05, $C5, $40, $00, $05, $C5, $00, $16
.db $05, $C5, $3E, $16, $85, $40, $85, $42, $85, $00, $C5, $42, $1A, $85, $44, $85
.db $46, $85, $00, $C5, $46, $1E, $85, $48, $85, $4A, $85, $00, $C5, $50, $20, $05
.db $85, $00, $05, $80

; 18th entry of Pointer Table from B8B2 (indexed by, $C192)
; Data from BF06 to BF38 (51 bytes)
DATA_BF06:
.db $00, $01, $40, $01, $8E, $FE, $85, $3C, $85, $44, $85, $4A, $85, $50, $85, $00
.db $05, $85, $54, $85, $38, $85, $4A, $85, $44, $85, $00, $05, $85, $44, $85, $4C
.db $85, $52, $85, $58, $85, $00, $05, $85, $5C, $85, $58, $85, $52, $85, $4C, $85
.db $00, $05, $80

; 16th entry of Pointer Table from B8B2 (indexed by, $C192)
; Data from BF39 to BF67 (47 bytes)
DATA_BF39:
.db $40, $1E, $00, $01, $8C, $01, $85, $38, $85, $3C, $85, $40, $85, $42, $85, $46
.db $85, $00, $8C, $10, $85, $38, $85, $3C, $85, $40, $85, $42, $85, $46, $85, $00
.db $8C, $11, $85, $38, $85, $3C, $85, $40, $85, $42, $85, $46, $85, $00, $80

; 21st entry of Pointer Table from B8B2 (indexed by, $C192)
; Data from BF68 to BF78 (17 bytes)
DATA_BF68:
.db $00, $01, $40, $01, $85, $4E, $85, $46, $85, $3E, $85, $36, $85, $2E, $85, $26
.db $80

; 22nd entry of Pointer Table from B8B2 (indexed by, $C192)
; Data from BF79 to BF89 (17 bytes)
DATA_BF79:
.db $00, $01, $40, $01, $85, $26, $85, $2E, $85, $36, $85, $3E, $85, $46, $85, $4E
.db $80

LABEL_BF8A:
	ld a, ($C176)
	dec a
	ld ($C176), a
	jr nz, +_
	ld hl, LABEL_97B7
	ld ($C20C), hl
	ld hl, LABEL_8893
	ld ($C212), hl
	ld a, $01
	ld ($C146), a
	ret

_:	call LABEL_87BF
	push ix
	pop hl
	ld c, $48
	ld a, ($C11E)
	and a
	jr z, +_
	ld c, $64
_:
	ld b, $06
_:
	ld (hl), c
	inc hl
	djnz -_
	push iy
	pop hl
	ld c, $68
	ld a, ($C11E)
	and a
	jr z, +_
	ld c, $50
_:	ld a, c
	ld bc, $060E
_:
	ld (hl), a
	add a, $08
	inc hl
	ld (hl), c
	inc hl
	inc c
	djnz -_
	ld a, ($C120)
	add a, $05
	ld ($C120), a
	ret

UpdateTiles:
	ld hl, $C4B7
UpdateTilesLoop:	
	ld a, (hl)
	and a
	ret z

	push af
	ld a, 3
	ld (DrawTilemapTrig), a
	pop af

	ld (hl), $00
	inc hl
	inc de

	push af
	ld e, (hl)
	inc hl
	ld d, (hl)
	ld a, d
	cp $C0			; check for palette update
	jp z, UpdatePalette

	res 6, d
	ld.lil ix, SegaVRAM
	add.lil ix, de
	lea.lil de, ix
	inc hl

	pop af
	ld.lil bc, romStart
	add.lil hl, bc
	ld bc, 0
	ld c, a
	ldir.lil
	jr UpdateTilesLoop


UpdatePalette:
	ld.lil ix, CRAM
	ld d, 0
	add.lil ix, de
	lea.lil de, ix
	inc hl

	pop af
	ld.lil bc, romStart
	add.lil hl, bc
	ld bc, 0
	ld c, a
	ldir.lil
	jp UpdateTilesLoop

ClearTileCache:
	ld.lil hl, SegaTileFlags
	ld.lil de, SegaTileFlags+1
	ld bc, $01C0
	ld.lil (hl), $00
	ldir.lil
	ret
	
#define SegaTileCache	RenderedScreenMap + (256*224)

#include "src/includes/ti_equates.asm"

#include "src/PacGG/screen_drawing_routines.asm"